main() {
  Execution directory: /Users/ms75986/Desktop/Fall2019/NLP/Project2/hw2-distrib-2/state/execs/130.exec
  DataManager.loadExamples {
    Reading general {
      Path: evaluator/domains/dbquery/geoquery/1/geoquery.dlog {
        Parsing evaluator/domains/dbquery/geoquery/1/geoquery.dlog
        89 statements
        Parsing evaluator/domains/dbquery/geoquery/1/../../general/predicates.dlog
        49 statements
        Parsing evaluator/domains/dbquery/geoquery/1/geobase.dlog
        698 statements
      } [2.0s, cum. 2.0s]
      Path: evaluator/domains/dbquery/geoquery/1/lexicon.dlog {
        Parsing evaluator/domains/dbquery/geoquery/1/lexicon.dlog
        5 statements
        Parsing evaluator/domains/dbquery/geoquery/1/../../general/lexicon.dlog
        31 statements
        Parsing evaluator/domains/dbquery/geoquery/1/lexicon0.dlog
        5 statements
      }
      Path: /var/folders/jv/b55j3hps3_ldqm399ly0t81w0000gp/T/tmpe6f2k58p.dlog {
        Parsing /var/folders/jv/b55j3hps3_ldqm399ly0t81w0000gp/T/tmpe6f2k58p.dlog {
          DatalogParser.loadSafe(): start
          _parse([query], answer(A,longest(A,(river(A),traverse(A,B),state(B),next_to(B,C),most(C,D,(state(C),next_to(C,D),state(D))))))).
          _parse([query], answer(A,(population(B,A),capital(B),loc(B,C),largest(C,(state(C),const(D,riverid(mississippi)),traverse(D,C)))))).
          _parse([query], answer(A,largest(A,(state(A),next_to(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,countryid(usa)))))))).
          _parse([query], answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))).
          _parse([query], answer(A,(high_point(B,A),state(B),low_point(B,C),elevation(C,0.0)))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),state(C),loc(D,C),capital(D),const(D,cityid(atlanta,_))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),state(B),const(B,stateid(oregon)))))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,countryid(usa))))))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),largest(D,(state(C),population(C,D)))))).
          _parse([query], answer(A,longest(A,(river(A),traverse(A,B),state(B),next_to(B,C),const(C,stateid(tennessee)))))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,countryid(usa))))))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),state(B),next_to(B,C),largest(C,state(C)))))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)))).
          _parse([query], answer(A,largest(A,(state(A),next_to(A,B),largest(C,(state(B),population(B,C))))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),state(C),next_to(C,D),state(D),next_to(D,E),const(E,stateid(texas))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),state(B),loc(C,B),capital(C),const(C,cityid("des moines",_)))))).
          _parse([query], answer(A,(state(A),loc(B,A),capital(B),high_point(A,B)))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),smallest(B,(state(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(capital(A),city(A),loc(A,B),largest(B,(state(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(density(B,A),smallest(C,(state(B),population(B,C)))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),smallest(B,(state(B),loc(B,C),const(C,countryid(usa)))))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),smallest(B,(state(B),loc(B,C),const(C,countryid(usa)))))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),most(B,C,(state(B),traverse(C,B),river(C))))))).
          _parse([query], answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa)),shortest(D,river(D)),traverse(D,B)),A))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)))).
          _parse([query], answer(A,(population(B,A),largest(C,(state(B),density(B,C)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),state(B),loc(C,B),capital(C),const(C,cityid("des moines",_)))))).
          _parse([query], answer(A,count(B,(river(B),\+(traverse(B,C),state(C),loc(D,C),capital(D),const(D,cityid(albany,_)))),A))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),largest(C,(state(B),area(B,C))))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),smallest(C,(state(B),population(B,C))))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),state(B),loc(C,B),highest(C,place(C)))))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),largest(C,(state(B),area(B,C))))))).
          _parse([query], answer(A,(density(B,A),smallest(C,(state(B),area(B,C)))))).
          _parse([query], answer(A,(area(B,A),smallest(C,(state(B),density(B,C)))))).
          _parse([query], answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))).
          _parse([query], answer(A,(capital(A),loc(A,B),most(B,C,(state(B),next_to(B,C),state(C)))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,fewest(A,B,(state(A),next_to(A,B),state(B),\+const(A,stateid(alaska)),\+const(A,stateid(hawaii)))))).
          _parse([query], answer(A,(size(B,A),largest(B,(state(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(population(B,A),major(B),city(B),loc(B,C),const(C,stateid(montana))))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,countryid(usa)),loc(C,A),const(C,cityid(springfield,_))))).
          _parse([query], answer(A,sum(B,(state(B),next_to(C,B),const(C,stateid(texas))),population(B),A))).
          _parse([query], answer(A,(population(B,A),capital(B),loc(B,C),largest(C,state(C))))).
          _parse([query], answer(A,(capital(A),city(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,(area(B,A),state(B),loc(C,B),capital(C),const(C,cityid(albany,_))))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,largest(B,(state(A),const(C,riverid(mississippi)),traverse(C,A),population(A,B))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,(state(A),loc(B,A),lowest(B,place(B))))).
          _parse([query], answer(A,(capital(A),loc(A,B),state(B),loc(C,B),highest(C,place(C))))).
          _parse([query], answer(A,longest(A,(river(A),\+(traverse(A,B),const(B,stateid(texas))))))).
          _parse([query], answer(A,(capital(A),loc(A,B),highest(C,(state(B),loc(C,B),place(C)))))).
          _parse([query], answer(A,(density(B,A),state(B),loc(C,B),capital(C),const(C,cityid(austin,_))))).
          _parse([query], answer(A,(len(B,A),longest(B,(river(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(population(B,A),largest(B,(state(B),next_to(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(density(B,A),const(B,countryid(usa))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),most(C,D,(state(C),next_to(C,D),state(D)))),A))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),largest(D,(state(C),population(C,D)))),A))).
          _parse([query], answer(A,(state(A),traverse(B,A),largest(B,(river(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),state(C),loc(D,C),capital(D),const(D,cityid(boston,_))),A))).
          _parse([query], answer(A,count(B,(city(B),const(B,cityid(austin,_)),loc(B,C),const(C,countryid(usa))),A))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(colorado)),river(B),loc(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,(state(A),high_point(A,B),higher(B,C),high_point(D,C),const(D,stateid(colorado))))).
          _parse([query], answer(A,(population(B,A),major(B),city(B),loc(B,C),const(C,stateid(wisconsin))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(missouri))))).
          _parse([query], answer(A,(river(A),traverse(A,B),largest(C,(state(B),population(B,C)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(california)))))).
          _parse([query], answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(texas)),population(A,B))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(texas)),longer(B,D),const(D,riverid(red))),A))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),largest(C,state(C))))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),major(B),river(B),traverse(B,A))))).
          _parse([query], answer(A,largest(A,(state(A),traverse(B,A),const(B,riverid(mississippi)))))).
          _parse([query], answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(texas)),population(A,B))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(mountain(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(state(A),longest(B,(river(B),traverse(B,A)))))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B),loc(A,C),const(C,countryid(usa)))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),state(B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(loc(B,A),state(A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(density(B,A),const(B,countryid(usa))))).
          _parse([query], answer(A,longest(A,(river(A),traverse(A,B),const(B,stateid(colorado)))))).
          _parse([query], answer(A,(size(B,A),capital(B),loc(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(state(A),loc(B,A),highest(B,place(B))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(colorado)),next_to(B,D),const(D,stateid("new mexico"))),A))).
          _parse([query], answer(A,sum(B,state(B),area(B),A))).
          _parse([query], answer(A,highest(A,(mountain(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(len(B,A),shortest(B,(river(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(density(B,A),smallest(B,state(B))))).
          _parse([query], answer(A,largest(B,(state(A),next_to(A,C),const(C,stateid(texas)),population(A,B))))).
          _parse([query], answer(A,(state(A),next_to(A,B),longest(B,(river(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(maryland))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,(river(A),loc(A,B),state(B),const(B,stateid(texas))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(kentucky))),A))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(capital(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,count(B,(state(B),const(C,riverid(colorado)),river(C),traverse(C,B)),A))).
          _parse([query], answer(A,(state(A),loc(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,largest(B,(population(A,B),capital(A),loc(A,C),const(C,countryid(usa)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(nevada))))).
          _parse([query], answer(A,(state(A),largest(B,(city(B),loc(B,C),const(C,stateid(montana)))),loc(B,A)))).
          _parse([query], answer(A,count(B,(state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)),A))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),state(C),next_to(C,D),const(D,stateid(utah))),A))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,(population(B,A),capital(B),loc(B,C),const(C,stateid(georgia))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(mississippi)))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),state(C)),A))).
          _parse([query], answer(A,count(B,(state(B),loc(C,B),city(C),const(C,cityid(springfield,_))),A))).
          _parse([query], answer(A,count(B,(state(B),const(C,riverid(missouri)),river(C),traverse(C,B)),A))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(state(A),loc(B,A),largest(C,(city(B),population(B,C)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),smallest(B,state(B)))))).
          _parse([query], answer(A,count(B,(river(B),traverse(B,C),state(C),next_to(C,D),const(D,stateid(colorado))),A))).
          _parse([query], answer(A,(major(A),lake(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),river(B),traverse(B,A))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),river(B),traverse(B,A))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),largest(B,state(B))))).
          _parse([query], answer(A,largest(B,(population(A,B),state(A),loc(A,C),const(C,countryid(usa)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid("rhode island")))))).
          _parse([query], answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(alabama)),state(B)))).
          _parse([query], answer(A,(state(A),loc(B,A),lowest(B,place(B))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(ohio))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid("south carolina")))))).
          _parse([query], answer(A,(state(A),\+(next_to(A,B),state(B))))).
          _parse([query], answer(A,(state(A),shortest(B,river(B)),traverse(B,A)))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid("new york")))))).
          _parse([query], answer(A,count(B,(city(B),loc(B,C),const(C,countryid(usa))),A))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(size(B,A),const(B,cityid("new york",_))))).
          _parse([query], answer(A,(major(A),river(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(california)))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,smallest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(state(A),const(B,riverid(colorado)),traverse(B,A)))).
          _parse([query], answer(A,(capital(A),loc(A,B),state(B),const(B,stateid(texas))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,count(B,(state(B),loc(C,B),const(C,cityid(springfield,_))),A))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),const(C,stateid("new mexico"))))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),const(C,stateid(alabama)),next_to(C,B)))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid("new mexico")))))).
          _parse([query], answer(A,largest(B,(state(C),capital(C,A),population(A,B))))).
          _parse([query], answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa))),A))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(oregon))),A))).
          _parse([query], answer(A,smallest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(state(A),city(B),const(B,cityid(denver,_)),loc(B,A)))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))).
          _parse([query], answer(A,count(B,(state(B),const(C,riverid(mississippi)),traverse(C,B)),A))).
          _parse([query], answer(A,(area(B,A),largest(B,state(B))))).
          _parse([query], answer(A,largest(B,(population(A,B),state(A),next_to(A,C),const(C,stateid(oklahoma)))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(delaware))))))).
          _parse([query], answer(A,(size(B,A),largest(B,(city(B),loc(B,C),const(C,stateid(alaska))))))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(state(A),loc(B,A),major(B),city(B),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(state(A),const(B,riverid(colorado)),river(B),traverse(B,A)))).
          _parse([query], answer(A,(major(A),lake(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(florida))))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid("south dakota"))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid("new mexico")))))).
          _parse([query], answer(A,(area(B,A),smallest(B,state(B))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,(capital(A),loc(A,B),largest(B,state(B))))).
          _parse([query], answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa))),A))).
          _parse([query], answer(A,largest(A,(capital(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,largest(B,(population(A,B),city(A),loc(A,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(texas)),population(A,B))))).
          _parse([query], answer(A,smallest(A,(state(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(state(A),const(B,riverid(missouri)),traverse(B,A)))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new york"))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid("north carolina"))))).
          _parse([query], answer(A,(state(A),const(B,riverid(ohio)),river(B),traverse(B,A)))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid("rhode island"))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(pennsylvania)))))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(nebraska)))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(colorado))),A))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(california)))))).
          _parse([query], answer(A,largest(B,(const(C,stateid(texas)),city(A),loc(A,C),population(A,B))))).
          _parse([query], answer(A,(const(B,cityid(sacramento,_)),capital(B),loc(B,A),state(A)))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boston,ma))))).
          _parse([query], answer(A,(state(A),largest(B,(state(A),area(A,B)))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(california))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(washington)))))).
          _parse([query], answer(A,largest(A,(river(A),loc(A,B),const(B,stateid(illinois)))))).
          _parse([query], answer(A,(next_to(A,B),state(A),const(B,stateid(california))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(georgia)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(michigan)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new york"))))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(state(A),const(B,cityid(austin,_)),capital(B),loc(B,A)))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(portland,me))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(mississippi)))))).
          _parse([query], answer(A,count(B,(city(B),const(C,countryid(usa)),loc(B,C)),A))).
          _parse([query], answer(A,(state(A),const(B,riverid(colorado)),river(B),traverse(B,A)))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(spokane,wa))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(alaska)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new york"))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(pennsylvania)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(kansas))))).
          _parse([query], answer(A,(elevation(B,A),const(B,placeid("mount mckinley"))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),const(C,stateid(colorado))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(arkansas)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(wisconsin)))))).
          _parse([query], answer(A,(area(B,A),const(B,countryid(usa))))).
          _parse([query], answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))).
          _parse([query], answer(A,(state(A),longest(B,river(B)),traverse(B,A)))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(mississippi))))).
          _parse([query], answer(A,most(A,B,(river(A),traverse(A,B),state(B))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(missouri)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(springfield,mo))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,tx))))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(wyoming))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(washington,dc))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(delaware))))).
          _parse([query], answer(A,(state(A),const(B,cityid(columbus,_)),capital(B),loc(B,A)))).
          _parse([query], answer(A,(area(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,riverid(mississippi)),river(C)),A))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(wisconsin)))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(colorado)))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid("rio grande")),river(B)))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(alaska)))))).
          _parse([query], answer(A,highest(A,(mountain(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new hampshire"))))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(iowa)))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(seattle,wa))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(kansas)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(alabama)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(montana))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(area(B,A),state(B)))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),largest(C,state(C))),A))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(wyoming)))))).
          _parse([query], answer(A,count(B,(state(B),loc(C,B),city(C),const(C,cityid(austin,_))),A))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(florida))),A))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("south dakota"))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,tx))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(oregon)))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid("new hampshire"))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(washington,dc))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(idaho))),A))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(arizona)))))).
          _parse([query], answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,smallest(A,(state(A),next_to(A,B),const(B,stateid(ohio)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(colorado)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(florida)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(kansas)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(nebraska)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(oregon)))))).
          _parse([query], answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,smallest(B,(state(A),area(A,B))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(iowa)))))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(hawaii)))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(louisiana)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid("san francisco",_))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(wyoming)))))).
          _parse([query], answer(A,(river(A),traverse(A,B),largest(B,state(B))))).
          _parse([query], answer(A,(elevation(B,A),const(B,placeid("death valley"))))).
          _parse([query], answer(A,highest(A,(mountain(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(pennsylvania))),A))).
          _parse([query], answer(A,(river(A),\+(traverse(A,B),const(B,stateid(tennessee)))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(wyoming))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(ohio)))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("south dakota"))))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(arizona))),A))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(montana))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),loc(B,A),city(B),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(california))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,riverid(colorado))))).
          _parse([query], answer(A,count(B,(river(B),const(B,riverid(colorado))),A))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(riverside,_))))).
          _parse([query], answer(A,count(B,(city(B),const(C,stateid(texas)),loc(B,C)),A))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,largest(B,(state(A),loc(B,A),city(B))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(maryland))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(indiana))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),loc(B,A),city(B),const(B,cityid(flint,_))))).
          _parse([query], answer(A,largest(B,(city(A),population(A,B))))).
          _parse([query], answer(A,count(B,(state(B),const(C,stateid(iowa)),next_to(C,B)),A))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(california))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(denver,_))))).
          _parse([query], answer(A,count(B,(river(B),traverse(B,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,(lake(A),loc(A,B),const(B,stateid(california))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(michigan))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(atlanta,_))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(seattle,_))))).
          _parse([query], answer(A,count(B,(state(B),loc(C,B),major(C),river(C)),A))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(dallas,_))))).
          _parse([query], answer(A,(state(A),loc(B,A),smallest(B,capital(B))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(california))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,cityid(springfield,_))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(minnesota))))).
          _parse([query], answer(A,count(B,(state(B),const(C,stateid(missouri)),next_to(C,B)),A))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(kalamazoo,_))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(montana))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid("west virginia"))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,riverid(mississippi)),river(B)))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boston,_))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(state(A),\+(next_to(A,B),state(B))))).
          _parse([query], answer(A,(state(A),loc(B,A),shortest(B,river(B))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(vermont))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(oregon))))).
          _parse([query], answer(A,largest(B,(capital(A),population(A,B))))).
          _parse([query], answer(A,highest(B,(state(A),loc(B,A),place(B))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(florida))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(virginia))))).
          _parse([query], answer(A,(state(A),loc(B,A),capital(B),const(B,cityid(salem,_))))).
          _parse([query], answer(A,most(A,B,(river(A),traverse(A,B),state(B))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(arizona))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(chicago,_))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(major(A),river(A),traverse(A,B),const(B,stateid(illinois))))).
          _parse([query], answer(A,count(B,(city(B),loc(B,C),const(C,stateid(montana))),A))).
          _parse([query], answer(A,smallest(B,(state(A),area(A,B))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(maine))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(idaho))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(major(A),lake(A),loc(A,B),const(B,stateid(michigan))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(illinois))))).
          _parse([query], answer(A,count(B,(city(B),loc(B,C),const(C,stateid(louisiana))),A))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(idaho))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),city(B))))).
          _parse([query], answer(A,(capital(A),\+(major(A),city(A))))).
          _parse([query], answer(A,(state(A),\+(next_to(A,B),state(B))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(montgomery,_))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(washington))))).
          _parse([query], answer(A,smallest(B,(city(A),population(A,B))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(washington))))).
          _parse([query], answer(A,(lake(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(missouri)),river(B)))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(california))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,cityid(austin,tx))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(maine))))).
          _parse([query], answer(A,count(B,(major(B),river(B),traverse(B,C),const(C,stateid(ohio))),A))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(alaska))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(pennsylvania))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(kansas))))).
          _parse([query], answer(A,count(B,(river(B),const(C,stateid(alaska)),loc(B,C)),A))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(maine))))).
          _parse([query], answer(A,longest(B,(state(A),loc(B,A),river(B))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(pennsylvania))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),loc(B,A),highest(B,place(B))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(washington))),A))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(tennessee))),A))).
          _parse([query], answer(A,(state(A),const(B,cityid(dallas,_)),loc(B,A)))).
          _parse([query], answer(A,(state(A),\+(loc(B,A),river(B))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(kansas))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(missouri))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(hawaii))),A))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(iowa))))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(arkansas))))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(oregon))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),river(B))))).
          _parse([query], answer(A,(mountain(A),loc(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid("new hampshire"))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(nevada))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(maine))))).
          _parse([query], answer(A,shortest(A,river(A)))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(virginia))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boulder,_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid("rhode island"))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boulder,_))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(arizona))))).
          _parse([query], answer(A,largest(A,capital(A)))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(loc(B,A),state(A),const(B,cityid(rochester,_))))).
          _parse([query], answer(A,shortest(A,river(A)))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid("south dakota"))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(state(A),const(B,cityid(pittsburgh,_)),loc(B,A)))).
          _parse([query], answer(A,(state(A),const(B,cityid(kalamazoo,_)),loc(B,A)))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(alaska))),A))).
          _parse([query], answer(A,(state(A),const(B,cityid(boston,_)),loc(B,A)))).
          _parse([query], answer(A,(size(B,A),const(B,stateid("north dakota"))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(utah))))).
          _parse([query], answer(A,(loc(B,A),const(B,placeid("mount whitney"))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(louisiana))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(illinois))))).
          _parse([query], answer(A,(elevation(B,A),const(B,placeid("guadalupe peak"))))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boulder,_))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(alabama))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(arkansas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(ohio))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(massachusetts))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(michigan))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("scotts valley",_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(maine))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(arkansas))))).
          _parse([query], answer(A,state(A))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("san jose",_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(kentucky))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(alaska))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("san diego",_))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(loc(B,A),const(B,stateid("new hampshire"))))).
          _parse([query], answer(A,largest(A,capital(A)))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("baton rouge",_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(michigan))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("fort wayne",_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(georgia))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(missouri))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(hawaii))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(arizona))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(wisconsin))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(california))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(loc(B,A),const(B,placeid("mount whitney"))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boulder,_))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid(houston,_))))).
          _parse([query], answer(A,state(A))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boulder,_))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid(springfield,_))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(B,C),const(C,stateid(illinois)))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,cityid(B,))))).
          _parse([query], answer(A,((A,(state(A),loc(A,B),const(B))const(B,)))const(B))).
          _parse([query], answer(A,(state(B,A),const(B,C))state(B),traverse(C,C),)(C))).
          _parse([query], answer(A,(loc(B,A),const(B),loc(B,C),const(C))))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alaska)))))).
          _parse([query], answer(A,(loc(B,A),const(B,stateid(alaska)))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B),loc(B,A),const(B,(place()))))).
          _parse([query], answer(A,(state(A),loc(B,A),state(B))))).
          _parse([query], answer(A,longest(A,(river(A),traverse(A,B),state(B),)(B,C),,(C)))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),loc(B,A),B(B,Cplace())))).
          _parse([query], answer(A,(len(B,A),state(B),traverse(C,riverid(mississippi),,traverse(C),traverse(C,))))).
          _parse([query], answer(A,largest(A,(state(A),state(A),state(A),state(A),state(A),state())))).
          _parse([query], answer(A,(population(B,A),state(B),traverse(C,riverid(mississippi),,traverse(C),traverse(C,))))).
          _parse([query], answer(A,largest(B,(state(A),population(C,B),state(C),next_to(C,D,C),state)))).
          _parse([query], answer(A,((A,(state(A),traverse(A,B),state(B,,state(C,riverid(mississippi)))))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(C,D),state(D,E),))).
          _parse([query], answer(A,((A,(place(A),loc(B,C),state(C),loc(D,C),lowest(D)))))).
          _parse([query], answer(A,(state(A),loc(B,C),state(C),state(D,D),))).
          _parse([query], answer(A,(major(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,(loc(A),loc(A),loc(A,B),const(B,countryid((B))loc(C,))))).
          _parse([query], answer(A,largestpopulation(B,A),state(B,(state(A))density(A)B))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,(loc(B))loc(B,)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),state(B))))).
          _parse([query], answer(A,count(B,(river(B),traverse(B,C),state(C),const(D,riverid(missouri)))))).
          _parse([query], answer(A,(population(B,A),const(B,riverid(mississippi))),river(B)))).
          _parse([query], answer(A,(population(B,A),const(B),const(C,riverid(mississippi)))river(C))).
          _parse([query], answer(A,smallest(B,(state(B),density(C,B),smallest(C))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),capital(B),loc(B,A),capital(B))))).
          _parse([query], answer(A,count(B,(river(B),loc(loc(B,C),state(C),loc(C,B),capital))))).
          _parse([query], answer(A,largest(A,(place(A),loc(A,B),state(B,(state(A),locAA,B)))))).
          _parse([query], answer(A,smallest(B,(river(B),loc(B,C),smallest(C,(state(B),loc(B,C))))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),state(B),loc(C,B),lowest(C))))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi),capital(C),loc(C,B))))).
          _parse([query], answer(A,largest(A,(place(A),loc(A,B),state(C,(state(B),loc(B,C))))))).
          _parse([query], answer(A,(density(B,A),smallest(C,(state(B),density(B,C))))))).
          _parse([query], answer(A,(density(B,A),smallest(C,(state(C),density(B,C))))))).
          _parse([query], answer(A,(len(B,A),state(B,C)(state(C),traverse(C,C),state)))).
          _parse([query], answer(A,(state(A),state(A,B),state(B,Cstate(state(C),next_to(C,C)))))).
          _parse([query], answer(A,highestpopulation(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa)))))).
          _parse([query], answer(A,((A,(,(state(A),next_to(A,A),state(A),next_to((B,B(C))))))))).
          _parse([query], answer(A,(population(B,A),const(B,,(place(B),loc(B,C),const(C,countryid())))))).
          _parse([query], answer(A,(population(B,A),city(B),loc(B,C),const(C,stateid(alaska),const(C))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,cityid(springfield,_)))),loc(B,C)).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas)),loc(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,(population(B,A),highest(B,(place(B),loc(B,)))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(area(B,A),capital(B),loc(B,C),const(C,)))).
          _parse([query], answer(A,(population(B,A),const(C,riverid(mississippi)),traverse(B,C)))).
          _parse([query], answer(A,(population(B,A),largest(C,(B),population(B,C))))).
          _parse([query], answer(A,((A,(city(A),loc(A,B),largest(B),const(B)))))).
          _parse([query], answer(A,(state(A),loc(B,A),highest(B)((B))))).
          _parse([query], answer(A,(capital(A),loc(A,B),loc(B,C),state(C),loc(D,C),))).
          _parse([query], answer(A,longest(A,(river(A),\+(A(A,B),longest(B,((())))))))).
          _parse([query], answer(A,(capital(A),loc(A,B),state(A),area)))).
          _parse([query], answer(A,(capital(A),loc(A,B),state(B),loc(B,C),const(C),))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,(((((((,,countryid())))))))))))).
          _parse([query], answer(A,(size(B,A),state(B),next_to(B,C),largest(C,())))).
          _parse([query], answer(A,(density(B,A),const(B,,countryid(usa))))).
          _parse([query], answer(A,count(B,(state(B),\+(next_to(B,,,,state(B),next_to(B,))))))).
          _parse([query], answer(A,(population(B,A),state(A),population(A,B),))).
          _parse([query], answer(A,(state(A),\+(A,A),A(A,,state(A),A(A,A),A())))).
          _parse([query], answer(A,count(B,(state(B),((B,,),state(B),,(B,A),B(B)))))).
          _parse([query], answer(A,count(B,(city(B),loc(B,,(C,C),,C(C,,),const(C)))))).
          _parse([query], answer(A,(len(B,A),const(B,,((),,river(B),const(B,)))))).
          _parse([query], answer(A,(state(A),next_to(B,C),state(D,E),state(F,(),state(F,,))))).
          _parse([query], answer(A,(capital(B,A),major(B),city(B),loc(B,C),const(C,stateid(wisconsin))))).
          _parse([query], answer(A,(density(B,A),state(B),const(C,stateid((,)))))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(C,(state(B),((B,C),)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),state(B),const(B))))).
          _parse([query], answer(A,largest(B,(city(B),loc(C,B),largest(C,,)(population(D,C)))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(texas)),loc(C,D))))).
          _parse([query], answer(A,largest(A,(state(A),loc(A,B),largest(B))))).
          _parse([query], answer(A,most(A,(river(@),traverse(A,@),most(A,B),most(B,C),most)))).
          _parse([query], answer(A,((A,(river(A),\+(A,@)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boston,_)))))).
          _parse([query], answer(A,(elevation(B,A),const(B,stateid(texas)))))).
          _parse([query], answer(A,(river(A),loc(A,(river(A),loc(A,B)))))).
          _parse([query], answer(A,(((,(state(@),loc(@,A),loc(A,A),const(A,countryid(usa)))))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))))).
          _parse([query], answer(A,(elevation(B,A),const(B,countryid(usa))))),loc(B,countryid(usa))))).
          _parse([query], answer(A,(density(B,A),const(B,()(B,()()))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(colorado)))))).
          _parse([query], answer(A,(elevation(B,A),const(B,,((((((B,stateid(texas))))))))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(state(A),loc(B,A),highest(B,place(B)))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(colorado)))next_to(C,C)))).
          _parse([query], answer(A,((B,((B),const(C,,const)))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(len(B,A),const(B,countryid(usa),const(B,countryid(usa)))))))).
          _parse([query], answer(A,(density(B,A),const(B,)))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(())))))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,Cconst(C),const(C,D),const())))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(()))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B),const(B,riverid(mississippi)))traverse(B))).
          _parse([query], answer(A,(state(A),city(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B),const(B,stateid(texas)))))).
          _parse([query], answer(A,((B,(state(B),next_to(B,C),const(C,stateid(()))))))).
          _parse([query], answer(A,((B,(state(A),density(A,B)))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid((,)))))).
          _parse([query], answer(A,highest(A,(mountain(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,,))))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,countryid(usa))))))).
          _parse([query], answer(A,largest(B,(state(A)B),loc(B),loc(B,B),const(B,countryid(usa))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid((,)))))).
          _parse([query], answer(A,(((,(city(A),loc(A,B),const(B,,))))))))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),state(C),next_to(C,D),const(D))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),state(C),next_to(C,D),)(D)))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),state(C),next_to()))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(C,riverid(mississippi)),traverse(C,)))).
          _parse([query], answer(A,(capital(B,A),const(B),loc(B,C),const(C,stateid())))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B),const(B,))))).
          _parse([query], answer(A,count(B,(state(B),next_to(A,C),state(C),)A))).
          _parse([query], answer(A,count(B,(state(B),loc(C,B),const(C,cityid(austin,_)))))).
          _parse([query], answer(A,count(B,(state(B),traverse(C,riverid(mississippi),,traverse(C),traverse(C,B)))))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(population(B,A),population(A,B),population(A,B))))).
          _parse([query], answer(A,largest(B,(state(B),loc(B,))))).
          _parse([query], answer(A,count(B,(river(B),traverse(B,C),state(C),const(C,))))).
          _parse([query], answer(A,(major(A),loc(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,((B,C((river(B),river(B))))))).
          _parse([query], answer(A,(river(A),loc(B,A),capital(B),traverse(A,)))).
          _parse([query], answer(A,(state(A),loc(A,)))).
          _parse([query], answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid()))))).
          _parse([query], answer(A,largest(A,(state(A),loc(A,B),)))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(georgia))))).
          _parse([query], answer(A,(state(A),loc(A,B),))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid())))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid("rhode island")))))).
          _parse([query], answer(A,(state(A),area(A,)))).
          _parse([query], answer(A,(state(A),traverse(A,riverid(A),)traverse(A,)))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid("new mexico")))))).
          _parse([query], answer(A,count(B,(city(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(())))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa))))))).
          _parse([query], answer(A,((B,(state(B),loc(C,D)))))).
          _parse([query], answer(A,(state(A),const(A,B),const(B,)(river(B))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa))))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa))))))).
          _parse([query], answer(A,count(B,(state(B),const(C,B),const(C,cityid(springfield,_))))const)).
          _parse([query], answer(A,(state(A),traverse(A,B),const(B),const(B,C),const(C,stateid())))).
          _parse([query], answer(A,(state(A),traverse(A,B),const(B),const(B,stateid(B))))(B,)).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid("new york")))))).
          _parse([query], answer(A,largest(B,(state(A),population(B)C))const(B,B)))).
          _parse([query], answer(A,count(B,(state(B),const(B,C),const(C,countryid(usa))))A))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,largest(A,(state(A),loc(A,B),state(B,stateid(())))))).
          _parse([query], answer(A,count(B,(major(B),loc(B),loc(B,C),const(C,stateid(alabama)))))).
          _parse([query], answer(A,smallest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(major(A),loc(A,,loc(A,cityid(,,_)))loc(A,@)))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa))))))).
          _parse([query], answer(A,(state(A),traverse(B,riverid(missouri)),traverse(B),traverse(B,A)))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi)))river(B)))).
          _parse([query], answer(A,count(B,(state(B),const(C,riverid(mississippi)),traverse(C,B)))A))).
          _parse([query], answer(A,largestarea(B,A),state(B,C(C))))).
          _parse([query], answer(A,largest(B,(state(A,B),state(B,,const(B,B),const(B,stateid(texas))))))).
          _parse([query], answer(A,highestcapital(B,A),highest(B,(place(B),loc(B,C),const(C,stateid()))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(texas))))))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa))))))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,cityid(springfield,_)))),@))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(colorado)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid())))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("south dakota"))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid())))))).
          _parse([query], answer(A,(area(B,A),smallest(B,((B)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,(state(A),loc(A,B),state(B,((B)))))).
          _parse([query], answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa))))A))).
          _parse([query], answer(A,((A,(state(A),loc(A,B),const(B,countryid(usa))))))).
          _parse([query], answer(A,((B,(state(A)B),city(B),loc(B,C),const(C,stateid(oklahoma)))))).
          _parse([query], answer(A,((B,(state(A),loc(B,B),const(B,cityid(texas)))@(A,A))))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(state(A),next_to(B,riverid(missouri)),river(B,A)))).
          _parse([query], answer(A,(major(A),lake(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new york"))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid())))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,riverid(missouri))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),const(B,riverid(missouri)),traverse(B),traverse(B,A)))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(") island"))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid()))))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid()))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(colorado))))A)))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(texas))))))).
          _parse([query], answer(A,largest(B,(city(C,riverid(D)),loc(C),B(D,C))B(B,C)))).
          _parse([query], answer(A,largest(B,(city(B),loc(B,C),const(C,stateid("rhode island")))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid())))).
          _parse([query], answer(A,largestarea(A),city(B,Astate(A),area(A,B))))).
          _parse([query], answer(A,largest(A,(river(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(california))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid()))))).
          _parse([query], answer(A,largest(A,(river(A),loc(A,B),const(B,stateid(nebraska)))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(california)))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(california)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(california)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new york"))))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B)))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid())))).
          _parse([query], answer(A,(population(B,A),const(B,cityid())))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(illinois)))))).
          _parse([query], answer(A,count(B,(state(B),loc(C,,(usa)),loc(C,C)))A))).
          _parse([query], answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(washington,_))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(alaska)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid("new york",_))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(pennsylvania)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(california))))).
          _parse([query], answer(A,(elevation(B,A),const(B,stateid())))).
          _parse([query], answer(A,(state(A),const(B,riverid(colorado)),next_to(B,A)))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(georgia)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(wisconsin)))))).
          _parse([query], answer(A,(population(B,A),const(B,countryid(usa))))).
          _parse([query], answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))).
          _parse([query], answer(A,(state(A),const(B,riverid(mississippi)),river(B),traverse(B,A)))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(state(A),const(A,B),const(B,stateid(mississippi)))))).
          _parse([query], answer(A,((A,B,(state(B),traverse(B,B),)(B))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(georgia)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(portland))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,wa))))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(kansas)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(spokane,wa))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(wisconsin))))).
          _parse([query], answer(A,(state(A),loc(B,A),capital(B),loc(B,C),const(C,cityid(C))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid("new york"))))).
          _parse([query], answer(A,count(B,(state(B),const(B,C),const(C,countryid(mississippi)),traverse(C),)))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(wisconsin)))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(colorado)))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(alaska)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(state(A),const(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid("new mexico"))))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(arkansas))))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(alaska)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(washington,dc))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(kansas)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(wyoming)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(delaware))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,largestarea(B,A),largest(B),)).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),state(C,state(C))))A))).
          _parse([query], answer(A,(area(B,A),const(B,cityid("mount mckinley"))))).
          _parse([query], answer(A,count(B,(state(B),loc(C,B),city(C),loc(C,cityid(austin,tx)))))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("mount dakota"))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,tx))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(oregon)))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid("new hampshire"))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(seattle,dc))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(colorado))))A))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,smallest(A,(state(A),next_to(A,B),const(B,stateid(ohio)))))).
          _parse([query], answer(A,((A,(place(A),loc(A,B),const(B,stateid(colorado))))))).
          _parse([query], answer(A,(major(A),loc(A,B),const(B,stateid(florida)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(kansas)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(montana)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(oregon)))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,riverid(mississippi)),@))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,smallest(A,(state(A),area(A,B),)))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(iowa)))))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(arizona)))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(iowa)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,,))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(nebraska)))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(idaho)))))).
          _parse([query], answer(A,(population(B,A),const(B,placeid())))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(oregon)))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(ohio)))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(wyoming))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new hampshire"))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(wyoming)))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(state(A),loc(B,A),city(B),loc(B,C),const(C,cityid(austin))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("south dakota"))))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid())))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),loc(B,A),city(B),loc(B,cityid(austin,_))))).
          _parse([query], answer(A,(((B,A),const(B,stateid(california)))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,riverid(colorado))),@))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(francisco,_))))).
          _parse([query], answer(A,count(B,(city(B),loc(C,stateid(texas)),A(C,C)))A))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,largest(B,(state(A),city(A),loc(B,C),const(C,stateid(hawaii)))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(wyoming))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(wyoming))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),loc(B,A),city(B),loc(B,A)))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,count(B,(state(B),const(C,riverid(C),const(C,stateid(hawaii))))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(california))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid("san francisco",_))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(texas))))A))).
          _parse([query], answer(A,(major(A),loc(A,B),const(B,stateid(california))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(indiana)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(riverside,_))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(denver,_))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(colorado)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(denver,_))))).
          _parse([query], answer(A,(state(A),loc(B,A),capital(B),loc(B,A)))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(california))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,cityid(springfield,_))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,count(B,(state(B),const(C,stateid(iowa)),)(C,B)))A))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(denver,_))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(montana))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(state(A),next_to(A,riverid(A),traverse(A,@))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(seattle,_))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(state(A),next_to(next_to(B,C),const(C))))).
          _parse([query], answer(A,shortestriver(A),loc(B,A),shortest(B,)(B))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(michigan)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(minnesota)))))).
          _parse([query], answer(A,largest(B,(state(B),population(A,B))))).
          _parse([query], answer(A,(state(A),loc(B,A),highest(B,)))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(florida))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B),loc(B,cityid(flint,_))))).
          _parse([query], answer(A,((A,(,(river(@),traverse(A,A),)(A)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(minnesota))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(kalamazoo,_))))).
          _parse([query], answer(A,((A,(river(A),loc(A,B),const(B,countryid(usa))))))).
          _parse([query], answer(A,(river(A),traverse(A),traverse(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,count(B,(city(B),loc(B,C),const(C,stateid(montana)))A))).
          _parse([query], answer(A,smallest(B,(state(A),area(A,B))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(vermont))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(idaho))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(major(A),lake(A),loc(A,B),const(B,stateid(michigan))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(illinois))))).
          _parse([query], answer(A,count(B,(city(B),loc(B,C),const(C,stateid(montana))))A))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(idaho))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(A,C),capital(B)))))).
          _parse([query], answer(A,(major(A),loc(A(A),loc(A),)))).
          _parse([query], answer(A,(state(A),\+(next_to(A,B),state(B))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boston,_))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(maine))))).
          _parse([query], answer(A,largest(B,(city(A),population(A,B))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(arizona))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(missouri)))river(B)))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(california))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(austin,tx))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(maine))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(idaho))),A))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(idaho))))).
          _parse([query], answer(A,(major(A),loc(A,B),const(B,stateid(louisiana))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(washington))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(idaho)),A)))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(maine))))).
          _parse([query], answer(A,longest(A,(state(@),longest(A,B),river(B))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(pennsylvania))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),state(B))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(washington)),river(C))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(missouri))))A))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,cityid(salem,_))))).
          _parse([query], answer(A,(state(A),\+(next_to(B,A),river(B),)))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(illinois))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(missouri))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(missouri)))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(pennsylvania))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(pennsylvania))))).
          _parse([query], answer(A,largest(B,(state(A),const(B,stateid(mississippi)))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(kansas))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,most(A,B,(river(A),river(A,A))river(B))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(state(A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(iowa))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(maine))))).
          _parse([query], answer(A,((A,((A)))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(tennessee))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(montgomery,_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(hawaii))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boulder,_))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(arizona))))).
          _parse([query], answer(A,largest(A,((A))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(state(B,A),const(B),const(B,cityid())))).
          _parse([query], answer(A,shortest(A,river(A)))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid("rhode dakota"))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,cityid(rochester,_))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,cityid(rochester,_))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(alaska))))A))).
          _parse([query], answer(A,(state(A),loc(B,cityid(pittsburgh,_)))loc(B,A)))).
          _parse([query], answer(A,(size(B,A),const(B,stateid("south dakota"))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(B,B))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(virginia))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(nevada))))).
          _parse([query], answer(A,(size(B,A),const(B,cityid())))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(maine))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(virginia))))).
          _parse([query], answer(A,(len(B,A),const(B,placeid(")")))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boulder,_))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(arkansas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(()))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(alaska))))).
          _parse([query], answer(A,(state(A),const(A,stateid(alaska))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid())))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid())))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid())))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid())))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid(", _",_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(alaska))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid(", valley"))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))).
          _parse([query], answer(A,(loc(B,A),const(B,stateid("new dakota"))))).
          _parse([query], answer(A,largest(A,((A))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("scotts _",valley))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("san jose",_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(arkansas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid())))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(loc(B,A),const(B,placeid("mount whitney"))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boulder,_))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid())))).
          _parse([query], answer(A,(state(A)))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boulder,_))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid(springfield,_))))).
          DatalogParser.loadSafe(): end
        } [2.6s, cum. 2.6s]
        960 statements
        Example tmpe6f2k58p.dlog:0: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),traverse(A,B),state(B),next_to(B,C),most(C,D,(state(C),next_to(C,D),state(D))))))
        Example tmpe6f2k58p.dlog:1: query => {[270230count]} | answer(A,(population(B,A),capital(B),loc(B,C),largest(C,(state(C),const(D,riverid(mississippi)),traverse(D,C)))))
        Example tmpe6f2k58p.dlog:2: query => {[arizona:stateid/2]} | answer(A,largest(A,(state(A),next_to(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,countryid(usa)))))))
        Example tmpe6f2k58p.dlog:3: query => {[3778000length]} | answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))
        Example tmpe6f2k58p.dlog:4: query => {} | answer(A,(high_point(B,A),state(B),low_point(B,C),elevation(C,0.0)))
        Example tmpe6f2k58p.dlog:5: query => {[tombigbee:riverid/2],[chattahoochee:riverid/2],[roanoke:riverid/2],[wateree catawba:riverid/2],[cumberland:riverid/2],[tennessee:riverid/2],[mississippi:riverid/2]} | answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),state(C),loc(D,C),capital(D),const(D,cityid(atlanta,_))))
        Example tmpe6f2k58p.dlog:6: query => {[mount hood:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),state(B),const(B,stateid(oregon)))))
        Example tmpe6f2k58p.dlog:7: query => {[colorado:riverid/2]} | answer(A,(river(A),traverse(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,countryid(usa))))))
        Example tmpe6f2k58p.dlog:8: query => {[columbia:riverid/2],[gila:riverid/2],[snake:riverid/2],[colorado:riverid/2]} | answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),largest(D,(state(C),population(C,D)))))
        Example tmpe6f2k58p.dlog:9: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),traverse(A,B),state(B),next_to(B,C),const(C,stateid(tennessee)))))
        Example tmpe6f2k58p.dlog:10: query => {[colorado:riverid/2]} | answer(A,(river(A),traverse(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,countryid(usa))))))
        Example tmpe6f2k58p.dlog:11: query => {[2364000count],[4206000count],[4916000count],[2286000count],[4700000count],[2913000count],[2520000count],[4076000count],[4591000count],[11400000count]} | answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)))
        Example tmpe6f2k58p.dlog:12: query => {} | answer(A,largest(A,(city(A),loc(A,B),state(B),next_to(B,C),largest(C,state(C)))))
        Example tmpe6f2k58p.dlog:13: query => {[2364000count],[4206000count],[4916000count],[2286000count],[4700000count],[2913000count],[2520000count],[4076000count],[4591000count],[11400000count]} | answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)))
        Example tmpe6f2k58p.dlog:14: query => {[arizona:stateid/2]} | answer(A,largest(A,(state(A),next_to(A,B),largest(C,(state(B),population(B,C))))))
        Example tmpe6f2k58p.dlog:15: query => {[new orleans:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B))))
        Example tmpe6f2k58p.dlog:16: query => {[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[wyoming:stateid/2],[georgia:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[washington:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),state(C),next_to(C,D),state(D),next_to(D,E),const(E,stateid(texas))))
        Example tmpe6f2k58p.dlog:17: query => {[ocheyedan mound:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),state(B),loc(C,B),capital(C),const(C,cityid('des moines',_)))))
        Example tmpe6f2k58p.dlog:18: query => {} | answer(A,(state(A),loc(B,A),capital(B),high_point(A,B)))
        Example tmpe6f2k58p.dlog:19: query => {} | answer(A,(major(A),city(A),loc(A,B),smallest(B,(state(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpe6f2k58p.dlog:20: query => {[juneau_ak:cityid/3]} | answer(A,(capital(A),city(A),loc(A,B),largest(B,(state(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpe6f2k58p.dlog:21: query => {[2.62e-07count/length^2]} | answer(A,(density(B,A),smallest(C,(state(B),population(B,C)))))
        Example tmpe6f2k58p.dlog:22: query => {[potomac:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),smallest(B,(state(B),loc(B,C),const(C,countryid(usa)))))))
        Example tmpe6f2k58p.dlog:23: query => {[washington_dc:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),smallest(B,(state(B),loc(B,C),const(C,countryid(usa)))))))
        Example tmpe6f2k58p.dlog:24: query => {[mount elbert:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),most(B,C,(state(B),traverse(C,B),river(C))))))
        Example tmpe6f2k58p.dlog:25: query => {[4count]} | answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa)),shortest(D,river(D)),traverse(D,B)),A))
        Example tmpe6f2k58p.dlog:26: query => {[2364000count],[4206000count],[4916000count],[2286000count],[4700000count],[2913000count],[2520000count],[4076000count],[4591000count],[11400000count]} | answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example tmpe6f2k58p.dlog:27: query => {[2364000count],[4206000count],[4916000count],[2286000count],[4700000count],[2913000count],[2520000count],[4076000count],[4591000count],[11400000count]} | answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)))
        Example tmpe6f2k58p.dlog:28: query => {[7365000count]} | answer(A,(population(B,A),largest(C,(state(B),density(B,C)))))
        Example tmpe6f2k58p.dlog:29: query => {[ocheyedan mound:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),state(B),loc(C,B),capital(C),const(C,cityid('des moines',_)))))
        Example tmpe6f2k58p.dlog:30: query => {[43count]} | answer(A,count(B,(river(B),\+(traverse(B,C),state(C),loc(D,C),capital(D),const(D,cityid(albany,_)))),A))
        Example tmpe6f2k58p.dlog:31: query => {[pacific ocean:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),largest(C,(state(B),area(B,C))))))
        Example tmpe6f2k58p.dlog:32: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),smallest(C,(state(B),population(B,C))))))
        Example tmpe6f2k58p.dlog:33: query => {} | answer(A,longest(A,(river(A),loc(A,B),state(B),loc(C,B),highest(C,place(C)))))
        Example tmpe6f2k58p.dlog:34: query => {[2364000count],[4206000count],[4916000count],[2286000count],[4700000count],[2913000count],[2520000count],[4076000count],[4591000count],[11400000count]} | answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example tmpe6f2k58p.dlog:35: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),largest(C,(state(B),area(B,C))))))
        Example tmpe6f2k58p.dlog:36: query => {[2.24e-04count/length^2]} | answer(A,(density(B,A),smallest(C,(state(B),area(B,C)))))
        Example tmpe6f2k58p.dlog:37: query => {[1.53e+12length^2]} | answer(A,(area(B,A),smallest(C,(state(B),density(B,C)))))
        Example tmpe6f2k58p.dlog:38: query => {[3778000length]} | answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))
        Example tmpe6f2k58p.dlog:39: query => {[jefferson city_mo:cityid/3],[nashville_tn:cityid/3]} | answer(A,(capital(A),loc(A,B),most(B,C,(state(B),next_to(B,C),state(C)))))
        Example tmpe6f2k58p.dlog:40: query => {[6194length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpe6f2k58p.dlog:41: query => {[alaska:stateid/2],[hawaii:stateid/2]} | answer(A,fewest(A,B,(state(A),next_to(A,B),state(B),\+const(A,stateid(alaska)),\+const(A,stateid(hawaii)))))
        Example tmpe6f2k58p.dlog:42: query => {[1.53e+12length^2]} | answer(A,(size(B,A),largest(B,(state(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpe6f2k58p.dlog:43: query => {[66842count],[56725count]} | answer(A,(population(B,A),major(B),city(B),loc(B,C),const(C,stateid(montana))))
        Example tmpe6f2k58p.dlog:44: query => {[massachusetts:stateid/2],[oregon:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[ohio:stateid/2]} | answer(A,(state(A),loc(A,B),const(B,countryid(usa)),loc(C,A),const(C,cityid(springfield,_))))
        Example tmpe6f2k58p.dlog:45: query => {[10820000count]} | answer(A,sum(B,(state(B),next_to(C,B),const(C,stateid(texas))),population(B),A))
        Example tmpe6f2k58p.dlog:46: query => {} | answer(A,(population(B,A),capital(B),loc(B,C),largest(C,state(C))))
        Example tmpe6f2k58p.dlog:47: query => {[baton rouge_la:cityid/3],[santa fe_nm:cityid/3],[oklahoma city_ok:cityid/3],[little rock_ar:cityid/3]} | answer(A,(capital(A),city(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))
        Example tmpe6f2k58p.dlog:48: query => {[1.27e+11length^2]} | answer(A,(area(B,A),state(B),loc(C,B),capital(C),const(C,cityid(albany,_))))
        Example tmpe6f2k58p.dlog:49: query => {[2364000count],[4206000count],[4916000count],[2286000count],[4700000count],[2913000count],[2520000count],[4076000count],[4591000count],[11400000count]} | answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example tmpe6f2k58p.dlog:50: query => {[illinois:stateid/2]} | answer(A,largest(B,(state(A),const(C,riverid(mississippi)),traverse(C,A),population(A,B))))
        Example tmpe6f2k58p.dlog:51: query => {[new orleans_la:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas)))))
        Example tmpe6f2k58p.dlog:52: query => {[california:stateid/2]} | answer(A,(state(A),loc(B,A),lowest(B,place(B))))
        Example tmpe6f2k58p.dlog:53: query => {[juneau_ak:cityid/3]} | answer(A,(capital(A),loc(A,B),state(B),loc(C,B),highest(C,place(C))))
        Example tmpe6f2k58p.dlog:54: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),\+(traverse(A,B),const(B,stateid(texas))))))
        Example tmpe6f2k58p.dlog:55: query => {[juneau_ak:cityid/3]} | answer(A,(capital(A),loc(A,B),highest(C,(state(B),loc(C,B),place(C)))))
        Example tmpe6f2k58p.dlog:56: query => {[2.06e-05count/length^2]} | answer(A,(density(B,A),state(B),loc(C,B),capital(C),const(C,cityid(austin,_))))
        Example tmpe6f2k58p.dlog:57: query => {[3968000length]} | answer(A,(len(B,A),longest(B,(river(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpe6f2k58p.dlog:58: query => {[1303000count]} | answer(A,(population(B,A),largest(B,(state(B),next_to(B,C),const(C,stateid(texas))))))
        Example tmpe6f2k58p.dlog:59: query => {[3.13e-05count/length^2]} | answer(A,(density(B,A),const(B,countryid(usa))))
        Example tmpe6f2k58p.dlog:60: query => {[14count]} | answer(A,count(B,(state(B),next_to(B,C),most(C,D,(state(C),next_to(C,D),state(D)))),A))
        Example tmpe6f2k58p.dlog:61: query => {[1count]} | answer(A,count(B,(river(B),loc(B,C),largest(D,(state(C),population(C,D)))),A))
        Example tmpe6f2k58p.dlog:62: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),traverse(B,A),largest(B,(river(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpe6f2k58p.dlog:63: query => {[5count]} | answer(A,count(B,(state(B),next_to(B,C),state(C),loc(D,C),capital(D),const(D,cityid(boston,_))),A))
        Example tmpe6f2k58p.dlog:64: query => {[1count]} | answer(A,count(B,(city(B),const(B,cityid(austin,_)),loc(B,C),const(C,countryid(usa))),A))
        Example tmpe6f2k58p.dlog:65: query => {} | answer(A,(len(B,A),const(B,riverid(colorado)),river(B),loc(B,C),const(C,stateid(texas))))
        Example tmpe6f2k58p.dlog:66: query => {[alaska:stateid/2],[california:stateid/2]} | answer(A,(state(A),high_point(A,B),higher(B,C),high_point(D,C),const(D,stateid(colorado))))
        Example tmpe6f2k58p.dlog:67: query => {[85725count],[58913count],[63982count],[77685count],[87899count]} | answer(A,(population(B,A),major(B),city(B),loc(B,C),const(C,stateid(wisconsin))))
        Example tmpe6f2k58p.dlog:68: query => {[4916000count]} | answer(A,(population(B,A),const(B,stateid(missouri))))
        Example tmpe6f2k58p.dlog:69: query => {[colorado:riverid/2]} | answer(A,(river(A),traverse(A,B),largest(C,(state(B),population(B,C)))))
        Example tmpe6f2k58p.dlog:70: query => {[phoenix_az:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(california)))))
        Example tmpe6f2k58p.dlog:71: query => {[houston_tx:cityid/3]} | answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(texas)),population(A,B))))
        Example tmpe6f2k58p.dlog:72: query => {[1count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid(texas)),longer(B,D),const(D,riverid(red))),A))
        Example tmpe6f2k58p.dlog:73: query => {[6194length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),largest(C,state(C))))))
        Example tmpe6f2k58p.dlog:74: query => {[new york:stateid/2],[colorado:stateid/2],[wyoming:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),major(B),river(B),traverse(B,A))))
        Example tmpe6f2k58p.dlog:75: query => {[minnesota:stateid/2]} | answer(A,largest(A,(state(A),traverse(B,A),const(B,riverid(mississippi)))))
        Example tmpe6f2k58p.dlog:76: query => {[houston_tx:cityid/3]} | answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(texas)),population(A,B))))
        Example tmpe6f2k58p.dlog:77: query => {} | answer(A,(elevation(B,A),highest(B,(mountain(B),loc(B,C),const(C,stateid(texas))))))
        Example tmpe6f2k58p.dlog:78: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),longest(B,(river(B),traverse(B,A)))))
        Example tmpe6f2k58p.dlog:79: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B),loc(A,C),const(C,countryid(usa)))))
        Example tmpe6f2k58p.dlog:80: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpe6f2k58p.dlog:81: query => {[gulf of mexico:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),state(B),const(B,stateid(texas)))))
        Example tmpe6f2k58p.dlog:82: query => {[alaska:stateid/2]} | answer(A,(loc(B,A),state(A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpe6f2k58p.dlog:83: query => {[3.13e-05count/length^2]} | answer(A,(density(B,A),const(B,countryid(usa))))
        Example tmpe6f2k58p.dlog:84: query => {[rio grande:riverid/2]} | answer(A,longest(A,(river(A),traverse(A,B),const(B,stateid(colorado)))))
        Example tmpe6f2k58p.dlog:85: query => {[345496count]} | answer(A,(size(B,A),capital(B),loc(B,C),const(C,stateid(texas))))
        Example tmpe6f2k58p.dlog:86: query => {[death valley:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpe6f2k58p.dlog:87: query => {[alaska:stateid/2]} | answer(A,(state(A),loc(B,A),highest(B,place(B))))
        Example tmpe6f2k58p.dlog:88: query => {[3count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(colorado)),next_to(B,D),const(D,stateid('new mexico'))),A))
        Example tmpe6f2k58p.dlog:89: query => {[9.51e+12length^2]} | answer(A,sum(B,state(B),area(B),A))
        Example tmpe6f2k58p.dlog:90: query => {[mckinley:mountainid/2]} | answer(A,highest(A,(mountain(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpe6f2k58p.dlog:91: query => {[451000length]} | answer(A,(len(B,A),shortest(B,(river(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpe6f2k58p.dlog:92: query => {[2.24e-04count/length^2]} | answer(A,(density(B,A),smallest(B,state(B))))
        Example tmpe6f2k58p.dlog:93: query => {[louisiana:stateid/2]} | answer(A,largest(B,(state(A),next_to(A,C),const(C,stateid(texas)),population(A,B))))
        Example tmpe6f2k58p.dlog:94: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),next_to(A,B),longest(B,(river(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpe6f2k58p.dlog:95: query => {[2.71e+10length^2]} | answer(A,(area(B,A),const(B,stateid(maryland))))
        Example tmpe6f2k58p.dlog:96: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[kansas:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[west virginia:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example tmpe6f2k58p.dlog:97: query => {[oxnard_ca:cityid/3],[bristol township_pa:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[fayetteville_nc:cityid/3],[orlando_fl:cityid/3],[san angelo_tx:cityid/3],[downey_ca:cityid/3],[greenville_sc:cityid/3],[concord_ca:cityid/3],[richardson_tx:cityid/3],[columbia_sc:cityid/3],[waukegan_il:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[lowell_ma:cityid/3],[charleston_sc:cityid/3],[largo_fl:cityid/3],[clearwater_fl:cityid/3],[bayonne_nj:cityid/3],[manchester_nh:cityid/3],[amarillo_tx:cityid/3],[vallejo_ca:cityid/3],[grand prairie_tx:cityid/3],[san bernardino_ca:cityid/3],[lakewood_oh:cityid/3],[bethesda_md:cityid/3],[evanston_il:cityid/3],[medford_ma:cityid/3],[san leandro_ca:cityid/3],[lakewood_co:cityid/3],[pueblo_co:cityid/3],[great falls_mt:cityid/3],[boise_id:cityid/3],[modesto_ca:cityid/3],[richmond_ca:cityid/3],[north charleston_sc:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[bellevue_wa:cityid/3],[reno_nv:cityid/3],[warwick_ri:cityid/3],[schenectady_ny:cityid/3],[sterling heights_mi:cityid/3],[peoria_il:cityid/3],[santa clara_ca:cityid/3],[bethlehem_pa:cityid/3],[utica_ny:cityid/3],[salem_or:cityid/3],[columbia_mo:cityid/3],[alexandria_va:cityid/3],[springfield_mo:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[livonia_mi:cityid/3],[lawton_ok:cityid/3],[fargo_nd:cityid/3],[citrus heights_ca:cityid/3],[waterford_mi:cityid/3],[independence_mo:cityid/3],[silver spring_md:cityid/3],[waco_tx:cityid/3],[carson_ca:cityid/3],[bristol_ct:cityid/3],[glendale_ca:cityid/3],[wyoming_mi:cityid/3],[rochester_mn:cityid/3],[beaumont_tx:cityid/3],[oceanside_ca:cityid/3],[oak lawn_il:cityid/3],[east orange_nj:cityid/3],[scranton_pa:cityid/3],[westland_mi:cityid/3],[south gate_ca:cityid/3],[bloomington_mn:cityid/3],[royal oak_mi:cityid/3],[terre haute_in:cityid/3],[ogden_ut:cityid/3],[longview_tx:cityid/3],[anderson_in:cityid/3],[springfield_oh:cityid/3],[waterloo_ia:cityid/3],[troy_mi:cityid/3],[rockford_il:cityid/3],[somerville_ma:cityid/3],[lynn_ma:cityid/3],[quincy_ma:cityid/3],[cicero_il:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[huntington_wv:cityid/3],[norwalk_ct:cityid/3],[bridgeport_ct:cityid/3],[ontario_ca:cityid/3],[alhambra_ca:cityid/3],[lorain_oh:cityid/3],[penn hills_pa:cityid/3],[macon_ga:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[billings_mt:cityid/3],[dearborn heights_mi:cityid/3],[wilmington_de:cityid/3],[hayward_ca:cityid/3],[irving_tx:cityid/3],[scottsdale_az:cityid/3],[cedar rapids_ia:cityid/3],[santa monica_ca:cityid/3],[kettering_oh:cityid/3],[santa rosa_ca:cityid/3],[gainesville_fl:cityid/3],[kendall_fl:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[arvada_co:cityid/3],[brownsville_tx:cityid/3],[sioux falls_sd:cityid/3],[kalamazoo_mi:cityid/3],[south bend_in:cityid/3],[clifton_nj:cityid/3],[chula vista_ca:cityid/3],[euclid_oh:cityid/3],[redondo beach_ca:cityid/3],[hartford_ct:cityid/3],[mesquite_tx:cityid/3],[clinton_mi:cityid/3],[burbank_ca:cityid/3],[farmington hills_mi:cityid/3],[middletown_nj:cityid/3],[pasadena_tx:cityid/3],[racine_wi:cityid/3],[youngstown_oh:cityid/3],[huntsville_al:cityid/3],[cheektowaga_ny:cityid/3],[framingham_ma:cityid/3],[monroe_la:cityid/3],[tallahassee_fl:cityid/3],[champaign_il:cityid/3],[tuscaloosa_al:cityid/3],[boulder_co:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[woodbridge_nj:cityid/3],[reading_pa:cityid/3],[newport news_va:cityid/3],[wichita falls_tx:cityid/3],[fort smith_ar:cityid/3],[danbury_ct:cityid/3],[mount vernon_ny:cityid/3],[fort collins_co:cityid/3],[ann arbor_mi:cityid/3],[waltham_ma:cityid/3],[nashua_nh:cityid/3],[alameda_ca:cityid/3],[stamford_ct:cityid/3],[arlington heights_il:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[laredo_tx:cityid/3],[high point_nc:cityid/3],[dubuque_ia:cityid/3],[sunnyvale_ca:cityid/3],[charleston_wv:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[dundalk_md:cityid/3],[meriden_ct:cityid/3],[west allis_wi:cityid/3],[lynchburg_va:cityid/3],[west hartford_ct:cityid/3],[southfield_mi:cityid/3],[paterson_nj:cityid/3],[altoona_pa:cityid/3],[lansing_mi:cityid/3],[hollywood_fl:cityid/3],[st. clair shores_mi:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[ventura_ca:cityid/3],[new bedford_ma:cityid/3],[tempe_az:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[pensacola_fl:cityid/3],[duluth_mn:cityid/3],[greenwich_ct:cityid/3],[skokie_il:cityid/3],[elyria_oh:cityid/3],[sioux city_ia:cityid/3],[bakersfield_ca:cityid/3],[niagara falls_ny:cityid/3],[thousand oaks_ca:cityid/3],[cranston_ri:cityid/3],[evansville_in:cityid/3],[trenton_nj:cityid/3],[redford_mi:cityid/3],[kenosha_wi:cityid/3],[durham_nc:cityid/3],[fremont_ca:cityid/3],[camden_nj:cityid/3],[miami beach_fl:cityid/3],[odessa_tx:cityid/3],[appleton_wi:cityid/3],[muncie_in:cityid/3],[overland park_ks:cityid/3],[green bay_wi:cityid/3],[topeka_ks:cityid/3],[edison_nj:cityid/3],[waterbury_ct:cityid/3],[hampton_va:cityid/3],[west valley_ut:cityid/3],[st. joseph_mo:cityid/3],[savannah_ga:cityid/3],[torrance_ca:cityid/3],[lakewood_ca:cityid/3],[casper_wy:cityid/3],[hammond_in:cityid/3],[irvington_nj:cityid/3],[abingdon_pa:cityid/3],[eugene_or:cityid/3],[joliet_il:cityid/3],[simi valley_ca:cityid/3],[west palm beach_fl:cityid/3],[dearborn_mi:cityid/3],[cherry hill_nj:cityid/3],[new haven_ct:cityid/3],[lawrence_ma:cityid/3],[chesapeake_va:cityid/3],[springfield_il:cityid/3],[erie_pa:cityid/3],[compton_ca:cityid/3],[levittown_ny:cityid/3],[aurora_il:cityid/3],[albany_ny:cityid/3],[elizabeth_nj:cityid/3],[pontiac_mi:cityid/3],[whittier_ca:cityid/3],[decatur_il:cityid/3],[pawtucket_ri:cityid/3],[koolaupoko_hi:cityid/3],[north little rock_ar:cityid/3],[lake charles_la:cityid/3],[fullerton_ca:cityid/3],[davenport_ia:cityid/3],[fall river_ma:cityid/3],[brockton_ma:cityid/3],[midland_tx:cityid/3],[new rochelle_ny:cityid/3],[lafayette_la:cityid/3],[parma_oh:cityid/3],[allentown_pa:cityid/3],[provo_ut:cityid/3],[upper darby_pa:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[roanoke_va:cityid/3],[pasadena_ca:cityid/3],[port arthur_tx:cityid/3],[newton_ma:cityid/3],[glendale_az:cityid/3],[tyler_tx:cityid/3],[new britain_ct:cityid/3],[escondido_ca:cityid/3],[elgin_il:cityid/3],[cambridge_ma:cityid/3],[lower merion_pa:cityid/3],[irondequoit_ny:cityid/3],[norman_ok:cityid/3],[portland_me:cityid/3],[taylor_mi:cityid/3],[albany_ga:cityid/3],[hamilton_oh:cityid/3],[saginaw_mi:cityid/3],[kenner_la:cityid/3],[canton_oh:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,countryid(usa))))
        Example tmpe6f2k58p.dlog:98: query => {[washita:riverid/2],[pecos:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[red:riverid/2]} | answer(A,(river(A),loc(A,B),state(B),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:99: query => {[7count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(kentucky))),A))
        Example tmpe6f2k58p.dlog:100: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example tmpe6f2k58p.dlog:101: query => {[baton rouge_la:cityid/3],[santa fe_nm:cityid/3],[oklahoma city_ok:cityid/3],[little rock_ar:cityid/3]} | answer(A,(capital(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))
        Example tmpe6f2k58p.dlog:102: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpe6f2k58p.dlog:103: query => {[5count]} | answer(A,count(B,(state(B),const(C,riverid(colorado)),river(C),traverse(C,B)),A))
        Example tmpe6f2k58p.dlog:104: query => {[alaska:stateid/2]} | answer(A,(state(A),loc(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpe6f2k58p.dlog:105: query => {[phoenix_az:cityid/3]} | answer(A,largest(B,(population(A,B),capital(A),loc(A,C),const(C,countryid(usa)))))
        Example tmpe6f2k58p.dlog:106: query => {[800500count]} | answer(A,(population(B,A),const(B,stateid(nevada))))
        Example tmpe6f2k58p.dlog:107: query => {[montana:stateid/2]} | answer(A,(state(A),largest(B,(city(B),loc(B,C),const(C,stateid(montana)))),loc(B,A)))
        Example tmpe6f2k58p.dlog:108: query => {[10count]} | answer(A,count(B,(state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)),A))
        Example tmpe6f2k58p.dlog:109: query => {[11count]} | answer(A,count(B,(major(B),city(B),loc(B,C),state(C),next_to(C,D),const(D,stateid(utah))),A))
        Example tmpe6f2k58p.dlog:110: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[kansas:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[west virginia:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example tmpe6f2k58p.dlog:111: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[kansas:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[west virginia:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example tmpe6f2k58p.dlog:112: query => {[425022count]} | answer(A,(population(B,A),capital(B),loc(B,C),const(C,stateid(georgia))))
        Example tmpe6f2k58p.dlog:113: query => {[clingmans dome:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(mississippi)))))
        Example tmpe6f2k58p.dlog:114: query => {[49count]} | answer(A,count(B,(state(B),next_to(B,C),state(C)),A))
        Example tmpe6f2k58p.dlog:115: query => {[5count]} | answer(A,count(B,(state(B),loc(C,B),city(C),const(C,cityid(springfield,_))),A))
        Example tmpe6f2k58p.dlog:116: query => {[6count]} | answer(A,count(B,(state(B),const(C,riverid(missouri)),river(C),traverse(C,B)),A))
        Example tmpe6f2k58p.dlog:117: query => {[delaware:riverid/2]} | answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpe6f2k58p.dlog:118: query => {[new york:stateid/2]} | answer(A,(state(A),loc(B,A),largest(C,(city(B),population(B,C)))))
        Example tmpe6f2k58p.dlog:119: query => {[washington_dc:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),smallest(B,state(B)))))
        Example tmpe6f2k58p.dlog:120: query => {[24count]} | answer(A,count(B,(river(B),traverse(B,C),state(C),next_to(C,D),const(D,stateid(colorado))),A))
        Example tmpe6f2k58p.dlog:121: query => {[naknek:lakeid/2],[salton sea:lakeid/2],[okeechobee:lakeid/2],[red:lakeid/2],[teshekpuk:lakeid/2],[flathead:lakeid/2],[tahoe:lakeid/2],[becharof:lakeid/2],[lake of the woods:lakeid/2],[iliamna:lakeid/2],[winnebago:lakeid/2],[rainy:lakeid/2],[pontchartrain:lakeid/2],[champlain:lakeid/2],[st. clair:lakeid/2],[mille lacs:lakeid/2]} | answer(A,(major(A),lake(A),loc(A,B),const(B,countryid(usa))))
        Example tmpe6f2k58p.dlog:122: query => {[colorado:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),river(B),traverse(B,A))))
        Example tmpe6f2k58p.dlog:123: query => {[colorado:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),river(B),traverse(B,A))))
        Example tmpe6f2k58p.dlog:124: query => {} | answer(A,(major(A),city(A),loc(A,B),largest(B,state(B))))
        Example tmpe6f2k58p.dlog:125: query => {[california:stateid/2]} | answer(A,largest(B,(population(A,B),state(A),loc(A,C),const(C,countryid(usa)))))
        Example tmpe6f2k58p.dlog:126: query => {[jerimoth hill:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid('rhode island')))))
        Example tmpe6f2k58p.dlog:127: query => {[alaska:stateid/2]} | answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpe6f2k58p.dlog:128: query => {[montgomery_al:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(alabama)),state(B)))
        Example tmpe6f2k58p.dlog:129: query => {[california:stateid/2]} | answer(A,(state(A),loc(B,A),lowest(B,place(B))))
        Example tmpe6f2k58p.dlog:130: query => {[wabash:riverid/2],[ohio:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(ohio))))
        Example tmpe6f2k58p.dlog:131: query => {[sassafras mountain:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid('south carolina')))))
        Example tmpe6f2k58p.dlog:132: query => {[alaska:stateid/2],[hawaii:stateid/2]} | answer(A,(state(A),\+(next_to(A,B),state(B))))
        Example tmpe6f2k58p.dlog:133: query => {[new york:stateid/2],[pennsylvania:stateid/2],[delaware:stateid/2],[new jersey:stateid/2]} | answer(A,(state(A),shortest(B,river(B)),traverse(B,A)))
        Example tmpe6f2k58p.dlog:134: query => {[allegheny:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid('new york')))))
        Example tmpe6f2k58p.dlog:135: query => {[435count]} | answer(A,count(B,(city(B),loc(B,C),const(C,countryid(usa))),A))
        Example tmpe6f2k58p.dlog:136: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:137: query => {[7071639count]} | answer(A,(size(B,A),const(B,cityid('new york',_))))
        Example tmpe6f2k58p.dlog:138: query => {[connecticut:riverid/2],[clark fork:riverid/2],[allegheny:riverid/2],[south platte:riverid/2],[hudson:riverid/2],[tombigbee:riverid/2],[chattahoochee:riverid/2],[roanoke:riverid/2],[delaware:riverid/2],[wateree catawba:riverid/2],[powder:riverid/2],[bighorn:riverid/2],[niobrara:riverid/2],[rock:riverid/2],[potomac:riverid/2],[republican:riverid/2],[neosho:riverid/2],[san juan:riverid/2],[st. francis:riverid/2]} | answer(A,(major(A),river(A),loc(A,B),const(B,countryid(usa))))
        Example tmpe6f2k58p.dlog:139: query => {[arizona:stateid/2]} | answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(california)))))
        Example tmpe6f2k58p.dlog:140: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpe6f2k58p.dlog:141: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),population(A,B))))
        Example tmpe6f2k58p.dlog:142: query => {[nevada:stateid/2],[utah:stateid/2],[colorado:stateid/2],[california:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),const(B,riverid(colorado)),traverse(B,A)))
        Example tmpe6f2k58p.dlog:143: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),loc(A,B),state(B),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:144: query => {[new york_ny:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpe6f2k58p.dlog:145: query => {[alaska:stateid/2]} | answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpe6f2k58p.dlog:146: query => {[5count]} | answer(A,count(B,(state(B),loc(C,B),const(C,cityid(springfield,_))),A))
        Example tmpe6f2k58p.dlog:147: query => {[gila:riverid/2],[south platte:riverid/2],[washita:riverid/2],[pecos:riverid/2],[arkansas:riverid/2],[colorado:riverid/2],[cimarron:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[republican:riverid/2],[red:riverid/2],[neosho:riverid/2],[north platte:riverid/2],[green:riverid/2],[san juan:riverid/2]} | answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),const(C,stateid('new mexico'))))
        Example tmpe6f2k58p.dlog:148: query => {[tombigbee:riverid/2],[chattahoochee:riverid/2],[cumberland:riverid/2],[tennessee:riverid/2],[mississippi:riverid/2]} | answer(A,(river(A),traverse(A,B),state(B),const(C,stateid(alabama)),next_to(C,B)))
        Example tmpe6f2k58p.dlog:149: query => {[wheeler peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid('new mexico')))))
        Example tmpe6f2k58p.dlog:150: query => {[phoenix_az:cityid/3]} | answer(A,largest(B,(state(C),capital(C,A),population(A,B))))
        Example tmpe6f2k58p.dlog:151: query => {[51count]} | answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa))),A))
        Example tmpe6f2k58p.dlog:152: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpe6f2k58p.dlog:153: query => {[new mexico:stateid/2]} | answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))
        Example tmpe6f2k58p.dlog:154: query => {[2count]} | answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(oregon))),A))
        Example tmpe6f2k58p.dlog:155: query => {[louisiana:stateid/2]} | answer(A,smallest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))
        Example tmpe6f2k58p.dlog:156: query => {[colorado:stateid/2]} | answer(A,(state(A),city(B),const(B,cityid(denver,_)),loc(B,A)))
        Example tmpe6f2k58p.dlog:157: query => {[delaware:riverid/2]} | answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpe6f2k58p.dlog:158: query => {[alaska:stateid/2]} | answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpe6f2k58p.dlog:159: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))
        Example tmpe6f2k58p.dlog:160: query => {[death valley:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpe6f2k58p.dlog:161: query => {[3778000length]} | answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))
        Example tmpe6f2k58p.dlog:162: query => {[10count]} | answer(A,count(B,(state(B),const(C,riverid(mississippi)),traverse(C,B)),A))
        Example tmpe6f2k58p.dlog:163: query => {[1.53e+12length^2]} | answer(A,(area(B,A),largest(B,state(B))))
        Example tmpe6f2k58p.dlog:164: query => {[texas:stateid/2]} | answer(A,largest(B,(population(A,B),state(A),next_to(A,C),const(C,stateid(oklahoma)))))
        Example tmpe6f2k58p.dlog:165: query => {[135length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(delaware))))))
        Example tmpe6f2k58p.dlog:166: query => {[174431count]} | answer(A,(size(B,A),largest(B,(city(B),loc(B,C),const(C,stateid(alaska))))))
        Example tmpe6f2k58p.dlog:167: query => {[delaware:riverid/2]} | answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpe6f2k58p.dlog:168: query => {} | answer(A,(state(A),loc(B,A),major(B),city(B),const(B,cityid(austin,_))))
        Example tmpe6f2k58p.dlog:169: query => {[nevada:stateid/2],[utah:stateid/2],[colorado:stateid/2],[california:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),const(B,riverid(colorado)),river(B),traverse(B,A)))
        Example tmpe6f2k58p.dlog:170: query => {[naknek:lakeid/2],[salton sea:lakeid/2],[okeechobee:lakeid/2],[red:lakeid/2],[teshekpuk:lakeid/2],[flathead:lakeid/2],[tahoe:lakeid/2],[becharof:lakeid/2],[lake of the woods:lakeid/2],[iliamna:lakeid/2],[winnebago:lakeid/2],[rainy:lakeid/2],[pontchartrain:lakeid/2],[champlain:lakeid/2],[st. clair:lakeid/2],[mille lacs:lakeid/2]} | answer(A,(major(A),lake(A),loc(A,B),const(B,countryid(usa))))
        Example tmpe6f2k58p.dlog:171: query => {[105length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(florida))))))
        Example tmpe6f2k58p.dlog:172: query => {[3.46e-06count/length^2]} | answer(A,(density(B,A),const(B,stateid('south dakota'))))
        Example tmpe6f2k58p.dlog:173: query => {[new york_ny:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpe6f2k58p.dlog:174: query => {[wheeler peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid('new mexico')))))
        Example tmpe6f2k58p.dlog:175: query => {[2.85e+09length^2]} | answer(A,(area(B,A),smallest(B,state(B))))
        Example tmpe6f2k58p.dlog:176: query => {} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid('new mexico'))))
        Example tmpe6f2k58p.dlog:177: query => {[juneau_ak:cityid/3]} | answer(A,(capital(A),loc(A,B),largest(B,state(B))))
        Example tmpe6f2k58p.dlog:178: query => {[51count]} | answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa))),A))
        Example tmpe6f2k58p.dlog:179: query => {[phoenix_az:cityid/3]} | answer(A,largest(A,(capital(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpe6f2k58p.dlog:180: query => {[houston_tx:cityid/3]} | answer(A,largest(B,(population(A,B),city(A),loc(A,C),const(C,stateid(texas)))))
        Example tmpe6f2k58p.dlog:181: query => {[houston_tx:cityid/3]} | answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(texas)),population(A,B))))
        Example tmpe6f2k58p.dlog:182: query => {[district of columbia:stateid/2]} | answer(A,smallest(A,(state(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpe6f2k58p.dlog:183: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),const(B,riverid(missouri)),traverse(B,A)))
        Example tmpe6f2k58p.dlog:184: query => {[oxnard_ca:cityid/3],[bristol township_pa:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[fayetteville_nc:cityid/3],[orlando_fl:cityid/3],[san angelo_tx:cityid/3],[downey_ca:cityid/3],[greenville_sc:cityid/3],[concord_ca:cityid/3],[richardson_tx:cityid/3],[columbia_sc:cityid/3],[waukegan_il:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[lowell_ma:cityid/3],[charleston_sc:cityid/3],[largo_fl:cityid/3],[clearwater_fl:cityid/3],[bayonne_nj:cityid/3],[manchester_nh:cityid/3],[amarillo_tx:cityid/3],[vallejo_ca:cityid/3],[grand prairie_tx:cityid/3],[san bernardino_ca:cityid/3],[lakewood_oh:cityid/3],[bethesda_md:cityid/3],[evanston_il:cityid/3],[medford_ma:cityid/3],[san leandro_ca:cityid/3],[lakewood_co:cityid/3],[pueblo_co:cityid/3],[great falls_mt:cityid/3],[boise_id:cityid/3],[modesto_ca:cityid/3],[richmond_ca:cityid/3],[north charleston_sc:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[bellevue_wa:cityid/3],[reno_nv:cityid/3],[warwick_ri:cityid/3],[schenectady_ny:cityid/3],[sterling heights_mi:cityid/3],[peoria_il:cityid/3],[santa clara_ca:cityid/3],[bethlehem_pa:cityid/3],[utica_ny:cityid/3],[salem_or:cityid/3],[columbia_mo:cityid/3],[alexandria_va:cityid/3],[springfield_mo:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[livonia_mi:cityid/3],[lawton_ok:cityid/3],[fargo_nd:cityid/3],[citrus heights_ca:cityid/3],[waterford_mi:cityid/3],[independence_mo:cityid/3],[silver spring_md:cityid/3],[waco_tx:cityid/3],[carson_ca:cityid/3],[bristol_ct:cityid/3],[glendale_ca:cityid/3],[wyoming_mi:cityid/3],[rochester_mn:cityid/3],[beaumont_tx:cityid/3],[oceanside_ca:cityid/3],[oak lawn_il:cityid/3],[east orange_nj:cityid/3],[scranton_pa:cityid/3],[westland_mi:cityid/3],[south gate_ca:cityid/3],[bloomington_mn:cityid/3],[royal oak_mi:cityid/3],[terre haute_in:cityid/3],[ogden_ut:cityid/3],[longview_tx:cityid/3],[anderson_in:cityid/3],[springfield_oh:cityid/3],[waterloo_ia:cityid/3],[troy_mi:cityid/3],[rockford_il:cityid/3],[somerville_ma:cityid/3],[lynn_ma:cityid/3],[quincy_ma:cityid/3],[cicero_il:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[huntington_wv:cityid/3],[norwalk_ct:cityid/3],[bridgeport_ct:cityid/3],[ontario_ca:cityid/3],[alhambra_ca:cityid/3],[lorain_oh:cityid/3],[penn hills_pa:cityid/3],[macon_ga:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[billings_mt:cityid/3],[dearborn heights_mi:cityid/3],[wilmington_de:cityid/3],[hayward_ca:cityid/3],[irving_tx:cityid/3],[scottsdale_az:cityid/3],[cedar rapids_ia:cityid/3],[santa monica_ca:cityid/3],[kettering_oh:cityid/3],[santa rosa_ca:cityid/3],[gainesville_fl:cityid/3],[kendall_fl:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[arvada_co:cityid/3],[brownsville_tx:cityid/3],[sioux falls_sd:cityid/3],[kalamazoo_mi:cityid/3],[south bend_in:cityid/3],[clifton_nj:cityid/3],[chula vista_ca:cityid/3],[euclid_oh:cityid/3],[redondo beach_ca:cityid/3],[hartford_ct:cityid/3],[mesquite_tx:cityid/3],[clinton_mi:cityid/3],[burbank_ca:cityid/3],[farmington hills_mi:cityid/3],[middletown_nj:cityid/3],[pasadena_tx:cityid/3],[racine_wi:cityid/3],[youngstown_oh:cityid/3],[huntsville_al:cityid/3],[cheektowaga_ny:cityid/3],[framingham_ma:cityid/3],[monroe_la:cityid/3],[tallahassee_fl:cityid/3],[champaign_il:cityid/3],[tuscaloosa_al:cityid/3],[boulder_co:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[woodbridge_nj:cityid/3],[reading_pa:cityid/3],[newport news_va:cityid/3],[wichita falls_tx:cityid/3],[fort smith_ar:cityid/3],[danbury_ct:cityid/3],[mount vernon_ny:cityid/3],[fort collins_co:cityid/3],[ann arbor_mi:cityid/3],[waltham_ma:cityid/3],[nashua_nh:cityid/3],[alameda_ca:cityid/3],[stamford_ct:cityid/3],[arlington heights_il:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[laredo_tx:cityid/3],[high point_nc:cityid/3],[dubuque_ia:cityid/3],[sunnyvale_ca:cityid/3],[charleston_wv:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[dundalk_md:cityid/3],[meriden_ct:cityid/3],[west allis_wi:cityid/3],[lynchburg_va:cityid/3],[west hartford_ct:cityid/3],[southfield_mi:cityid/3],[paterson_nj:cityid/3],[altoona_pa:cityid/3],[lansing_mi:cityid/3],[hollywood_fl:cityid/3],[st. clair shores_mi:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[ventura_ca:cityid/3],[new bedford_ma:cityid/3],[tempe_az:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[pensacola_fl:cityid/3],[duluth_mn:cityid/3],[greenwich_ct:cityid/3],[skokie_il:cityid/3],[elyria_oh:cityid/3],[sioux city_ia:cityid/3],[bakersfield_ca:cityid/3],[niagara falls_ny:cityid/3],[thousand oaks_ca:cityid/3],[cranston_ri:cityid/3],[evansville_in:cityid/3],[trenton_nj:cityid/3],[redford_mi:cityid/3],[kenosha_wi:cityid/3],[durham_nc:cityid/3],[fremont_ca:cityid/3],[camden_nj:cityid/3],[miami beach_fl:cityid/3],[odessa_tx:cityid/3],[appleton_wi:cityid/3],[muncie_in:cityid/3],[overland park_ks:cityid/3],[green bay_wi:cityid/3],[topeka_ks:cityid/3],[edison_nj:cityid/3],[waterbury_ct:cityid/3],[hampton_va:cityid/3],[west valley_ut:cityid/3],[st. joseph_mo:cityid/3],[savannah_ga:cityid/3],[torrance_ca:cityid/3],[lakewood_ca:cityid/3],[casper_wy:cityid/3],[hammond_in:cityid/3],[irvington_nj:cityid/3],[abingdon_pa:cityid/3],[eugene_or:cityid/3],[joliet_il:cityid/3],[simi valley_ca:cityid/3],[west palm beach_fl:cityid/3],[dearborn_mi:cityid/3],[cherry hill_nj:cityid/3],[new haven_ct:cityid/3],[lawrence_ma:cityid/3],[chesapeake_va:cityid/3],[springfield_il:cityid/3],[erie_pa:cityid/3],[compton_ca:cityid/3],[levittown_ny:cityid/3],[aurora_il:cityid/3],[albany_ny:cityid/3],[elizabeth_nj:cityid/3],[pontiac_mi:cityid/3],[whittier_ca:cityid/3],[decatur_il:cityid/3],[pawtucket_ri:cityid/3],[koolaupoko_hi:cityid/3],[north little rock_ar:cityid/3],[lake charles_la:cityid/3],[fullerton_ca:cityid/3],[davenport_ia:cityid/3],[fall river_ma:cityid/3],[brockton_ma:cityid/3],[midland_tx:cityid/3],[new rochelle_ny:cityid/3],[lafayette_la:cityid/3],[parma_oh:cityid/3],[allentown_pa:cityid/3],[provo_ut:cityid/3],[upper darby_pa:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[roanoke_va:cityid/3],[pasadena_ca:cityid/3],[port arthur_tx:cityid/3],[newton_ma:cityid/3],[glendale_az:cityid/3],[tyler_tx:cityid/3],[new britain_ct:cityid/3],[escondido_ca:cityid/3],[elgin_il:cityid/3],[cambridge_ma:cityid/3],[lower merion_pa:cityid/3],[irondequoit_ny:cityid/3],[norman_ok:cityid/3],[portland_me:cityid/3],[taylor_mi:cityid/3],[albany_ga:cityid/3],[hamilton_oh:cityid/3],[saginaw_mi:cityid/3],[kenner_la:cityid/3],[canton_oh:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,countryid(usa))))
        Example tmpe6f2k58p.dlog:185: query => {[17558000count]} | answer(A,(population(B,A),const(B,stateid('new york'))))
        Example tmpe6f2k58p.dlog:186: query => {[fayetteville_nc:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[high point_nc:cityid/3],[durham_nc:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid('north carolina'))))
        Example tmpe6f2k58p.dlog:187: query => {[kentucky:stateid/2],[indiana:stateid/2],[pennsylvania:stateid/2],[illinois:stateid/2],[ohio:stateid/2],[west virginia:stateid/2]} | answer(A,(state(A),const(B,riverid(ohio)),river(B),traverse(B,A)))
        Example tmpe6f2k58p.dlog:188: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[lubbock_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[fort worth_tx:cityid/3],[houston_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[corpus christi_tx:cityid/3],[longview_tx:cityid/3],[arlington_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[austin_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[el paso_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[dallas_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[san antonio_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:189: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))
        Example tmpe6f2k58p.dlog:190: query => {[pawtucket_ri:cityid/3],[warwick_ri:cityid/3],[cranston_ri:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid('rhode island'))))
        Example tmpe6f2k58p.dlog:191: query => {[ohio:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(pennsylvania)))))
        Example tmpe6f2k58p.dlog:192: query => {[republican:riverid/2]} | answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(nebraska)))))
        Example tmpe6f2k58p.dlog:193: query => {[10count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid(colorado))),A))
        Example tmpe6f2k58p.dlog:194: query => {[colorado:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(california)))))
        Example tmpe6f2k58p.dlog:195: query => {[houston_tx:cityid/3]} | answer(A,largest(B,(const(C,stateid(texas)),city(A),loc(A,C),population(A,B))))
        Example tmpe6f2k58p.dlog:196: query => {[california:stateid/2]} | answer(A,(const(B,cityid(sacramento,_)),capital(B),loc(B,A),state(A)))
        Example tmpe6f2k58p.dlog:197: query => {[562994count]} | answer(A,(population(B,A),const(B,cityid(boston,ma))))
        Example tmpe6f2k58p.dlog:198: query => {[alaska:stateid/2]} | answer(A,(state(A),largest(B,(state(A),area(A,B)))))
        Example tmpe6f2k58p.dlog:199: query => {[rio grande:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(texas)))))
        Example tmpe6f2k58p.dlog:200: query => {[oxnard_ca:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[downey_ca:cityid/3],[concord_ca:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[vallejo_ca:cityid/3],[san bernardino_ca:cityid/3],[san leandro_ca:cityid/3],[modesto_ca:cityid/3],[richmond_ca:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[santa clara_ca:cityid/3],[citrus heights_ca:cityid/3],[carson_ca:cityid/3],[glendale_ca:cityid/3],[oceanside_ca:cityid/3],[south gate_ca:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[ontario_ca:cityid/3],[alhambra_ca:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[hayward_ca:cityid/3],[santa monica_ca:cityid/3],[santa rosa_ca:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[chula vista_ca:cityid/3],[redondo beach_ca:cityid/3],[burbank_ca:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[alameda_ca:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[sunnyvale_ca:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[ventura_ca:cityid/3],[bakersfield_ca:cityid/3],[thousand oaks_ca:cityid/3],[fremont_ca:cityid/3],[torrance_ca:cityid/3],[lakewood_ca:cityid/3],[simi valley_ca:cityid/3],[compton_ca:cityid/3],[whittier_ca:cityid/3],[fullerton_ca:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[pasadena_ca:cityid/3],[escondido_ca:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(california))))
        Example tmpe6f2k58p.dlog:201: query => {[bellevue_wa:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(washington)))))
        Example tmpe6f2k58p.dlog:202: query => {[mississippi:riverid/2]} | answer(A,largest(A,(river(A),loc(A,B),const(B,stateid(illinois)))))
        Example tmpe6f2k58p.dlog:203: query => {[arizona:stateid/2],[nevada:stateid/2],[oregon:stateid/2]} | answer(A,(next_to(A,B),state(A),const(B,stateid(california))))
        Example tmpe6f2k58p.dlog:204: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmpe6f2k58p.dlog:205: query => {[atlanta_ga:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(georgia)))))
        Example tmpe6f2k58p.dlog:206: query => {[detroit_mi:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(michigan)))))
        Example tmpe6f2k58p.dlog:207: query => {[17558000count]} | answer(A,(population(B,A),const(B,stateid('new york'))))
        Example tmpe6f2k58p.dlog:208: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example tmpe6f2k58p.dlog:209: query => {[texas:stateid/2]} | answer(A,(state(A),const(B,cityid(austin,_)),capital(B),loc(B,A)))
        Example tmpe6f2k58p.dlog:210: query => {[61572count]} | answer(A,(population(B,A),const(B,cityid(portland,me))))
        Example tmpe6f2k58p.dlog:211: query => {[columbia_sc:cityid/3],[phoenix_az:cityid/3],[baton rouge_la:cityid/3],[salt lake city_ut:cityid/3],[concord_nh:cityid/3],[boise_id:cityid/3],[richmond_va:cityid/3],[boston_ma:cityid/3],[cheyenne_wy:cityid/3],[madison_wi:cityid/3],[des moines_ia:cityid/3],[salem_or:cityid/3],[raleigh_nc:cityid/3],[indianapolis_in:cityid/3],[oklahoma city_ok:cityid/3],[jackson_ms:cityid/3],[nashville_tn:cityid/3],[hartford_ct:cityid/3],[washington_dc:cityid/3],[little rock_ar:cityid/3],[austin_tx:cityid/3],[juneau_ak:cityid/3],[providence_ri:cityid/3],[tallahassee_fl:cityid/3],[lincoln_ne:cityid/3],[bismarck_nd:cityid/3],[santa fe_nm:cityid/3],[charleston_wv:cityid/3],[sacramento_ca:cityid/3],[st. paul_mn:cityid/3],[lansing_mi:cityid/3],[trenton_nj:cityid/3],[columbus_oh:cityid/3],[honolulu_hi:cityid/3],[atlanta_ga:cityid/3],[montgomery_al:cityid/3],[topeka_ks:cityid/3],[denver_co:cityid/3],[springfield_il:cityid/3],[dover_de:cityid/3],[albany_ny:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,countryid(usa))))
        Example tmpe6f2k58p.dlog:212: query => {[mississippi:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(mississippi)))))
        Example tmpe6f2k58p.dlog:213: query => {[435count]} | answer(A,count(B,(city(B),const(C,countryid(usa)),loc(B,C)),A))
        Example tmpe6f2k58p.dlog:214: query => {[nevada:stateid/2],[utah:stateid/2],[colorado:stateid/2],[california:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),const(B,riverid(colorado)),river(B),traverse(B,A)))
        Example tmpe6f2k58p.dlog:215: query => {[171300count]} | answer(A,(population(B,A),const(B,cityid(spokane,wa))))
        Example tmpe6f2k58p.dlog:216: query => {[rio grande:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(texas)))))
        Example tmpe6f2k58p.dlog:217: query => {[anchorage_ak:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(alaska)))))
        Example tmpe6f2k58p.dlog:218: query => {[17558000count]} | answer(A,(population(B,A),const(B,stateid('new york'))))
        Example tmpe6f2k58p.dlog:219: query => {[delaware river:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(pennsylvania)))))
        Example tmpe6f2k58p.dlog:220: query => {[overland park_ks:cityid/3],[topeka_ks:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(kansas))))
        Example tmpe6f2k58p.dlog:221: query => {[6194length]} | answer(A,(elevation(B,A),const(B,placeid('mount mckinley'))))
        Example tmpe6f2k58p.dlog:222: query => {[iowa:stateid/2],[nevada:stateid/2],[utah:stateid/2],[south dakota:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[wyoming:stateid/2],[missouri:stateid/2],[texas:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[montana:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),const(C,stateid(colorado))))
        Example tmpe6f2k58p.dlog:223: query => {[north little rock_ar:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(arkansas)))))
        Example tmpe6f2k58p.dlog:224: query => {[milwaukee_wi:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(wisconsin)))))
        Example tmpe6f2k58p.dlog:225: query => {[9.83e+12length^2]} | answer(A,(area(B,A),const(B,countryid(usa))))
        Example tmpe6f2k58p.dlog:226: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))
        Example tmpe6f2k58p.dlog:227: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),longest(B,river(B)),traverse(B,A)))
        Example tmpe6f2k58p.dlog:228: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example tmpe6f2k58p.dlog:229: query => {[arkansas:stateid/2],[louisiana:stateid/2],[tennessee:stateid/2],[alabama:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(mississippi))))
        Example tmpe6f2k58p.dlog:230: query => {[mississippi:riverid/2]} | answer(A,most(A,B,(river(A),traverse(A,B),state(B))))
        Example tmpe6f2k58p.dlog:231: query => {[st. louis_mo:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(missouri)))))
        Example tmpe6f2k58p.dlog:232: query => {[133116count]} | answer(A,(population(B,A),const(B,cityid(springfield,mo))))
        Example tmpe6f2k58p.dlog:233: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,tx))))
        Example tmpe6f2k58p.dlog:234: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example tmpe6f2k58p.dlog:235: query => {[new york_ny:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpe6f2k58p.dlog:236: query => {[casper_wy:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(wyoming))))
        Example tmpe6f2k58p.dlog:237: query => {[638333count]} | answer(A,(population(B,A),const(B,cityid(washington,dc))))
        Example tmpe6f2k58p.dlog:238: query => {[wilmington_de:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(delaware))))
        Example tmpe6f2k58p.dlog:239: query => {[ohio:stateid/2]} | answer(A,(state(A),const(B,cityid(columbus,_)),capital(B),loc(B,A)))
        Example tmpe6f2k58p.dlog:240: query => {[3.15e+11length^2]} | answer(A,(area(B,A),const(B,stateid('new mexico'))))
        Example tmpe6f2k58p.dlog:241: query => {[10count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,riverid(mississippi)),river(C)),A))
        Example tmpe6f2k58p.dlog:242: query => {[lake michigan:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(wisconsin)))))
        Example tmpe6f2k58p.dlog:243: query => {[arkansas river:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(colorado)))))
        Example tmpe6f2k58p.dlog:244: query => {[3033000length]} | answer(A,(len(B,A),const(B,riverid('rio grande')),river(B)))
        Example tmpe6f2k58p.dlog:245: query => {} | answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(alaska)))))
        Example tmpe6f2k58p.dlog:246: query => {} | answer(A,highest(A,(mountain(A),loc(A,B),const(B,stateid(texas)))))
        Example tmpe6f2k58p.dlog:247: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),loc(A,B),const(B,countryid(usa))))
        Example tmpe6f2k58p.dlog:248: query => {[920600count]} | answer(A,(population(B,A),const(B,stateid('new hampshire'))))
        Example tmpe6f2k58p.dlog:249: query => {[mississippi:riverid/2]} | answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(iowa)))))
        Example tmpe6f2k58p.dlog:250: query => {[5count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid(texas))),A))
        Example tmpe6f2k58p.dlog:251: query => {[493846count]} | answer(A,(population(B,A),const(B,cityid(seattle,wa))))
        Example tmpe6f2k58p.dlog:252: query => {[wichita_ks:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(kansas)))))
        Example tmpe6f2k58p.dlog:253: query => {[birmingham_al:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(alabama)))))
        Example tmpe6f2k58p.dlog:254: query => {[great falls_mt:cityid/3],[billings_mt:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(montana))))
        Example tmpe6f2k58p.dlog:255: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[longview_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:256: query => {[1.81e+11length^2],[1.06e+11length^2],[1.38e+11length^2],[1.76e+11length^2],[2.20e+11length^2],[1.07e+11length^2],[2.85e+09length^2],[2.00e+11length^2],[2.15e+10length^2],[9.38e+10length^2],[1.53e+12length^2],[2.51e+11length^2],[2.71e+10length^2],[5.29e+09length^2],[8.06e+10length^2],[2.02e+10length^2],[1.34e+11length^2],[1.68e+10length^2],[2.15e+11length^2],[1.78e+11length^2],[2.49e+10length^2],[1.83e+11length^2],[1.24e+11length^2],[1.17e+11length^2],[6.91e+11length^2],[6.27e+10length^2],[1.53e+11length^2],[1.46e+11length^2],[2.95e+11length^2],[3.81e+11length^2],[1.52e+11length^2],[3.15e+11length^2],[2.40e+10length^2],[1.09e+11length^2],[2.19e+11length^2],[1.30e+10length^2],[1.45e+11length^2],[3.14e+09length^2],[2.53e+11length^2],[8.62e+10length^2],[2.86e+11length^2],[2.13e+11length^2],[1.27e+11length^2],[4.09e+11length^2],[1.36e+11length^2],[2.69e+11length^2]} | answer(A,(area(B,A),state(B)))
        Example tmpe6f2k58p.dlog:257: query => {[0count]} | answer(A,count(B,(state(B),next_to(B,C),largest(C,state(C))),A))
        Example tmpe6f2k58p.dlog:258: query => {[gannett peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(wyoming)))))
        Example tmpe6f2k58p.dlog:259: query => {[1count]} | answer(A,count(B,(state(B),loc(C,B),city(C),const(C,cityid(austin,_))),A))
        Example tmpe6f2k58p.dlog:260: query => {[10count]} | answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(florida))),A))
        Example tmpe6f2k58p.dlog:261: query => {[690767count]} | answer(A,(population(B,A),const(B,stateid('south dakota'))))
        Example tmpe6f2k58p.dlog:262: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,tx))))
        Example tmpe6f2k58p.dlog:263: query => {[pacific ocean:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(oregon)))))
        Example tmpe6f2k58p.dlog:264: query => {[2.06e-05count/length^2]} | answer(A,(density(B,A),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:265: query => {[concord_nh:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid('new hampshire'))))
        Example tmpe6f2k58p.dlog:266: query => {[638333count]} | answer(A,(population(B,A),const(B,cityid(washington,dc))))
        Example tmpe6f2k58p.dlog:267: query => {[2count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid(idaho))),A))
        Example tmpe6f2k58p.dlog:268: query => {[phoenix_az:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(arizona)))))
        Example tmpe6f2k58p.dlog:269: query => {[alaska:stateid/2]} | answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpe6f2k58p.dlog:270: query => {[west virginia:stateid/2]} | answer(A,smallest(A,(state(A),next_to(A,B),const(B,stateid(ohio)))))
        Example tmpe6f2k58p.dlog:271: query => {[mount elbert:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(colorado)))))
        Example tmpe6f2k58p.dlog:272: query => {[walton county:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(florida)))))
        Example tmpe6f2k58p.dlog:273: query => {[mount sunflower:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(kansas)))))
        Example tmpe6f2k58p.dlog:274: query => {[omaha_ne:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(nebraska)))))
        Example tmpe6f2k58p.dlog:275: query => {[portland_or:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(oregon)))))
        Example tmpe6f2k58p.dlog:276: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))
        Example tmpe6f2k58p.dlog:277: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B))))
        Example tmpe6f2k58p.dlog:278: query => {[houston_tx:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))
        Example tmpe6f2k58p.dlog:279: query => {[district of columbia:stateid/2]} | answer(A,smallest(B,(state(A),area(A,B))))
        Example tmpe6f2k58p.dlog:280: query => {[mississippi river:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(iowa)))))
        Example tmpe6f2k58p.dlog:281: query => {[21count]} | answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(texas))),A))
        Example tmpe6f2k58p.dlog:282: query => {[koolaupoko_hi:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(hawaii)))))
        Example tmpe6f2k58p.dlog:283: query => {[new orleans:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(louisiana)))))
        Example tmpe6f2k58p.dlog:284: query => {[houston_tx:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))
        Example tmpe6f2k58p.dlog:285: query => {[678974count]} | answer(A,(population(B,A),const(B,cityid('san francisco',_))))
        Example tmpe6f2k58p.dlog:286: query => {[casper_wy:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(wyoming)))))
        Example tmpe6f2k58p.dlog:287: query => {} | answer(A,(river(A),traverse(A,B),largest(B,state(B))))
        Example tmpe6f2k58p.dlog:288: query => {[-85length]} | answer(A,(elevation(B,A),const(B,placeid('death valley'))))
        Example tmpe6f2k58p.dlog:289: query => {[mckinley:mountainid/2]} | answer(A,highest(A,(mountain(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpe6f2k58p.dlog:290: query => {[11count]} | answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(pennsylvania))),A))
        Example tmpe6f2k58p.dlog:291: query => {[dakota:riverid/2],[wabash:riverid/2],[gila:riverid/2],[connecticut:riverid/2],[clark fork:riverid/2],[allegheny:riverid/2],[south platte:riverid/2],[washita:riverid/2],[hudson:riverid/2],[snake:riverid/2],[tombigbee:riverid/2],[chattahoochee:riverid/2],[pecos:riverid/2],[ohio:riverid/2],[arkansas:riverid/2],[roanoke:riverid/2],[colorado:riverid/2],[little missouri:riverid/2],[delaware:riverid/2],[wateree catawba:riverid/2],[cimarron:riverid/2],[white:riverid/2],[powder:riverid/2],[bighorn:riverid/2],[niobrara:riverid/2],[rock:riverid/2],[columbia:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[pearl:riverid/2],[potomac:riverid/2],[canadian:riverid/2],[republican:riverid/2],[red:riverid/2],[neosho:riverid/2],[north platte:riverid/2],[ouachita:riverid/2],[yellowstone:riverid/2],[cheyenne:riverid/2],[green:riverid/2],[san juan:riverid/2],[missouri:riverid/2],[st. francis:riverid/2]} | answer(A,(river(A),\+(traverse(A,B),const(B,stateid(tennessee)))))
        Example tmpe6f2k58p.dlog:292: query => {[1.85e-06count/length^2]} | answer(A,(density(B,A),const(B,stateid(wyoming))))
        Example tmpe6f2k58p.dlog:293: query => {[1303000count]} | answer(A,(population(B,A),const(B,stateid('new mexico'))))
        Example tmpe6f2k58p.dlog:294: query => {[campbell hill:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(ohio)))))
        Example tmpe6f2k58p.dlog:295: query => {[gulf of mexico:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmpe6f2k58p.dlog:296: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example tmpe6f2k58p.dlog:297: query => {[texas:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))
        Example tmpe6f2k58p.dlog:298: query => {[690767count]} | answer(A,(population(B,A),const(B,stateid('south dakota'))))
        Example tmpe6f2k58p.dlog:299: query => {[3count]} | answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(arizona))),A))
        Example tmpe6f2k58p.dlog:300: query => {[clark fork:riverid/2],[little missouri:riverid/2],[powder:riverid/2],[bighorn:riverid/2],[yellowstone:riverid/2],[missouri:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(montana))))
        Example tmpe6f2k58p.dlog:301: query => {[2.06e-05count/length^2]} | answer(A,(density(B,A),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:302: query => {[texas:stateid/2]} | answer(A,(state(A),loc(B,A),city(B),const(B,cityid(austin,_))))
        Example tmpe6f2k58p.dlog:303: query => {[4.09e+11length^2]} | answer(A,(size(B,A),const(B,stateid(california))))
        Example tmpe6f2k58p.dlog:304: query => {[nevada:stateid/2],[utah:stateid/2],[colorado:stateid/2],[california:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,riverid(colorado))))
        Example tmpe6f2k58p.dlog:305: query => {[1count]} | answer(A,count(B,(river(B),const(B,riverid(colorado))),A))
        Example tmpe6f2k58p.dlog:306: query => {[170876count]} | answer(A,(population(B,A),const(B,cityid(riverside,_))))
        Example tmpe6f2k58p.dlog:307: query => {[30count]} | answer(A,count(B,(city(B),const(C,stateid(texas)),loc(B,C)),A))
        Example tmpe6f2k58p.dlog:308: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B))))
        Example tmpe6f2k58p.dlog:309: query => {[new york:stateid/2]} | answer(A,largest(B,(state(A),loc(B,A),city(B))))
        Example tmpe6f2k58p.dlog:310: query => {[oxnard_ca:cityid/3],[dayton_oh:cityid/3],[bristol township_pa:cityid/3],[duval circle_dc:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[fayetteville_nc:cityid/3],[orlando_fl:cityid/3],[san angelo_tx:cityid/3],[downey_ca:cityid/3],[greenville_sc:cityid/3],[concord_ca:cityid/3],[richardson_tx:cityid/3],[grand island_ne:cityid/3],[columbia_sc:cityid/3],[waukegan_il:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[lubbock_tx:cityid/3],[lowell_ma:cityid/3],[phoenix_az:cityid/3],[charleston_sc:cityid/3],[largo_fl:cityid/3],[clearwater_fl:cityid/3],[bayonne_nj:cityid/3],[idaho falls_id:cityid/3],[baton rouge_la:cityid/3],[san jose_ca:cityid/3],[salt lake city_ut:cityid/3],[manchester_nh:cityid/3],[amarillo_tx:cityid/3],[georgetown_dc:cityid/3],[vallejo_ca:cityid/3],[grand prairie_tx:cityid/3],[covington_ky:cityid/3],[new york_ny:cityid/3],[concord_nh:cityid/3],[san bernardino_ca:cityid/3],[portsmouth_nh:cityid/3],[warren_mi:cityid/3],[lakewood_oh:cityid/3],[bethesda_md:cityid/3],[louisville_ky:cityid/3],[yonkers_ny:cityid/3],[evanston_il:cityid/3],[fort worth_tx:cityid/3],[omaha_ne:cityid/3],[medford_ma:cityid/3],[san leandro_ca:cityid/3],[lakewood_co:cityid/3],[long beach_ca:cityid/3],[biloxi_ms:cityid/3],[mobile_al:cityid/3],[pueblo_co:cityid/3],[las vegas_nv:cityid/3],[great falls_mt:cityid/3],[boise_id:cityid/3],[richmond_va:cityid/3],[modesto_ca:cityid/3],[boston_ma:cityid/3],[cleveland_oh:cityid/3],[houston_tx:cityid/3],[cheyenne_wy:cityid/3],[richmond_ca:cityid/3],[north charleston_sc:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[madison_wi:cityid/3],[des moines_ia:cityid/3],[bellevue_wa:cityid/3],[reno_nv:cityid/3],[warwick_ri:cityid/3],[schenectady_ny:cityid/3],[sterling heights_mi:cityid/3],[birmingham_al:cityid/3],[norfolk_va:cityid/3],[peoria_il:cityid/3],[santa clara_ca:cityid/3],[newark_nj:cityid/3],[bethlehem_pa:cityid/3],[aurora_co:cityid/3],[utica_ny:cityid/3],[salem_or:cityid/3],[milwaukee_wi:cityid/3],[fort lauderdale_fl:cityid/3],[columbia_mo:cityid/3],[alexandria_va:cityid/3],[springfield_mo:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[livonia_mi:cityid/3],[lawton_ok:cityid/3],[fargo_nd:cityid/3],[citrus heights_ca:cityid/3],[waterford_mi:cityid/3],[independence_mo:cityid/3],[silver spring_md:cityid/3],[waco_tx:cityid/3],[st. louis_mo:cityid/3],[oakland_ca:cityid/3],[worcester_ma:cityid/3],[carson_ca:cityid/3],[bennington_vt:cityid/3],[bristol_ct:cityid/3],[glendale_ca:cityid/3],[indianapolis_in:cityid/3],[wyoming_mi:cityid/3],[rochester_mn:cityid/3],[san diego_ca:cityid/3],[beaumont_tx:cityid/3],[charlotte_nc:cityid/3],[los angeles_ca:cityid/3],[watertown_sd:cityid/3],[oceanside_ca:cityid/3],[bangor_me:cityid/3],[oak lawn_il:cityid/3],[east orange_nj:cityid/3],[oklahoma city_ok:cityid/3],[scranton_pa:cityid/3],[westland_mi:cityid/3],[south gate_ca:cityid/3],[bloomington_mn:cityid/3],[royal oak_mi:cityid/3],[corpus christi_tx:cityid/3],[terre haute_in:cityid/3],[ogden_ut:cityid/3],[longview_tx:cityid/3],[missoula_mt:cityid/3],[anderson_in:cityid/3],[springfield_oh:cityid/3],[tulsa_ok:cityid/3],[san francisco_ca:cityid/3],[waterloo_ia:cityid/3],[troy_mi:cityid/3],[riverside_ca:cityid/3],[rockford_il:cityid/3],[somerville_ma:cityid/3],[lynn_ma:cityid/3],[minneapolis_mn:cityid/3],[quincy_ma:cityid/3],[cicero_il:cityid/3],[fresno_ca:cityid/3],[jackson_ms:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[huntington_wv:cityid/3],[norwalk_ct:cityid/3],[bridgeport_ct:cityid/3],[ontario_ca:cityid/3],[arlington_tx:cityid/3],[alhambra_ca:cityid/3],[lorain_oh:cityid/3],[penn hills_pa:cityid/3],[macon_ga:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[memphis_tn:cityid/3],[billings_mt:cityid/3],[dearborn heights_mi:cityid/3],[wilmington_de:cityid/3],[hayward_ca:cityid/3],[irving_tx:cityid/3],[scottsdale_az:cityid/3],[cedar rapids_ia:cityid/3],[santa monica_ca:cityid/3],[kettering_oh:cityid/3],[santa rosa_ca:cityid/3],[rapid city_sd:cityid/3],[gainesville_fl:cityid/3],[hattiesburg_ms:cityid/3],[gary_in:cityid/3],[kendall_fl:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[sitka_ak:cityid/3],[arvada_co:cityid/3],[brownsville_tx:cityid/3],[sioux falls_sd:cityid/3],[flint_mi:cityid/3],[anchorage_ak:cityid/3],[kalamazoo_mi:cityid/3],[south bend_in:cityid/3],[clifton_nj:cityid/3],[chula vista_ca:cityid/3],[euclid_oh:cityid/3],[redondo beach_ca:cityid/3],[chattanooga_tn:cityid/3],[nashville_tn:cityid/3],[hartford_ct:cityid/3],[springfield_or:cityid/3],[washington_dc:cityid/3],[mesquite_tx:cityid/3],[clinton_mi:cityid/3],[burbank_ca:cityid/3],[farmington hills_mi:cityid/3],[middletown_nj:cityid/3],[las cruces_nm:cityid/3],[pasadena_tx:cityid/3],[little rock_ar:cityid/3],[pine bluff_ar:cityid/3],[racine_wi:cityid/3],[lexington_ky:cityid/3],[youngstown_oh:cityid/3],[tampa_fl:cityid/3],[austin_tx:cityid/3],[new orleans_la:cityid/3],[juneau_ak:cityid/3],[huntsville_al:cityid/3],[cheektowaga_ny:cityid/3],[framingham_ma:cityid/3],[cincinnati_oh:cityid/3],[providence_ri:cityid/3],[monroe_la:cityid/3],[tallahassee_fl:cityid/3],[lewiston_me:cityid/3],[kansas city_ks:cityid/3],[champaign_il:cityid/3],[tuscaloosa_al:cityid/3],[boulder_co:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[minot_nd:cityid/3],[woodbridge_nj:cityid/3],[reading_pa:cityid/3],[newport news_va:cityid/3],[wichita falls_tx:cityid/3],[fort smith_ar:cityid/3],[miami_fl:cityid/3],[danbury_ct:cityid/3],[lincoln_ne:cityid/3],[mount vernon_ny:cityid/3],[rock springs_wy:cityid/3],[fort collins_co:cityid/3],[ann arbor_mi:cityid/3],[waltham_ma:cityid/3],[bismarck_nd:cityid/3],[santa fe_nm:cityid/3],[akron_oh:cityid/3],[nashua_nh:cityid/3],[buffalo_ny:cityid/3],[alameda_ca:cityid/3],[stamford_ct:cityid/3],[arlington heights_il:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[laredo_tx:cityid/3],[high point_nc:cityid/3],[albuquerque_nm:cityid/3],[springfield_ma:cityid/3],[dubuque_ia:cityid/3],[auburn_me:cityid/3],[sunnyvale_ca:cityid/3],[charleston_wv:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[sacramento_ca:cityid/3],[dundalk_md:cityid/3],[meriden_ct:cityid/3],[tenleytown_dc:cityid/3],[ewa_hi:cityid/3],[mesa_az:cityid/3],[west allis_wi:cityid/3],[st. paul_mn:cityid/3],[lynchburg_va:cityid/3],[west hartford_ct:cityid/3],[southfield_mi:cityid/3],[paterson_nj:cityid/3],[st. petersburg_fl:cityid/3],[tucson_az:cityid/3],[el paso_tx:cityid/3],[seattle_wa:cityid/3],[altoona_pa:cityid/3],[lansing_mi:cityid/3],[sparks_nv:cityid/3],[rutland_vt:cityid/3],[hollywood_fl:cityid/3],[st. clair shores_mi:cityid/3],[mcallen_tx:cityid/3],[newark_de:cityid/3],[meridian_ms:cityid/3],[pocatello_id:cityid/3],[abilene_tx:cityid/3],[grand forks_nd:cityid/3],[ventura_ca:cityid/3],[new bedford_ma:cityid/3],[tempe_az:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[pensacola_fl:cityid/3],[lewiston_id:cityid/3],[duluth_mn:cityid/3],[greenwich_ct:cityid/3],[skokie_il:cityid/3],[elyria_oh:cityid/3],[sioux city_ia:cityid/3],[bakersfield_ca:cityid/3],[niagara falls_ny:cityid/3],[thousand oaks_ca:cityid/3],[cranston_ri:cityid/3],[evansville_in:cityid/3],[columbus_ga:cityid/3],[trenton_nj:cityid/3],[redford_mi:cityid/3],[kenosha_wi:cityid/3],[durham_nc:cityid/3],[fremont_ca:cityid/3],[camden_nj:cityid/3],[miami beach_fl:cityid/3],[columbus_oh:cityid/3],[odessa_tx:cityid/3],[appleton_wi:cityid/3],[wichita_ks:cityid/3],[muncie_in:cityid/3],[overland park_ks:cityid/3],[anaheim_ca:cityid/3],[fort wayne_in:cityid/3],[honolulu_hi:cityid/3],[aberdeen_sd:cityid/3],[atlanta_ga:cityid/3],[butte_mt:cityid/3],[jersey city_nj:cityid/3],[montgomery_al:cityid/3],[green bay_wi:cityid/3],[topeka_ks:cityid/3],[edison_nj:cityid/3],[grand rapids_mi:cityid/3],[jacksonville_fl:cityid/3],[dallas_tx:cityid/3],[waterbury_ct:cityid/3],[hampton_va:cityid/3],[west valley_ut:cityid/3],[roswell_nm:cityid/3],[north platte_ne:cityid/3],[st. joseph_mo:cityid/3],[chicago_il:cityid/3],[savannah_ga:cityid/3],[torrance_ca:cityid/3],[colorado springs_co:cityid/3],[denver_co:cityid/3],[lakewood_ca:cityid/3],[owensboro_ky:cityid/3],[casper_wy:cityid/3],[hammond_in:cityid/3],[virginia beach_va:cityid/3],[baltimore_md:cityid/3],[laramie_wy:cityid/3],[irvington_nj:cityid/3],[abingdon_pa:cityid/3],[eugene_or:cityid/3],[joliet_il:cityid/3],[simi valley_ca:cityid/3],[knoxville_tn:cityid/3],[wheeling_wv:cityid/3],[west palm beach_fl:cityid/3],[dearborn_mi:cityid/3],[cherry hill_nj:cityid/3],[santa ana_ca:cityid/3],[new haven_ct:cityid/3],[lawrence_ma:cityid/3],[chesapeake_va:cityid/3],[springfield_il:cityid/3],[sunrise manor_nv:cityid/3],[erie_pa:cityid/3],[compton_ca:cityid/3],[levittown_ny:cityid/3],[aurora_il:cityid/3],[metairie_la:cityid/3],[detroit_mi:cityid/3],[dover_de:cityid/3],[albany_ny:cityid/3],[elizabeth_nj:cityid/3],[pontiac_mi:cityid/3],[philadelphia_pa:cityid/3],[whittier_ca:cityid/3],[decatur_il:cityid/3],[pawtucket_ri:cityid/3],[koolaupoko_hi:cityid/3],[north little rock_ar:cityid/3],[essex_vt:cityid/3],[portland_or:cityid/3],[lake charles_la:cityid/3],[fullerton_ca:cityid/3],[davenport_ia:cityid/3],[kansas city_mo:cityid/3],[fall river_ma:cityid/3],[brockton_ma:cityid/3],[midland_tx:cityid/3],[new rochelle_ny:cityid/3],[lafayette_la:cityid/3],[greensboro_nc:cityid/3],[tacoma_wa:cityid/3],[parma_oh:cityid/3],[allentown_pa:cityid/3],[provo_ut:cityid/3],[upper darby_pa:cityid/3],[spokane_wa:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[roanoke_va:cityid/3],[arlington_va:cityid/3],[pasadena_ca:cityid/3],[port arthur_tx:cityid/3],[brookside_de:cityid/3],[newton_ma:cityid/3],[glendale_az:cityid/3],[san antonio_tx:cityid/3],[syracuse_ny:cityid/3],[tyler_tx:cityid/3],[rochester_ny:cityid/3],[new britain_ct:cityid/3],[escondido_ca:cityid/3],[toledo_oh:cityid/3],[elgin_il:cityid/3],[cambridge_ma:cityid/3],[lower merion_pa:cityid/3],[irondequoit_ny:cityid/3],[norman_ok:cityid/3],[pittsburgh_pa:cityid/3],[portland_me:cityid/3],[wahiawa_hi:cityid/3],[shreveport_la:cityid/3],[burlington_vt:cityid/3],[taylor_mi:cityid/3],[albany_ga:cityid/3],[hamilton_oh:cityid/3],[huntington beach_ca:cityid/3],[saginaw_mi:cityid/3],[fairbanks_ak:cityid/3],[kenner_la:cityid/3],[parkersburg_wv:cityid/3],[canton_oh:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,countryid(usa))))
        Example tmpe6f2k58p.dlog:311: query => {[annapolis_md:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(maryland))))
        Example tmpe6f2k58p.dlog:312: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:313: query => {[indianapolis_in:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(indiana))))
        Example tmpe6f2k58p.dlog:314: query => {[6.91e+11length^2]} | answer(A,(area(B,A),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:315: query => {[michigan:stateid/2]} | answer(A,(state(A),loc(B,A),city(B),const(B,cityid(flint,_))))
        Example tmpe6f2k58p.dlog:316: query => {[new york_ny:cityid/3]} | answer(A,largest(B,(city(A),population(A,B))))
        Example tmpe6f2k58p.dlog:317: query => {[6count]} | answer(A,count(B,(state(B),const(C,stateid(iowa)),next_to(C,B)),A))
        Example tmpe6f2k58p.dlog:318: query => {[23670000count]} | answer(A,(population(B,A),const(B,stateid(california))))
        Example tmpe6f2k58p.dlog:319: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmpe6f2k58p.dlog:320: query => {[492365count]} | answer(A,(population(B,A),const(B,cityid(denver,_))))
        Example tmpe6f2k58p.dlog:321: query => {[5count]} | answer(A,count(B,(river(B),traverse(B,C),const(C,stateid(texas))),A))
        Example tmpe6f2k58p.dlog:322: query => {[tahoe:lakeid/2],[salton sea:lakeid/2]} | answer(A,(lake(A),loc(A,B),const(B,stateid(california))))
        Example tmpe6f2k58p.dlog:323: query => {[lansing_mi:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(michigan))))
        Example tmpe6f2k58p.dlog:324: query => {[425022count]} | answer(A,(population(B,A),const(B,cityid(atlanta,_))))
        Example tmpe6f2k58p.dlog:325: query => {[493846count]} | answer(A,(population(B,A),const(B,cityid(seattle,_))))
        Example tmpe6f2k58p.dlog:326: query => {[31count]} | answer(A,count(B,(state(B),loc(C,B),major(C),river(C)),A))
        Example tmpe6f2k58p.dlog:327: query => {[904078count]} | answer(A,(population(B,A),const(B,cityid(dallas,_))))
        Example tmpe6f2k58p.dlog:328: query => {[west virginia:stateid/2]} | answer(A,(state(A),loc(B,A),smallest(B,capital(B))))
        Example tmpe6f2k58p.dlog:329: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[lubbock_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[fort worth_tx:cityid/3],[houston_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[corpus christi_tx:cityid/3],[longview_tx:cityid/3],[arlington_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[austin_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[el paso_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[dallas_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[san antonio_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:330: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmpe6f2k58p.dlog:331: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B))))
        Example tmpe6f2k58p.dlog:332: query => {[4.09e+11length^2]} | answer(A,(area(B,A),const(B,stateid(california))))
        Example tmpe6f2k58p.dlog:333: query => {[south platte:riverid/2],[arkansas:riverid/2],[colorado:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[republican:riverid/2],[north platte:riverid/2],[green:riverid/2],[san juan:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(colorado))))
        Example tmpe6f2k58p.dlog:334: query => {[massachusetts:stateid/2],[oregon:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[ohio:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,cityid(springfield,_))))
        Example tmpe6f2k58p.dlog:335: query => {[4076000count]} | answer(A,(population(B,A),const(B,stateid(minnesota))))
        Example tmpe6f2k58p.dlog:336: query => {[8count]} | answer(A,count(B,(state(B),const(C,stateid(missouri)),next_to(C,B)),A))
        Example tmpe6f2k58p.dlog:337: query => {[79722count]} | answer(A,(population(B,A),const(B,cityid(kalamazoo,_))))
        Example tmpe6f2k58p.dlog:338: query => {[786700count]} | answer(A,(population(B,A),const(B,stateid(montana))))
        Example tmpe6f2k58p.dlog:339: query => {[ohio:riverid/2],[potomac:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid('west virginia'))))
        Example tmpe6f2k58p.dlog:340: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,riverid(mississippi)),river(B)))
        Example tmpe6f2k58p.dlog:341: query => {[562994count]} | answer(A,(population(B,A),const(B,cityid(boston,_))))
        Example tmpe6f2k58p.dlog:342: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmpe6f2k58p.dlog:343: query => {[alaska:stateid/2],[hawaii:stateid/2]} | answer(A,(state(A),\+(next_to(A,B),state(B))))
        Example tmpe6f2k58p.dlog:344: query => {[new york:stateid/2],[pennsylvania:stateid/2],[delaware:stateid/2],[new jersey:stateid/2]} | answer(A,(state(A),loc(B,A),shortest(B,river(B))))
        Example tmpe6f2k58p.dlog:345: query => {[montpelier_vt:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(vermont))))
        Example tmpe6f2k58p.dlog:346: query => {[2633000count]} | answer(A,(population(B,A),const(B,stateid(oregon))))
        Example tmpe6f2k58p.dlog:347: query => {[phoenix_az:cityid/3]} | answer(A,largest(B,(capital(A),population(A,B))))
        Example tmpe6f2k58p.dlog:348: query => {[alaska:stateid/2]} | answer(A,highest(B,(state(A),loc(B,A),place(B))))
        Example tmpe6f2k58p.dlog:349: query => {[1.78e+11length^2]} | answer(A,(size(B,A),const(B,stateid(florida))))
        Example tmpe6f2k58p.dlog:350: query => {[richmond_va:cityid/3],[norfolk_va:cityid/3],[alexandria_va:cityid/3],[portsmouth_va:cityid/3],[newport news_va:cityid/3],[lynchburg_va:cityid/3],[hampton_va:cityid/3],[virginia beach_va:cityid/3],[chesapeake_va:cityid/3],[roanoke_va:cityid/3],[arlington_va:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(virginia))))
        Example tmpe6f2k58p.dlog:351: query => {[oregon:stateid/2]} | answer(A,(state(A),loc(B,A),capital(B),const(B,cityid(salem,_))))
        Example tmpe6f2k58p.dlog:352: query => {[mississippi:riverid/2]} | answer(A,most(A,B,(river(A),traverse(A,B),state(B))))
        Example tmpe6f2k58p.dlog:353: query => {[2718000count]} | answer(A,(population(B,A),const(B,stateid(arizona))))
        Example tmpe6f2k58p.dlog:354: query => {[3005172count]} | answer(A,(population(B,A),const(B,cityid(chicago,_))))
        Example tmpe6f2k58p.dlog:355: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpe6f2k58p.dlog:356: query => {[rock:riverid/2]} | answer(A,(major(A),river(A),traverse(A,B),const(B,stateid(illinois))))
        Example tmpe6f2k58p.dlog:357: query => {[4count]} | answer(A,count(B,(city(B),loc(B,C),const(C,stateid(montana))),A))
        Example tmpe6f2k58p.dlog:358: query => {[district of columbia:stateid/2]} | answer(A,smallest(B,(state(A),area(A,B))))
        Example tmpe6f2k58p.dlog:359: query => {[augusta_me:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(maine))))
        Example tmpe6f2k58p.dlog:360: query => {[2.15e+11length^2]} | answer(A,(area(B,A),const(B,stateid(idaho))))
        Example tmpe6f2k58p.dlog:361: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmpe6f2k58p.dlog:362: query => {[st. clair:lakeid/2]} | answer(A,(major(A),lake(A),loc(A,B),const(B,stateid(michigan))))
        Example tmpe6f2k58p.dlog:363: query => {[11400000count]} | answer(A,(population(B,A),const(B,stateid(illinois))))
        Example tmpe6f2k58p.dlog:364: query => {[8count]} | answer(A,count(B,(city(B),loc(B,C),const(C,stateid(louisiana))),A))
        Example tmpe6f2k58p.dlog:365: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:366: query => {[944000count]} | answer(A,(population(B,A),const(B,stateid(idaho))))
        Example tmpe6f2k58p.dlog:367: query => {[california:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),city(B))))
        Example tmpe6f2k58p.dlog:368: query => {[jefferson city_mo:cityid/3],[frankfort_ky:cityid/3],[phoenix_az:cityid/3],[baton rouge_la:cityid/3],[salt lake city_ut:cityid/3],[concord_nh:cityid/3],[harrisburg_pa:cityid/3],[richmond_va:cityid/3],[boston_ma:cityid/3],[cheyenne_wy:cityid/3],[madison_wi:cityid/3],[des moines_ia:cityid/3],[carson city_nv:cityid/3],[indianapolis_in:cityid/3],[oklahoma city_ok:cityid/3],[olympia_wa:cityid/3],[jackson_ms:cityid/3],[augusta_me:cityid/3],[nashville_tn:cityid/3],[washington_dc:cityid/3],[little rock_ar:cityid/3],[austin_tx:cityid/3],[juneau_ak:cityid/3],[providence_ri:cityid/3],[lincoln_ne:cityid/3],[bismarck_nd:cityid/3],[santa fe_nm:cityid/3],[sacramento_ca:cityid/3],[montpelier_vt:cityid/3],[st. paul_mn:cityid/3],[columbus_oh:cityid/3],[honolulu_hi:cityid/3],[annapolis_md:cityid/3],[atlanta_ga:cityid/3],[montgomery_al:cityid/3],[denver_co:cityid/3],[helena_mt:cityid/3],[dover_de:cityid/3],[pierre_sd:cityid/3]} | answer(A,(capital(A),\+(major(A),city(A))))
        Example tmpe6f2k58p.dlog:369: query => {[alaska:stateid/2],[hawaii:stateid/2]} | answer(A,(state(A),\+(next_to(A,B),state(B))))
        Example tmpe6f2k58p.dlog:370: query => {[177857count]} | answer(A,(population(B,A),const(B,cityid(montgomery,_))))
        Example tmpe6f2k58p.dlog:371: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmpe6f2k58p.dlog:372: query => {[olympia_wa:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(washington))))
        Example tmpe6f2k58p.dlog:373: query => {[scotts valley_ca:cityid/3]} | answer(A,smallest(B,(city(A),population(A,B))))
        Example tmpe6f2k58p.dlog:374: query => {[4113200count]} | answer(A,(population(B,A),const(B,stateid(washington))))
        Example tmpe6f2k58p.dlog:375: query => {[naknek:lakeid/2],[salton sea:lakeid/2],[okeechobee:lakeid/2],[red:lakeid/2],[teshekpuk:lakeid/2],[flathead:lakeid/2],[tahoe:lakeid/2],[michigan:lakeid/2],[becharof:lakeid/2],[erie:lakeid/2],[ontario:lakeid/2],[lake of the woods:lakeid/2],[iliamna:lakeid/2],[winnebago:lakeid/2],[great salt lake:lakeid/2],[superior:lakeid/2],[rainy:lakeid/2],[pontchartrain:lakeid/2],[champlain:lakeid/2],[huron:lakeid/2],[st. clair:lakeid/2],[mille lacs:lakeid/2]} | answer(A,(lake(A),loc(A,B),const(B,countryid(usa))))
        Example tmpe6f2k58p.dlog:376: query => {[3968000length]} | answer(A,(len(B,A),const(B,riverid(missouri)),river(B)))
        Example tmpe6f2k58p.dlog:377: query => {[23670000count]} | answer(A,(population(B,A),const(B,stateid(california))))
        Example tmpe6f2k58p.dlog:378: query => {[colorado:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,cityid(austin,tx))))
        Example tmpe6f2k58p.dlog:379: query => {[8.62e+10length^2]} | answer(A,(area(B,A),const(B,stateid(maine))))
        Example tmpe6f2k58p.dlog:380: query => {[0count]} | answer(A,count(B,(major(B),river(B),traverse(B,C),const(C,stateid(ohio))),A))
        Example tmpe6f2k58p.dlog:381: query => {[1.53e+12length^2]} | answer(A,(area(B,A),const(B,stateid(alaska))))
        Example tmpe6f2k58p.dlog:382: query => {[bristol township_pa:cityid/3],[bethlehem_pa:cityid/3],[scranton_pa:cityid/3],[penn hills_pa:cityid/3],[reading_pa:cityid/3],[altoona_pa:cityid/3],[abingdon_pa:cityid/3],[erie_pa:cityid/3],[philadelphia_pa:cityid/3],[allentown_pa:cityid/3],[upper darby_pa:cityid/3],[lower merion_pa:cityid/3],[pittsburgh_pa:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(pennsylvania))))
        Example tmpe6f2k58p.dlog:383: query => {[2364000count]} | answer(A,(population(B,A),const(B,stateid(kansas))))
        Example tmpe6f2k58p.dlog:384: query => {[0count]} | answer(A,count(B,(river(B),const(C,stateid(alaska)),loc(B,C)),A))
        Example tmpe6f2k58p.dlog:385: query => {[1125000count]} | answer(A,(population(B,A),const(B,stateid(maine))))
        Example tmpe6f2k58p.dlog:386: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,longest(B,(state(A),loc(B,A),river(B))))
        Example tmpe6f2k58p.dlog:387: query => {[6.91e+11length^2]} | answer(A,(size(B,A),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:388: query => {[harrisburg_pa:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(pennsylvania))))
        Example tmpe6f2k58p.dlog:389: query => {[missouri:stateid/2],[tennessee:stateid/2]} | answer(A,most(A,B,(state(A),next_to(A,B),state(B))))
        Example tmpe6f2k58p.dlog:390: query => {[3778000length]} | answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))
        Example tmpe6f2k58p.dlog:391: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmpe6f2k58p.dlog:392: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:393: query => {[alaska:stateid/2]} | answer(A,(state(A),loc(B,A),highest(B,place(B))))
        Example tmpe6f2k58p.dlog:394: query => {[2count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid(washington))),A))
        Example tmpe6f2k58p.dlog:395: query => {[8count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(tennessee))),A))
        Example tmpe6f2k58p.dlog:396: query => {[texas:stateid/2]} | answer(A,(state(A),const(B,cityid(dallas,_)),loc(B,A)))
        Example tmpe6f2k58p.dlog:397: query => {[rhode island:stateid/2],[alaska:stateid/2],[hawaii:stateid/2],[maine:stateid/2]} | answer(A,(state(A),\+(loc(B,A),river(B))))
        Example tmpe6f2k58p.dlog:398: query => {[arkansas:riverid/2],[cimarron:riverid/2],[smoky hill:riverid/2],[republican:riverid/2],[neosho:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(kansas))))
        Example tmpe6f2k58p.dlog:399: query => {[mississippi:riverid/2],[st. francis:riverid/2],[white:riverid/2],[missouri:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(missouri))))
        Example tmpe6f2k58p.dlog:400: query => {[0count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(hawaii))),A))
        Example tmpe6f2k58p.dlog:401: query => {[des moines_ia:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(iowa))))
        Example tmpe6f2k58p.dlog:402: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpe6f2k58p.dlog:403: query => {} | answer(A,(river(A),traverse(A,B),const(B,stateid(alaska))))
        Example tmpe6f2k58p.dlog:404: query => {[arkansas:riverid/2],[white:riverid/2],[mississippi:riverid/2],[red:riverid/2],[ouachita:riverid/2],[st. francis:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(arkansas))))
        Example tmpe6f2k58p.dlog:405: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpe6f2k58p.dlog:406: query => {[columbia:riverid/2],[snake:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(oregon))))
        Example tmpe6f2k58p.dlog:407: query => {[3.15e+11length^2]} | answer(A,(size(B,A),const(B,stateid('new mexico'))))
        Example tmpe6f2k58p.dlog:408: query => {[colorado:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),river(B))))
        Example tmpe6f2k58p.dlog:409: query => {[browne tower:mountainid/2],[st. elias:mountainid/2],[wrangell:mountainid/2],[blackburn:mountainid/2],[kennedy:mountainid/2],[alverstone:mountainid/2],[fairweather:mountainid/2],[south buttress:mountainid/2],[bona:mountainid/2],[east buttress:mountainid/2],[foraker:mountainid/2],[hubbard:mountainid/2],[mckinley:mountainid/2],[sanford:mountainid/2],[churchill:mountainid/2],[hunter:mountainid/2],[vancouver:mountainid/2],[bear:mountainid/2]} | answer(A,(mountain(A),loc(A,B),const(B,stateid(alaska))))
        Example tmpe6f2k58p.dlog:410: query => {[massachusetts:stateid/2],[maine:stateid/2],[vermont:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid('new hampshire'))))
        Example tmpe6f2k58p.dlog:411: query => {[colorado:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(nevada))))
        Example tmpe6f2k58p.dlog:412: query => {} | answer(A,(river(A),traverse(A,B),const(B,stateid(maine))))
        Example tmpe6f2k58p.dlog:413: query => {[delaware:riverid/2]} | answer(A,shortest(A,river(A)))
        Example tmpe6f2k58p.dlog:414: query => {[potomac:riverid/2],[roanoke:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(virginia))))
        Example tmpe6f2k58p.dlog:415: query => {[76685count]} | answer(A,(population(B,A),const(B,cityid(boulder,_))))
        Example tmpe6f2k58p.dlog:416: query => {[massachusetts:stateid/2],[connecticut:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid('rhode island'))))
        Example tmpe6f2k58p.dlog:417: query => {[76685count]} | answer(A,(population(B,A),const(B,cityid(boulder,_))))
        Example tmpe6f2k58p.dlog:418: query => {[gila:riverid/2],[colorado:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(arizona))))
        Example tmpe6f2k58p.dlog:419: query => {[phoenix_az:cityid/3]} | answer(A,largest(A,capital(A)))
        Example tmpe6f2k58p.dlog:420: query => {[south platte:riverid/2],[arkansas:riverid/2],[colorado:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[republican:riverid/2],[north platte:riverid/2],[green:riverid/2],[san juan:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(colorado))))
        Example tmpe6f2k58p.dlog:421: query => {[minnesota:stateid/2],[new york:stateid/2]} | answer(A,(loc(B,A),state(A),const(B,cityid(rochester,_))))
        Example tmpe6f2k58p.dlog:422: query => {[delaware:riverid/2]} | answer(A,shortest(A,river(A)))
        Example tmpe6f2k58p.dlog:423: query => {[iowa:stateid/2],[minnesota:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid('south dakota'))))
        Example tmpe6f2k58p.dlog:424: query => {} | answer(A,(river(A),loc(A,B),const(B,stateid(alaska))))
        Example tmpe6f2k58p.dlog:425: query => {[3778000length]} | answer(A,(len(B,A),const(B,riverid(mississippi))))
        Example tmpe6f2k58p.dlog:426: query => {[lakewood_co:cityid/3],[pueblo_co:cityid/3],[arvada_co:cityid/3],[boulder_co:cityid/3],[fort collins_co:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(colorado))))
        Example tmpe6f2k58p.dlog:427: query => {[pennsylvania:stateid/2]} | answer(A,(state(A),const(B,cityid(pittsburgh,_)),loc(B,A)))
        Example tmpe6f2k58p.dlog:428: query => {[michigan:stateid/2]} | answer(A,(state(A),const(B,cityid(kalamazoo,_)),loc(B,A)))
        Example tmpe6f2k58p.dlog:429: query => {[4count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(texas))),A))
        Example tmpe6f2k58p.dlog:430: query => {[0count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(alaska))),A))
        Example tmpe6f2k58p.dlog:431: query => {[massachusetts:stateid/2]} | answer(A,(state(A),const(B,cityid(boston,_)),loc(B,A)))
        Example tmpe6f2k58p.dlog:432: query => {[1.83e+11length^2]} | answer(A,(size(B,A),const(B,stateid('north dakota'))))
        Example tmpe6f2k58p.dlog:433: query => {[missouri:stateid/2],[tennessee:stateid/2]} | answer(A,most(A,B,(state(A),next_to(A,B),state(B))))
        Example tmpe6f2k58p.dlog:434: query => {[washita:riverid/2],[pecos:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[red:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:435: query => {[san juan:riverid/2],[colorado:riverid/2],[green:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(utah))))
        Example tmpe6f2k58p.dlog:436: query => {[california:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,placeid('mount whitney'))))
        Example tmpe6f2k58p.dlog:437: query => {[ouachita:riverid/2],[mississippi:riverid/2],[red:riverid/2],[pearl:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(louisiana))))
        Example tmpe6f2k58p.dlog:438: query => {[wabash:riverid/2],[ohio:riverid/2],[mississippi:riverid/2],[rock:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(illinois))))
        Example tmpe6f2k58p.dlog:439: query => {[2667length]} | answer(A,(elevation(B,A),const(B,placeid('guadalupe peak'))))
        Example tmpe6f2k58p.dlog:440: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpe6f2k58p.dlog:441: query => {[76685count]} | answer(A,(population(B,A),const(B,cityid(boulder,_))))
        Example tmpe6f2k58p.dlog:442: query => {[south platte:riverid/2],[arkansas:riverid/2],[colorado:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[republican:riverid/2],[north platte:riverid/2],[green:riverid/2],[san juan:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(colorado))))
        Example tmpe6f2k58p.dlog:443: query => {[3894000count]} | answer(A,(population(B,A),const(B,stateid(alabama))))
        Example tmpe6f2k58p.dlog:444: query => {[arkansas:riverid/2],[white:riverid/2],[mississippi:riverid/2],[red:riverid/2],[ouachita:riverid/2],[st. francis:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(arkansas))))
        Example tmpe6f2k58p.dlog:445: query => {[kentucky:stateid/2],[indiana:stateid/2],[pennsylvania:stateid/2],[michigan:stateid/2],[west virginia:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(ohio))))
        Example tmpe6f2k58p.dlog:446: query => {[2.15e+10length^2]} | answer(A,(size(B,A),const(B,stateid(massachusetts))))
        Example tmpe6f2k58p.dlog:447: query => {[ohio:stateid/2],[indiana:stateid/2],[wisconsin:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(michigan))))
        Example tmpe6f2k58p.dlog:448: query => {[california:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,cityid('scotts valley',_))))
        Example tmpe6f2k58p.dlog:449: query => {[georgia:stateid/2],[tennessee:stateid/2],[florida:stateid/2],[mississippi:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))
        Example tmpe6f2k58p.dlog:450: query => {[new hampshire:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(maine))))
        Example tmpe6f2k58p.dlog:451: query => {[utah:stateid/2],[wyoming:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[kansas:stateid/2],[nebraska:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(colorado))))
        Example tmpe6f2k58p.dlog:452: query => {[mississippi:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[texas:stateid/2],[tennessee:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(arkansas))))
        Example tmpe6f2k58p.dlog:453: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,state(A))
        Example tmpe6f2k58p.dlog:454: query => {[california:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,cityid('san jose',_))))
        Example tmpe6f2k58p.dlog:455: query => {[georgia:stateid/2],[tennessee:stateid/2],[florida:stateid/2],[mississippi:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))
        Example tmpe6f2k58p.dlog:456: query => {[virginia:stateid/2],[indiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[ohio:stateid/2],[west virginia:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(kentucky))))
        Example tmpe6f2k58p.dlog:457: query => {[1.53e+12length^2]} | answer(A,(size(B,A),const(B,stateid(alaska))))
        Example tmpe6f2k58p.dlog:458: query => {[california:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,cityid('san diego',_))))
        Example tmpe6f2k58p.dlog:459: query => {[6.91e+11length^2]} | answer(A,(size(B,A),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:460: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:461: query => {[usa:countryid/2]} | answer(A,(loc(B,A),const(B,stateid('new hampshire'))))
        Example tmpe6f2k58p.dlog:462: query => {[phoenix_az:cityid/3]} | answer(A,largest(A,capital(A)))
        Example tmpe6f2k58p.dlog:463: query => {[louisiana:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,cityid('baton rouge',_))))
        Example tmpe6f2k58p.dlog:464: query => {[ohio:stateid/2],[indiana:stateid/2],[wisconsin:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(michigan))))
        Example tmpe6f2k58p.dlog:465: query => {[indiana:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,cityid('fort wayne',_))))
        Example tmpe6f2k58p.dlog:466: query => {[alabama:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[north carolina:stateid/2],[florida:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(georgia))))
        Example tmpe6f2k58p.dlog:467: query => {[iowa:stateid/2],[kentucky:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[kansas:stateid/2],[nebraska:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(missouri))))
        Example tmpe6f2k58p.dlog:468: query => {} | answer(A,(state(A),next_to(A,B),const(B,stateid(hawaii))))
        Example tmpe6f2k58p.dlog:469: query => {[nevada:stateid/2],[utah:stateid/2],[colorado:stateid/2],[new mexico:stateid/2],[california:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(arizona))))
        Example tmpe6f2k58p.dlog:470: query => {} | answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))
        Example tmpe6f2k58p.dlog:471: query => {[michigan:stateid/2],[minnesota:stateid/2],[iowa:stateid/2],[illinois:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(wisconsin))))
        Example tmpe6f2k58p.dlog:472: query => {[oxnard_ca:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[downey_ca:cityid/3],[concord_ca:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[san jose_ca:cityid/3],[vallejo_ca:cityid/3],[san bernardino_ca:cityid/3],[san leandro_ca:cityid/3],[long beach_ca:cityid/3],[modesto_ca:cityid/3],[richmond_ca:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[santa clara_ca:cityid/3],[citrus heights_ca:cityid/3],[oakland_ca:cityid/3],[carson_ca:cityid/3],[glendale_ca:cityid/3],[san diego_ca:cityid/3],[los angeles_ca:cityid/3],[oceanside_ca:cityid/3],[south gate_ca:cityid/3],[san francisco_ca:cityid/3],[riverside_ca:cityid/3],[fresno_ca:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[ontario_ca:cityid/3],[alhambra_ca:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[hayward_ca:cityid/3],[santa monica_ca:cityid/3],[santa rosa_ca:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[chula vista_ca:cityid/3],[redondo beach_ca:cityid/3],[burbank_ca:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[alameda_ca:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[sunnyvale_ca:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[sacramento_ca:cityid/3],[ventura_ca:cityid/3],[bakersfield_ca:cityid/3],[thousand oaks_ca:cityid/3],[fremont_ca:cityid/3],[anaheim_ca:cityid/3],[torrance_ca:cityid/3],[lakewood_ca:cityid/3],[simi valley_ca:cityid/3],[santa ana_ca:cityid/3],[compton_ca:cityid/3],[whittier_ca:cityid/3],[fullerton_ca:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[pasadena_ca:cityid/3],[escondido_ca:cityid/3],[huntington beach_ca:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(california))))
        Example tmpe6f2k58p.dlog:473: query => {} | answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))
        Example tmpe6f2k58p.dlog:474: query => {[california:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,placeid('mount whitney'))))
        Example tmpe6f2k58p.dlog:475: query => {[76685count]} | answer(A,(population(B,A),const(B,cityid(boulder,_))))
        Example tmpe6f2k58p.dlog:476: query => {[usa:countryid/2],[texas:stateid/2]} | answer(A,(loc(B,A),const(B,cityid(houston,_))))
        Example tmpe6f2k58p.dlog:477: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,state(A))
        Example tmpe6f2k58p.dlog:478: query => {[76685count]} | answer(A,(population(B,A),const(B,cityid(boulder,_))))
        Example tmpe6f2k58p.dlog:479: query => {[usa:countryid/2],[massachusetts:stateid/2],[oregon:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[ohio:stateid/2]} | answer(A,(loc(B,A),const(B,cityid(springfield,_))))
        Example tmpe6f2k58p.dlog:480: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,most(A,B,(state(A),next_to(B,C),const(C,stateid(illinois)))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:484: query => {[oxnard_ca:cityid/3],[bristol township_pa:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[fayetteville_nc:cityid/3],[orlando_fl:cityid/3],[san angelo_tx:cityid/3],[downey_ca:cityid/3],[greenville_sc:cityid/3],[concord_ca:cityid/3],[richardson_tx:cityid/3],[columbia_sc:cityid/3],[waukegan_il:cityid/3],[connecticut:riverid/2],[naknek:lakeid/2],[orange_ca:cityid/3],[clark fork:riverid/2],[pomona_ca:cityid/3],[lowell_ma:cityid/3],[charleston_sc:cityid/3],[largo_fl:cityid/3],[allegheny:riverid/2],[clearwater_fl:cityid/3],[bayonne_nj:cityid/3],[manchester_nh:cityid/3],[amarillo_tx:cityid/3],[vallejo_ca:cityid/3],[south platte:riverid/2],[grand prairie_tx:cityid/3],[hudson:riverid/2],[san bernardino_ca:cityid/3],[lakewood_oh:cityid/3],[bethesda_md:cityid/3],[evanston_il:cityid/3],[medford_ma:cityid/3],[san leandro_ca:cityid/3],[lakewood_co:cityid/3],[pueblo_co:cityid/3],[great falls_mt:cityid/3],[boise_id:cityid/3],[modesto_ca:cityid/3],[richmond_ca:cityid/3],[north charleston_sc:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[bellevue_wa:cityid/3],[reno_nv:cityid/3],[warwick_ri:cityid/3],[schenectady_ny:cityid/3],[sterling heights_mi:cityid/3],[peoria_il:cityid/3],[santa clara_ca:cityid/3],[bethlehem_pa:cityid/3],[utica_ny:cityid/3],[salem_or:cityid/3],[columbia_mo:cityid/3],[alexandria_va:cityid/3],[springfield_mo:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[livonia_mi:cityid/3],[salton sea:lakeid/2],[lawton_ok:cityid/3],[okeechobee:lakeid/2],[fargo_nd:cityid/3],[citrus heights_ca:cityid/3],[waterford_mi:cityid/3],[independence_mo:cityid/3],[silver spring_md:cityid/3],[waco_tx:cityid/3],[red:lakeid/2],[carson_ca:cityid/3],[tombigbee:riverid/2],[bristol_ct:cityid/3],[glendale_ca:cityid/3],[wyoming_mi:cityid/3],[rochester_mn:cityid/3],[beaumont_tx:cityid/3],[chattahoochee:riverid/2],[oceanside_ca:cityid/3],[oak lawn_il:cityid/3],[east orange_nj:cityid/3],[scranton_pa:cityid/3],[westland_mi:cityid/3],[south gate_ca:cityid/3],[bloomington_mn:cityid/3],[royal oak_mi:cityid/3],[terre haute_in:cityid/3],[ogden_ut:cityid/3],[longview_tx:cityid/3],[anderson_in:cityid/3],[springfield_oh:cityid/3],[waterloo_ia:cityid/3],[troy_mi:cityid/3],[rockford_il:cityid/3],[somerville_ma:cityid/3],[lynn_ma:cityid/3],[quincy_ma:cityid/3],[cicero_il:cityid/3],[roanoke:riverid/2],[stockton_ca:cityid/3],[teshekpuk:lakeid/2],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[huntington_wv:cityid/3],[norwalk_ct:cityid/3],[bridgeport_ct:cityid/3],[delaware:riverid/2],[ontario_ca:cityid/3],[alhambra_ca:cityid/3],[lorain_oh:cityid/3],[penn hills_pa:cityid/3],[wateree catawba:riverid/2],[macon_ga:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[billings_mt:cityid/3],[dearborn heights_mi:cityid/3],[wilmington_de:cityid/3],[hayward_ca:cityid/3],[irving_tx:cityid/3],[scottsdale_az:cityid/3],[cedar rapids_ia:cityid/3],[santa monica_ca:cityid/3],[kettering_oh:cityid/3],[santa rosa_ca:cityid/3],[gainesville_fl:cityid/3],[kendall_fl:cityid/3],[powder:riverid/2],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[arvada_co:cityid/3],[brownsville_tx:cityid/3],[sioux falls_sd:cityid/3],[kalamazoo_mi:cityid/3],[south bend_in:cityid/3],[clifton_nj:cityid/3],[chula vista_ca:cityid/3],[flathead:lakeid/2],[euclid_oh:cityid/3],[redondo beach_ca:cityid/3],[tahoe:lakeid/2],[hartford_ct:cityid/3],[mesquite_tx:cityid/3],[clinton_mi:cityid/3],[burbank_ca:cityid/3],[bighorn:riverid/2],[farmington hills_mi:cityid/3],[middletown_nj:cityid/3],[pasadena_tx:cityid/3],[racine_wi:cityid/3],[youngstown_oh:cityid/3],[huntsville_al:cityid/3],[cheektowaga_ny:cityid/3],[framingham_ma:cityid/3],[monroe_la:cityid/3],[tallahassee_fl:cityid/3],[champaign_il:cityid/3],[tuscaloosa_al:cityid/3],[boulder_co:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[woodbridge_nj:cityid/3],[reading_pa:cityid/3],[newport news_va:cityid/3],[wichita falls_tx:cityid/3],[fort smith_ar:cityid/3],[danbury_ct:cityid/3],[mount vernon_ny:cityid/3],[fort collins_co:cityid/3],[ann arbor_mi:cityid/3],[waltham_ma:cityid/3],[nashua_nh:cityid/3],[alameda_ca:cityid/3],[niobrara:riverid/2],[stamford_ct:cityid/3],[arlington heights_il:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[laredo_tx:cityid/3],[rock:riverid/2],[high point_nc:cityid/3],[dubuque_ia:cityid/3],[sunnyvale_ca:cityid/3],[charleston_wv:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[dundalk_md:cityid/3],[meriden_ct:cityid/3],[west allis_wi:cityid/3],[lynchburg_va:cityid/3],[west hartford_ct:cityid/3],[southfield_mi:cityid/3],[paterson_nj:cityid/3],[altoona_pa:cityid/3],[lansing_mi:cityid/3],[becharof:lakeid/2],[hollywood_fl:cityid/3],[st. clair shores_mi:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[ventura_ca:cityid/3],[new bedford_ma:cityid/3],[tempe_az:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[pensacola_fl:cityid/3],[duluth_mn:cityid/3],[greenwich_ct:cityid/3],[skokie_il:cityid/3],[elyria_oh:cityid/3],[sioux city_ia:cityid/3],[bakersfield_ca:cityid/3],[niagara falls_ny:cityid/3],[thousand oaks_ca:cityid/3],[cranston_ri:cityid/3],[evansville_in:cityid/3],[trenton_nj:cityid/3],[redford_mi:cityid/3],[kenosha_wi:cityid/3],[durham_nc:cityid/3],[lake of the woods:lakeid/2],[iliamna:lakeid/2],[winnebago:lakeid/2],[fremont_ca:cityid/3],[camden_nj:cityid/3],[miami beach_fl:cityid/3],[odessa_tx:cityid/3],[appleton_wi:cityid/3],[muncie_in:cityid/3],[overland park_ks:cityid/3],[potomac:riverid/2],[green bay_wi:cityid/3],[topeka_ks:cityid/3],[edison_nj:cityid/3],[republican:riverid/2],[waterbury_ct:cityid/3],[hampton_va:cityid/3],[west valley_ut:cityid/3],[st. joseph_mo:cityid/3],[savannah_ga:cityid/3],[torrance_ca:cityid/3],[rainy:lakeid/2],[lakewood_ca:cityid/3],[pontchartrain:lakeid/2],[casper_wy:cityid/3],[hammond_in:cityid/3],[irvington_nj:cityid/3],[abingdon_pa:cityid/3],[eugene_or:cityid/3],[joliet_il:cityid/3],[simi valley_ca:cityid/3],[west palm beach_fl:cityid/3],[dearborn_mi:cityid/3],[cherry hill_nj:cityid/3],[new haven_ct:cityid/3],[lawrence_ma:cityid/3],[chesapeake_va:cityid/3],[springfield_il:cityid/3],[erie_pa:cityid/3],[compton_ca:cityid/3],[levittown_ny:cityid/3],[aurora_il:cityid/3],[albany_ny:cityid/3],[elizabeth_nj:cityid/3],[pontiac_mi:cityid/3],[whittier_ca:cityid/3],[decatur_il:cityid/3],[pawtucket_ri:cityid/3],[koolaupoko_hi:cityid/3],[north little rock_ar:cityid/3],[champlain:lakeid/2],[lake charles_la:cityid/3],[fullerton_ca:cityid/3],[davenport_ia:cityid/3],[neosho:riverid/2],[fall river_ma:cityid/3],[brockton_ma:cityid/3],[midland_tx:cityid/3],[new rochelle_ny:cityid/3],[lafayette_la:cityid/3],[parma_oh:cityid/3],[allentown_pa:cityid/3],[provo_ut:cityid/3],[upper darby_pa:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[roanoke_va:cityid/3],[pasadena_ca:cityid/3],[port arthur_tx:cityid/3],[newton_ma:cityid/3],[glendale_az:cityid/3],[tyler_tx:cityid/3],[new britain_ct:cityid/3],[st. clair:lakeid/2],[escondido_ca:cityid/3],[elgin_il:cityid/3],[cambridge_ma:cityid/3],[lower merion_pa:cityid/3],[irondequoit_ny:cityid/3],[norman_ok:cityid/3],[mille lacs:lakeid/2],[san juan:riverid/2],[portland_me:cityid/3],[taylor_mi:cityid/3],[albany_ga:cityid/3],[hamilton_oh:cityid/3],[saginaw_mi:cityid/3],[st. francis:riverid/2],[kenner_la:cityid/3],[canton_oh:cityid/3]} | answer(A,(major(A),loc(A,B),const(B,countryid(usa))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:485: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:486: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),state(B))))
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:489: query => {[Join failed syntactically: {[phoenix_az:cityid/3,arizona:stateid/2],[boston_ma:cityid/3,usa:countryid/2],[denver_co:cityid/3,colorado:stateid/2],[boise_id:cityid/3,usa:countryid/2],[tallahassee_fl:cityid/3,florida:stateid/2],[jackson_ms:cityid/3,usa:countryid/2],[concord_nh:cityid/3,usa:countryid/2],[juneau_ak:cityid/3,alaska:stateid/2],[charleston_wv:cityid/3,west virginia:stateid/2],[phoenix_az:cityid/3,usa:countryid/2],[lansing_mi:cityid/3,usa:countryid/2],[topeka_ks:cityid/3,usa:countryid/2],[lansing_mi:cityid/3,michigan:stateid/2],[columbus_oh:cityid/3,ohio:stateid/2],[richmond_va:cityid/3,virginia:stateid/2],[cheyenne_wy:cityid/3,wyoming:stateid/2],[austin_tx:cityid/3,texas:stateid/2],[salt lake city_ut:cityid/3,utah:stateid/2],[montpelier_vt:cityid/3,vermont:stateid/2],[olympia_wa:cityid/3,washington:stateid/2],[madison_wi:cityid/3,wisconsin:stateid/2],[des moines_ia:cityid/3,usa:countryid/2],[washington_dc:cityid/3,district of columbia:stateid/2],[bismarck_nd:cityid/3,usa:countryid/2],[honolulu_hi:cityid/3,hawaii:stateid/2],[concord_nh:cityid/3,new hampshire:stateid/2],[little rock_ar:cityid/3,arkansas:stateid/2],[montgomery_al:cityid/3,alabama:stateid/2],[austin_tx:cityid/3,usa:countryid/2],[trenton_nj:cityid/3,usa:countryid/2],[annapolis_md:cityid/3,maryland:stateid/2],[madison_wi:cityid/3,usa:countryid/2],[columbia_sc:cityid/3,south carolina:stateid/2],[santa fe_nm:cityid/3,new mexico:stateid/2],[providence_ri:cityid/3,usa:countryid/2],[atlanta_ga:cityid/3,georgia:stateid/2],[baton rouge_la:cityid/3,usa:countryid/2],[lincoln_ne:cityid/3,nebraska:stateid/2],[st. paul_mn:cityid/3,minnesota:stateid/2],[charleston_wv:cityid/3,usa:countryid/2],[pierre_sd:cityid/3,south dakota:stateid/2],[helena_mt:cityid/3,montana:stateid/2],[jackson_ms:cityid/3,mississippi:stateid/2],[dover_de:cityid/3,delaware:stateid/2],[dover_de:cityid/3,usa:countryid/2],[sacramento_ca:cityid/3,california:stateid/2],[juneau_ak:cityid/3,usa:countryid/2],[st. paul_mn:cityid/3,usa:countryid/2],[salt lake city_ut:cityid/3,usa:countryid/2],[montgomery_al:cityid/3,usa:countryid/2],[columbus_oh:cityid/3,usa:countryid/2],[indianapolis_in:cityid/3,usa:countryid/2],[little rock_ar:cityid/3,usa:countryid/2],[honolulu_hi:cityid/3,usa:countryid/2],[topeka_ks:cityid/3,kansas:stateid/2],[santa fe_nm:cityid/3,usa:countryid/2],[springfield_il:cityid/3,usa:countryid/2],[raleigh_nc:cityid/3,north carolina:stateid/2],[raleigh_nc:cityid/3,usa:countryid/2],[sacramento_ca:cityid/3,usa:countryid/2],[washington_dc:cityid/3,usa:countryid/2],[salem_or:cityid/3,oregon:stateid/2],[salem_or:cityid/3,usa:countryid/2],[baton rouge_la:cityid/3,louisiana:stateid/2],[boston_ma:cityid/3,massachusetts:stateid/2],[frankfort_ky:cityid/3,kentucky:stateid/2],[bismarck_nd:cityid/3,north dakota:stateid/2],[cheyenne_wy:cityid/3,usa:countryid/2],[harrisburg_pa:cityid/3,pennsylvania:stateid/2],[albany_ny:cityid/3,usa:countryid/2],[atlanta_ga:cityid/3,usa:countryid/2],[nashville_tn:cityid/3,usa:countryid/2],[augusta_me:cityid/3,maine:stateid/2],[trenton_nj:cityid/3,new jersey:stateid/2],[nashville_tn:cityid/3,tennessee:stateid/2],[tallahassee_fl:cityid/3,usa:countryid/2],[denver_co:cityid/3,usa:countryid/2],[carson city_nv:cityid/3,nevada:stateid/2],[hartford_ct:cityid/3,usa:countryid/2],[indianapolis_in:cityid/3,indiana:stateid/2],[jefferson city_mo:cityid/3,missouri:stateid/2],[boise_id:cityid/3,idaho:stateid/2],[albany_ny:cityid/3,new york:stateid/2],[hartford_ct:cityid/3,connecticut:stateid/2],[springfield_il:cityid/3,illinois:stateid/2],[providence_ri:cityid/3,rhode island:stateid/2],[des moines_ia:cityid/3,iowa:stateid/2],[oklahoma city_ok:cityid/3,usa:countryid/2],[richmond_va:cityid/3,usa:countryid/2],[columbia_sc:cityid/3,usa:countryid/2],[lincoln_ne:cityid/3,usa:countryid/2],[oklahoma city_ok:cityid/3,oklahoma:stateid/2]}:{[cityid/3,stateid/2],[cityid/3,countryid/2]}[1] and {[centerville:placeid/2],[long island sound:placeid/2],[guadalupe peak:placeid/2],[colorado river:placeid/2],[johnson township:placeid/2],[kings peak:placeid/2],[campbell hill:placeid/2],[spruce knob:placeid/2],[mount elbert:placeid/2],[southeast corner:placeid/2],[jerimoth hill:placeid/2],[ohio river:placeid/2],[death valley:placeid/2],[new orleans:placeid/2],[mount washington:placeid/2],[brasstown bald:placeid/2],[mount sunflower:placeid/2],[eagle mountain:placeid/2],[mount frissell:placeid/2],[mount greylock:placeid/2],[humphreys peak:placeid/2],[ouachita river:placeid/2],[gannett peak:placeid/2],[snake river:placeid/2],[charles mound:placeid/2],[mount mansfield:placeid/2],[granite peak:placeid/2],[mount katahdin:placeid/2],[timms hill:placeid/2],[red bluff reservoir:placeid/2],[mississippi river:placeid/2],[mount mckinley:placeid/2],[walton county:placeid/2],[atlantic ocean:placeid/2],[boundary peak:placeid/2],[delaware river:placeid/2],[wheeler peak:placeid/2],[mount whitney:placeid/2],[red river:placeid/2],[lake erie:placeid/2],[white butte:placeid/2],[tenleytown:placeid/2],[high point:placeid/2],[taum sauk mountain:placeid/2],[harney peak:placeid/2],[mount mitchell:placeid/2],[clingmans dome:placeid/2],[cheaha mountain:placeid/2],[mount rainier:placeid/2],[kootenai river:placeid/2],[st. francis river:placeid/2],[driskill mountain:placeid/2],[gulf of mexico:placeid/2],[arkansas river:placeid/2],[borah peak:placeid/2],[lake champlain:placeid/2],[mount rogers:placeid/2],[backbone mountain:placeid/2],[mount marcy:placeid/2],[little river:placeid/2],[big stone lake:placeid/2],[mount curwood:placeid/2],[verdigris river:placeid/2],[ocheyedan mound:placeid/2],[belle fourche river:placeid/2],[black mountain:placeid/2],[beaver dam creek:placeid/2],[black mesa:placeid/2],[woodall mountain:placeid/2],[mount hood:placeid/2],[pacific ocean:placeid/2],[mauna kea:placeid/2],[sassafras mountain:placeid/2],[lake superior:placeid/2],[potomac river:placeid/2],[franklin township:placeid/2],[magazine mountain:placeid/2],[mount davis:placeid/2],[lake michigan:placeid/2]}:{[placeid/2]}[0] => {}:error]} | answer(A,highest(A,(place(A),loc(A,B),capital(B),loc(B,A),capital(B))))
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:491: query => {[Join failed syntactically: {[new york:stateid/2,usa:countryid/2],[new hampshire:stateid/2,usa:countryid/2],[missouri:stateid/2,usa:countryid/2],[iowa:stateid/2,usa:countryid/2],[maine:stateid/2,usa:countryid/2],[idaho:stateid/2,usa:countryid/2],[florida:stateid/2,usa:countryid/2],[ohio:stateid/2,usa:countryid/2],[alabama:stateid/2,usa:countryid/2],[kansas:stateid/2,usa:countryid/2],[alaska:stateid/2,usa:countryid/2],[north dakota:stateid/2,usa:countryid/2],[connecticut:stateid/2,usa:countryid/2],[kentucky:stateid/2,usa:countryid/2],[north carolina:stateid/2,usa:countryid/2],[georgia:stateid/2,usa:countryid/2],[new jersey:stateid/2,usa:countryid/2],[indiana:stateid/2,usa:countryid/2],[washington:stateid/2,usa:countryid/2],[maryland:stateid/2,usa:countryid/2],[michigan:stateid/2,usa:countryid/2],[nebraska:stateid/2,usa:countryid/2],[california:stateid/2,usa:countryid/2],[vermont:stateid/2,usa:countryid/2],[utah:stateid/2,usa:countryid/2],[minnesota:stateid/2,usa:countryid/2],[south carolina:stateid/2,usa:countryid/2],[pennsylvania:stateid/2,usa:countryid/2],[wyoming:stateid/2,usa:countryid/2],[colorado:stateid/2,usa:countryid/2],[hawaii:stateid/2,usa:countryid/2],[virginia:stateid/2,usa:countryid/2],[arizona:stateid/2,usa:countryid/2],[new mexico:stateid/2,usa:countryid/2],[illinois:stateid/2,usa:countryid/2],[wisconsin:stateid/2,usa:countryid/2],[tennessee:stateid/2,usa:countryid/2],[oklahoma:stateid/2,usa:countryid/2],[mississippi:stateid/2,usa:countryid/2],[montana:stateid/2,usa:countryid/2],[rhode island:stateid/2,usa:countryid/2],[louisiana:stateid/2,usa:countryid/2],[nevada:stateid/2,usa:countryid/2],[west virginia:stateid/2,usa:countryid/2],[oregon:stateid/2,usa:countryid/2],[massachusetts:stateid/2,usa:countryid/2],[arkansas:stateid/2,usa:countryid/2],[south dakota:stateid/2,usa:countryid/2],[delaware:stateid/2,usa:countryid/2],[texas:stateid/2,usa:countryid/2],[district of columbia:stateid/2,usa:countryid/2]}:{[stateid/2,countryid/2]}[1] and {[colorado springs_co:cityid/3,215150count],[skokie_il:cityid/3,60278count],[backbone mountain:placeid/2,1024length],[indiana:stateid/2,9.38e+10length^2],[pontiac_mi:cityid/3,76715count],[centerville:placeid/2,135length],[wyoming_mi:cityid/3,59616count],[clearwater_fl:cityid/3,85450count],[maine:stateid/2,8.62e+10length^2],[lake charles_la:cityid/3,75051count],[colorado:riverid/2,2333000length],[big stone lake:placeid/2,284length],[wateree catawba:riverid/2,636000length],[koolaupoko_hi:cityid/3,109373count],[spokane_wa:cityid/3,171300count],[sioux city_ia:cityid/3,82003count],[indianapolis_in:cityid/3,700807count],[taum sauk mountain:placeid/2,540length],[connecticut:stateid/2,1.30e+10length^2],[delaware:stateid/2,5.29e+09length^2],[san diego_ca:cityid/3,875538count],[belle fourche river:placeid/2,945length],[michigan:stateid/2,1.52e+11length^2],[irvine_ca:cityid/3,62134count],[grand prairie_tx:cityid/3,71462count],[waterloo_ia:cityid/3,75985count],[jackson_ms:cityid/3,202895count],[kenosha_wi:cityid/3,77685count],[winnebago:lakeid/2,557000000length^2],[inglewood_ca:cityid/3,94162count],[alhambra_ca:cityid/3,64767count],[lawton_ok:cityid/3,80054count],[nevada:stateid/2,2.86e+11length^2],[san juan:riverid/2,579000length],[greenwich_ct:cityid/3,59578count],[st. francis:riverid/2,684000length],[hudson:riverid/2,492000length],[decatur_il:cityid/3,93939count],[hampton_va:cityid/3,122617count],[garland_tx:cityid/3,138857count],[redford_mi:cityid/3,58441count],[newport beach_ca:cityid/3,63475count],[evanston_il:cityid/3,73706count],[honolulu_hi:cityid/3,762874count],[huntington_wv:cityid/3,63684count],[mount whitney:placeid/2,4418length],[new rochelle_ny:cityid/3,70794count],[cranston_ri:cityid/3,71992count],[chicago_il:cityid/3,3005172count],[gila:riverid/2,805000length],[independence_mo:cityid/3,111797count],[berkeley_ca:cityid/3,103328count],[santa ana_ca:cityid/3,203713count],[salinas_ca:cityid/3,80479count],[bridgeport_ct:cityid/3,142546count],[tallahassee_fl:cityid/3,81548count],[syracuse_ny:cityid/3,170105count],[bellevue_wa:cityid/3,73903count],[oxnard_ca:cityid/3,108195count],[texas:stateid/2,6.91e+11length^2],[wisconsin:stateid/2,1.45e+11length^2],[st. clair shores_mi:cityid/3,76210count],[mount katahdin:placeid/2,1606length],[beaver dam creek:placeid/2,610length],[west covina_ca:cityid/3,80292count],[gary_in:cityid/3,151968count],[simi valley_ca:cityid/3,77500count],[erie:lakeid/2,2.57e+10length^2],[iliamna:lakeid/2,2.68e+09length^2],[anaheim_ca:cityid/3,219311count],[arlington_tx:cityid/3,160123count],[bayonne_nj:cityid/3,65047count],[compton_ca:cityid/3,81230count],[oceanside_ca:cityid/3,76698count],[wichita falls_tx:cityid/3,94201count],[kansas city_ks:cityid/3,161148count],[colorado:stateid/2,2.69e+11length^2],[chula vista_ca:cityid/3,83927count],[rockford_il:cityid/3,139712count],[overland park_ks:cityid/3,81784count],[bristol_ct:cityid/3,57370count],[powder:riverid/2,603000length],[cherry hill_nj:cityid/3,68785count],[terre haute_in:cityid/3,61125count],[fullerton_ca:cityid/3,102246count],[wichita_ks:cityid/3,279212count],[waterbury_ct:cityid/3,103266count],[tulsa_ok:cityid/3,360919count],[midland_tx:cityid/3,70525count],[riverside_ca:cityid/3,170876count],[brockton_ma:cityid/3,95172count],[erie_pa:cityid/3,119123count],[newton_ma:cityid/3,83622count],[lynchburg_va:cityid/3,66743count],[euclid_oh:cityid/3,59999count],[camden_nj:cityid/3,84910count],[orange_ca:cityid/3,91450count],[norman_ok:cityid/3,68020count],[stamford_ct:cityid/3,102466count],[elgin_il:cityid/3,63668count],[long island sound:placeid/2,0length],[southeast corner:placeid/2,256length],[utica_ny:cityid/3,75632count],[ontario_ca:cityid/3,88820count],[neosho:riverid/2,740000length],[ohio:stateid/2,1.07e+11length^2],[los angeles_ca:cityid/3,2966850count],[north platte:riverid/2,1094000length],[salt lake city_ut:cityid/3,163034count],[hollywood_fl:cityid/3,117188count],[albany_ny:cityid/3,101727count],[redondo beach_ca:cityid/3,57102count],[san bernardino_ca:cityid/3,118794count],[providence_ri:cityid/3,156804count],[south bend_in:cityid/3,109727count],[fairfield_ca:cityid/3,58099count],[woodall mountain:placeid/2,246length],[little rock_ar:cityid/3,158915count],[lawrence_ma:cityid/3,63175count],[bristol township_pa:cityid/3,58733count],[champaign_il:cityid/3,58267count],[lynn_ma:cityid/3,78471count],[santa monica_ca:cityid/3,88314count],[columbus_oh:cityid/3,564871count],[cimarron:riverid/2,965000length],[altoona_pa:cityid/3,57078count],[mount rainier:placeid/2,4392length],[silver spring_md:cityid/3,72893count],[charleston_sc:cityid/3,69855count],[oklahoma city_ok:cityid/3,403213count],[waltham_ma:cityid/3,58200count],[columbus_ga:cityid/3,169441count],[lakewood_ca:cityid/3,74654count],[houston_tx:cityid/3,1595138count],[massachusetts:stateid/2,2.15e+10length^2],[westminster_ca:cityid/3,71133count],[beaumont_tx:cityid/3,118102count],[clingmans dome:placeid/2,2025length],[boise_id:cityid/3,102249count],[washington:stateid/2,1.76e+11length^2],[colorado river:placeid/2,143length],[dayton_oh:cityid/3,203371count],[meriden_ct:cityid/3,57118count],[tucson_az:cityid/3,330537count],[rainy:lakeid/2,932000000length^2],[long beach_ca:cityid/3,361334count],[charleston_wv:cityid/3,63968count],[abilene_tx:cityid/3,98315count],[potomac:riverid/2,462000length],[plano_tx:cityid/3,72331count],[wilmington_de:cityid/3,70195count],[memphis_tn:cityid/3,646356count],[teshekpuk:lakeid/2,816000000length^2],[ouachita:riverid/2,973000length],[campbell hill:placeid/2,472length],[flint_mi:cityid/3,159611count],[metairie_la:cityid/3,164160count],[odessa_tx:cityid/3,90027count],[bethesda_md:cityid/3,63022count],[magazine mountain:placeid/2,839length],[muncie_in:cityid/3,77216count],[tenleytown:placeid/2,125length],[dearborn_mi:cityid/3,90660count],[hawaii:stateid/2,1.68e+10length^2],[tennessee:riverid/2,1049000length],[trenton_nj:cityid/3,92124count],[clinton_mi:cityid/3,72400count],[chesapeake_va:cityid/3,114226count],[eagle mountain:placeid/2,701length],[alameda_ca:cityid/3,63852count],[rochester_ny:cityid/3,241741count],[cleveland_oh:cityid/3,573822count],[florida:stateid/2,1.78e+11length^2],[austin_tx:cityid/3,345496count],[modesto_ca:cityid/3,106963count],[high point:placeid/2,550length],[tennessee:stateid/2,1.09e+11length^2],[arkansas river:placeid/2,1021length],[missouri:stateid/2,1.81e+11length^2],[new haven_ct:cityid/3,126089count],[ontario:lakeid/2,1.97e+10length^2],[tacoma_wa:cityid/3,158501count],[anderson_in:cityid/3,64695count],[mississippi:riverid/2,3778000length],[lakewood_oh:cityid/3,61963count],[fort collins_co:cityid/3,64632count],[farmington hills_mi:cityid/3,58056count],[black mesa:placeid/2,1516length],[sassafras mountain:placeid/2,1085length],[clifton_nj:cityid/3,74388count],[pawtucket_ri:cityid/3,71204count],[canadian:riverid/2,1458000length],[cambridge_ma:cityid/3,95322count],[taylor_mi:cityid/3,77568count],[san jose_ca:cityid/3,629442count],[glendale_ca:cityid/3,139060count],[warwick_ri:cityid/3,87123count],[arkansas:riverid/2,2333000length],[laredo_tx:cityid/3,91449count],[georgia:stateid/2,1.53e+11length^2],[seattle_wa:cityid/3,493846count],[verdigris river:placeid/2,207length],[west valley_ut:cityid/3,72299count],[omaha_ne:cityid/3,314255count],[miami beach_fl:cityid/3,96298count],[roanoke:riverid/2,660000length],[reno_nv:cityid/3,100756count],[cumberland:riverid/2,1105000length],[lincoln_ne:cityid/3,171932count],[dallas_tx:cityid/3,904078count],[mount frissell:placeid/2,725length],[tampa_fl:cityid/3,271523count],[chattanooga_tn:cityid/3,169728count],[waco_tx:cityid/3,101261count],[green:riverid/2,1175000length],[baltimore_md:cityid/3,786775count],[dubuque_ia:cityid/3,62321count],[ventura_ca:cityid/3,73774count],[st. paul_mn:cityid/3,270230count],[buffalo_ny:cityid/3,357870count],[alabama:stateid/2,1.34e+11length^2],[green bay_wi:cityid/3,87899count],[lowell_ma:cityid/3,92418count],[atlanta_ga:cityid/3,425022count],[st. joseph_mo:cityid/3,76691count],[fort worth_tx:cityid/3,385164count],[potomac river:placeid/2,0length],[pontchartrain:lakeid/2,1632000000length^2],[republican:riverid/2,679000length],[sterling heights_mi:cityid/3,108999count],[salem_or:cityid/3,89233count],[wheeler peak:placeid/2,4011length],[huntsville_al:cityid/3,142513count],[middletown_nj:cityid/3,61615count],[allentown_pa:cityid/3,103758count],[san mateo_ca:cityid/3,77640count],[south gate_ca:cityid/3,66784count],[citrus heights_ca:cityid/3,85911count],[washington_dc:cityid/3,638333count],[maryland:stateid/2,2.71e+10length^2],[kalamazoo_mi:cityid/3,79722count],[vermont:stateid/2,2.49e+10length^2],[newark_nj:cityid/3,329248count],[knoxville_tn:cityid/3,175030count],[pomona_ca:cityid/3,92742count],[east los angeles_ca:cityid/3,110017count],[detroit_mi:cityid/3,1203339count],[richmond_ca:cityid/3,74676count],[fayetteville_nc:cityid/3,59507count],[red:lakeid/2,1169000000length^2],[norfolk_va:cityid/3,266979count],[irving_tx:cityid/3,109943count],[danbury_ct:cityid/3,60470count],[mobile_al:cityid/3,200452count],[ohio river:placeid/2,98length],[charles mound:placeid/2,376length],[irvington_nj:cityid/3,61493count],[orlando_fl:cityid/3,128394count],[kenner_la:cityid/3,66382count],[westland_mi:cityid/3,84603count],[winston-salem_nc:cityid/3,131885count],[fort lauderdale_fl:cityid/3,153256count],[milwaukee_wi:cityid/3,636212count],[scranton_pa:cityid/3,88117count],[anchorage_ak:cityid/3,174431count],[death valley:placeid/2,-85length],[rochester_mn:cityid/3,57906count],[mount washington:placeid/2,1917length],[potomac river:placeid/2,73length],[little missouri:riverid/2,901000length],[spruce knob:placeid/2,1482length],[hammond_in:cityid/3,93714count],[mount davis:placeid/2,979length],[wabash:riverid/2,764000length],[ogden_ut:cityid/3,64407count],[abingdon_pa:cityid/3,59084count],[rio grande:riverid/2,3033000length],[rhode island:stateid/2,3.14e+09length^2],[little river:placeid/2,87length],[madison_wi:cityid/3,170616count],[champlain:lakeid/2,1114000000length^2],[mississippi river:placeid/2,78length],[hamilton_oh:cityid/3,63189count],[sioux falls_sd:cityid/3,81343count],[vallejo_ca:cityid/3,80188count],[burbank_ca:cityid/3,84625count],[santa rosa_ca:cityid/3,83205count],[lexington_ky:cityid/3,204165count],[shreveport_la:cityid/3,205820count],[yellowstone:riverid/2,1080000length],[birmingham_al:cityid/3,284413count],[mount rogers:placeid/2,1746length],[atlantic ocean:placeid/2,0length],[dearborn heights_mi:cityid/3,67706count],[lake superior:placeid/2,183length],[billings_mt:cityid/3,66842count],[naknek:lakeid/2,630000000length^2],[brasstown bald:placeid/2,1458length],[mesa_az:cityid/3,152453count],[ohio river:placeid/2,132length],[el cajon_ca:cityid/3,73892count],[tombigbee:riverid/2,658000length],[arizona:stateid/2,2.95e+11length^2],[corpus christi_tx:cityid/3,231999count],[snake:riverid/2,1670000length],[pasadena_ca:cityid/3,118072count],[canton_oh:cityid/3,93077count],[mount vernon_ny:cityid/3,66713count],[reading_pa:cityid/3,78686count],[bloomington_mn:cityid/3,81831count],[levittown_ny:cityid/3,57045count],[kendall_fl:cityid/3,73758count],[manchester_nh:cityid/3,90936count],[ann arbor_mi:cityid/3,107969count],[livonia_mi:cityid/3,104814count],[cicero_il:cityid/3,61232count],[gannett peak:placeid/2,4202length],[el monte_ca:cityid/3,79494count],[kansas city_mo:cityid/3,448159count],[washita:riverid/2,805000length],[mount hood:placeid/2,3424length],[cincinnati_oh:cityid/3,385457count],[waukegan_il:cityid/3,67653count],[south carolina:stateid/2,8.06e+10length^2],[oklahoma:stateid/2,1.81e+11length^2],[oregon:stateid/2,2.51e+11length^2],[grand rapids_mi:cityid/3,181843count],[mississippi river:placeid/2,146length],[elizabeth_nj:cityid/3,106201count],[phoenix_az:cityid/3,789704count],[pensacola_fl:cityid/3,57619count],[fremont_ca:cityid/3,131945count],[rock:riverid/2,459000length],[new hampshire:stateid/2,2.40e+10length^2],[boulder_co:cityid/3,76685count],[mount sunflower:placeid/2,1231length],[louisville_ky:cityid/3,298451count],[tahoe:lakeid/2,497000000length^2],[delaware:riverid/2,451000length],[great salt lake:lakeid/2,5.18e+09length^2],[new britain_ct:cityid/3,73840count],[richardson_tx:cityid/3,72496count],[arlington_va:cityid/3,152599count],[warren_mi:cityid/3,161134count],[toledo_oh:cityid/3,354635count],[north dakota:stateid/2,1.83e+11length^2],[mississippi river:placeid/2,85length],[niagara falls_ny:cityid/3,71384count],[gulf of mexico:placeid/2,0length],[evansville_in:cityid/3,130496count],[philadelphia_pa:cityid/3,1688210count],[brownsville_tx:cityid/3,84997count],[yonkers_ny:cityid/3,195351count],[waterford_mi:cityid/3,64250count],[west virginia:stateid/2,6.27e+10length^2],[glendale_az:cityid/3,96988count],[monroe_la:cityid/3,57597count],[north charleston_sc:cityid/3,62504count],[tyler_tx:cityid/3,70508count],[costa mesa_ca:cityid/3,82291count],[norwalk_ct:cityid/3,77767count],[santa clara_ca:cityid/3,87700count],[saginaw_mi:cityid/3,77508count],[black mountain:placeid/2,1263length],[springfield_il:cityid/3,100054count],[kentucky:stateid/2,2.13e+11length^2],[nashua_nh:cityid/3,67865count],[des moines_ia:cityid/3,191003count],[southfield_mi:cityid/3,75568count],[franklin township:placeid/2,383length],[newport news_va:cityid/3,144903count],[ocheyedan mound:placeid/2,511length],[granite peak:placeid/2,3901length],[okeechobee:lakeid/2,1810000000length^2],[driskill mountain:placeid/2,163length],[guadalupe peak:placeid/2,2667length],[san leandro_ca:cityid/3,63952count],[arvada_co:cityid/3,84576count],[st. louis_mo:cityid/3,453085count],[akron_oh:cityid/3,237177count],[lafayette_la:cityid/3,80584count],[lorain_oh:cityid/3,75416count],[sunnyvale_ca:cityid/3,106618count],[st. petersburg_fl:cityid/3,238647count],[san francisco_ca:cityid/3,678974count],[charlotte_nc:cityid/3,314447count],[new bedford_ma:cityid/3,98478count],[east orange_nj:cityid/3,77878count],[parma_oh:cityid/3,92548count],[high point_nc:cityid/3,64107count],[thousand oaks_ca:cityid/3,77797count],[mississippi river:placeid/2,55length],[timms hill:placeid/2,595length],[jersey city_nj:cityid/3,223532count],[savannah_ga:cityid/3,141654count],[jerimoth hill:placeid/2,247length],[new jersey:stateid/2,2.02e+10length^2],[mcallen_tx:cityid/3,67042count],[norwalk_ca:cityid/3,84901count],[virginia:stateid/2,1.06e+11length^2],[minnesota:stateid/2,2.19e+11length^2],[portsmouth_va:cityid/3,104577count],[mauna kea:placeid/2,4205length],[wyoming:stateid/2,2.53e+11length^2],[macon_ga:cityid/3,116860count],[lake erie:placeid/2,174length],[schenectady_ny:cityid/3,67972count],[connecticut:riverid/2,655000length],[red river:placeid/2,229length],[great falls_mt:cityid/3,56725count],[west allis_wi:cityid/3,63982count],[fresno_ca:cityid/3,218202count],[ewa_hi:cityid/3,190037count],[davenport_ia:cityid/3,103254count],[missouri:riverid/2,3968000length],[bighorn:riverid/2,541000length],[superior:lakeid/2,8.24e+10length^2],[iowa:stateid/2,1.46e+11length^2],[miami_fl:cityid/3,346865count],[becharof:lakeid/2,1186000000length^2],[kootenai river:placeid/2,549length],[hartford_ct:cityid/3,136392count],[longview_tx:cityid/3,62762count],[scottsdale_az:cityid/3,88622count],[baton rouge_la:cityid/3,219419count],[fort smith_ar:cityid/3,71384count],[joliet_il:cityid/3,77956count],[greensboro_nc:cityid/3,155642count],[cheektowaga_ny:cityid/3,92145count],[scotts valley_ca:cityid/3,6037count],[mount mckinley:placeid/2,6194length],[dakota:riverid/2,1142000length],[greenville_sc:cityid/3,58242count],[pecos:riverid/2,805000length],[alaska:stateid/2,1.53e+12length^2],[garden grove_ca:cityid/3,123351count],[escondido_ca:cityid/3,62480count],[royal oak_mi:cityid/3,70893count],[cheyenne:riverid/2,848000length],[west hartford_ct:cityid/3,61301count],[durham_nc:cityid/3,100538count],[irondequoit_ny:cityid/3,57648count],[montana:stateid/2,3.81e+11length^2],[springfield_mo:cityid/3,133116count],[walton county:placeid/2,105length],[west palm beach_fl:cityid/3,62530count],[colorado river:placeid/2,21length],[niobrara:riverid/2,693000length],[albany_ga:cityid/3,74425count],[district of columbia:stateid/2,2.85e+09length^2],[columbia_mo:cityid/3,62061count],[boston_ma:cityid/3,562994count],[chattahoochee:riverid/2,702000length],[pearl:riverid/2,788000length],[borah peak:placeid/2,3859length],[johnson township:placeid/2,1654length],[portland_me:cityid/3,61572count],[clark fork:riverid/2,483000length],[lakewood_co:cityid/3,113808count],[mount mitchell:placeid/2,2037length],[bakersfield_ca:cityid/3,105611count],[new york:stateid/2,1.27e+11length^2],[virginia beach_va:cityid/3,262199count],[california:stateid/2,4.09e+11length^2],[somerville_ma:cityid/3,77372count],[denver_co:cityid/3,492365count],[torrance_ca:cityid/3,131497count],[aurora_il:cityid/3,81293count],[pasadena_tx:cityid/3,112560count],[new orleans_la:cityid/3,557515count],[springfield_oh:cityid/3,72563count],[albuquerque_nm:cityid/3,331767count],[upper darby_pa:cityid/3,84054count],[red:riverid/2,1638000length],[arlington heights_il:cityid/3,66116count],[louisiana:stateid/2,1.24e+11length^2],[raleigh_nc:cityid/3,149771count],[peoria_il:cityid/3,124160count],[woodbridge_nj:cityid/3,90074count],[largo_fl:cityid/3,58977count],[st. clair:lakeid/2,1119000000length^2],[white:riverid/2,1110000length],[appleton_wi:cityid/3,58913count],[white butte:placeid/2,1069length],[mesquite_tx:cityid/3,67053count],[lake of the woods:lakeid/2,4.39e+09length^2],[pennsylvania:stateid/2,1.17e+11length^2],[cheaha mountain:placeid/2,734length],[tempe_az:cityid/3,106919count],[idaho:stateid/2,2.15e+11length^2],[penn hills_pa:cityid/3,57632count],[kings peak:placeid/2,4123length],[mount marcy:placeid/2,1629length],[north carolina:stateid/2,1.36e+11length^2],[paterson_nj:cityid/3,137970count],[utah:stateid/2,2.20e+11length^2],[amarillo_tx:cityid/3,149230count],[mount elbert:placeid/2,4399length],[red bluff reservoir:placeid/2,859length],[concord_ca:cityid/3,103763count],[roanoke_va:cityid/3,100427count],[humphreys peak:placeid/2,3851length],[columbia:riverid/2,1953000length],[provo_ut:cityid/3,74111count],[lubbock_tx:cityid/3,173979count],[alexandria_va:cityid/3,103217count],[pittsburgh_pa:cityid/3,423938count],[elyria_oh:cityid/3,57504count],[new orleans:placeid/2,-1length],[richmond_va:cityid/3,219214count],[gainesville_fl:cityid/3,81371count],[pueblo_co:cityid/3,101686count],[fall river_ma:cityid/3,92574count],[downey_ca:cityid/3,82602count],[edison_nj:cityid/3,70193count],[delaware river:placeid/2,0length],[lower merion_pa:cityid/3,59651count],[minneapolis_mn:cityid/3,370951count],[casper_wy:cityid/3,51016count],[nebraska:stateid/2,2.00e+11length^2],[oakland_ca:cityid/3,339337count],[snake river:placeid/2,216length],[quincy_ma:cityid/3,84743count],[mountain view_ca:cityid/3,58655count],[las vegas_nv:cityid/3,164674count],[ohio:riverid/2,1569000length],[youngstown_oh:cityid/3,115436count],[illinois:stateid/2,1.46e+11length^2],[port arthur_tx:cityid/3,61195count],[medford_ma:cityid/3,58076count],[allegheny:riverid/2,523000length],[lake champlain:placeid/2,29length],[framingham_ma:cityid/3,65113count],[buena park_ca:cityid/3,64165count],[mille lacs:lakeid/2,536000000length^2],[michigan:lakeid/2,5.80e+10length^2],[worcester_ma:cityid/3,161799count],[troy_mi:cityid/3,67102count],[kettering_oh:cityid/3,61186count],[mount mansfield:placeid/2,1339length],[san antonio_tx:cityid/3,785880count],[el paso_tx:cityid/3,425259count],[huntington beach_ca:cityid/3,170505count],[portland_or:cityid/3,366383count],[new mexico:stateid/2,3.15e+11length^2],[montgomery_al:cityid/3,177857count],[racine_wi:cityid/3,85725count],[salton sea:lakeid/2,932000000length^2],[south dakota:stateid/2,2.00e+11length^2],[south platte:riverid/2,682000length],[mount greylock:placeid/2,1064length],[jacksonville_fl:cityid/3,540920count],[sacramento_ca:cityid/3,275741count],[kansas:stateid/2,2.13e+11length^2],[daly city_ca:cityid/3,78519count],[pacific ocean:placeid/2,0length],[st. francis river:placeid/2,70length],[cedar rapids_ia:cityid/3,110243count],[springfield_ma:cityid/3,152319count],[smoky hill:riverid/2,869000length],[fargo_nd:cityid/3,61308count],[duluth_mn:cityid/3,92811count],[huron:lakeid/2,5.96e+10length^2],[whittier_ca:cityid/3,68558count],[mount curwood:placeid/2,604length],[lake michigan:placeid/2,177length],[bethlehem_pa:cityid/3,70419count],[boundary peak:placeid/2,4005length],[oak lawn_il:cityid/3,60590count],[dundalk_md:cityid/3,71293count],[topeka_ks:cityid/3,118690count],[hayward_ca:cityid/3,93585count],[nashville_tn:cityid/3,455651count],[north little rock_ar:cityid/3,64388count],[stockton_ca:cityid/3,149779count],[san angelo_tx:cityid/3,73240count],[ouachita river:placeid/2,17length],[columbia_sc:cityid/3,101229count],[carson_ca:cityid/3,81221count],[flathead:lakeid/2,510000000length^2],[tuscaloosa_al:cityid/3,75143count],[eugene_or:cityid/3,105664count],[santa barbara_ca:cityid/3,74542count],[lansing_mi:cityid/3,130414count],[arkansas:stateid/2,1.38e+11length^2],[aurora_co:cityid/3,158588count],[mississippi:stateid/2,1.24e+11length^2],[harney peak:placeid/2,2207length],[new york_ny:cityid/3,7071639count],[fort wayne_in:cityid/3,172196count]}:{[placeid/2,length],[lakeid/2,length^2],[cityid/3,count],[stateid/2,length^2],[riverid/2,length]}[0] => {}:error]} | answer(A,smallest(B,(river(B),loc(B,C),smallest(C,(state(B),loc(B,C))))))
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:498: query => {[Join failed syntactically: {[ohio:riverid/2,west virginia:stateid/2],[wabash:riverid/2,indiana:stateid/2],[smoky hill:riverid/2,colorado:stateid/2],[tennessee:riverid/2,usa:countryid/2],[niobrara:riverid/2,nebraska:stateid/2],[canadian:riverid/2,usa:countryid/2],[neosho:riverid/2,oklahoma:stateid/2],[green:riverid/2,wyoming:stateid/2],[colorado:riverid/2,nevada:stateid/2],[pecos:riverid/2,new mexico:stateid/2],[san juan:riverid/2,usa:countryid/2],[little missouri:riverid/2,south dakota:stateid/2],[rio grande:riverid/2,usa:countryid/2],[rock:riverid/2,usa:countryid/2],[missouri:riverid/2,montana:stateid/2],[colorado:riverid/2,california:stateid/2],[pearl:riverid/2,usa:countryid/2],[gila:riverid/2,arizona:stateid/2],[green:riverid/2,utah:stateid/2],[arkansas:riverid/2,usa:countryid/2],[tombigbee:riverid/2,mississippi:stateid/2],[potomac:riverid/2,maryland:stateid/2],[snake:riverid/2,usa:countryid/2],[roanoke:riverid/2,north carolina:stateid/2],[missouri:riverid/2,north dakota:stateid/2],[little missouri:riverid/2,wyoming:stateid/2],[washita:riverid/2,texas:stateid/2],[little missouri:riverid/2,north dakota:stateid/2],[neosho:riverid/2,kansas:stateid/2],[missouri:riverid/2,south dakota:stateid/2],[cimarron:riverid/2,kansas:stateid/2],[potomac:riverid/2,west virginia:stateid/2],[connecticut:riverid/2,new hampshire:stateid/2],[powder:riverid/2,usa:countryid/2],[canadian:riverid/2,new mexico:stateid/2],[colorado:riverid/2,usa:countryid/2],[canadian:riverid/2,colorado:stateid/2],[little missouri:riverid/2,usa:countryid/2],[yellowstone:riverid/2,north dakota:stateid/2],[republican:riverid/2,usa:countryid/2],[cumberland:riverid/2,usa:countryid/2],[ohio:riverid/2,usa:countryid/2],[missouri:riverid/2,missouri:stateid/2],[cumberland:riverid/2,kentucky:stateid/2],[powder:riverid/2,montana:stateid/2],[south platte:riverid/2,colorado:stateid/2],[arkansas:riverid/2,colorado:stateid/2],[north platte:riverid/2,nebraska:stateid/2],[republican:riverid/2,colorado:stateid/2],[little missouri:riverid/2,montana:stateid/2],[red:riverid/2,arkansas:stateid/2],[mississippi:riverid/2,illinois:stateid/2],[roanoke:riverid/2,virginia:stateid/2],[north platte:riverid/2,colorado:stateid/2],[allegheny:riverid/2,usa:countryid/2],[ohio:riverid/2,indiana:stateid/2],[niobrara:riverid/2,wyoming:stateid/2],[republican:riverid/2,kansas:stateid/2],[gila:riverid/2,usa:countryid/2],[tennessee:riverid/2,kentucky:stateid/2],[canadian:riverid/2,oklahoma:stateid/2],[red:riverid/2,new mexico:stateid/2],[missouri:riverid/2,usa:countryid/2],[bighorn:riverid/2,montana:stateid/2],[republican:riverid/2,nebraska:stateid/2],[neosho:riverid/2,usa:countryid/2],[cheyenne:riverid/2,wyoming:stateid/2],[red:riverid/2,texas:stateid/2],[delaware:riverid/2,pennsylvania:stateid/2],[columbia:riverid/2,oregon:stateid/2],[niobrara:riverid/2,usa:countryid/2],[white:riverid/2,usa:countryid/2],[gila:riverid/2,new mexico:stateid/2],[potomac:riverid/2,virginia:stateid/2],[snake:riverid/2,wyoming:stateid/2],[roanoke:riverid/2,usa:countryid/2],[north platte:riverid/2,usa:countryid/2],[colorado:riverid/2,arizona:stateid/2],[bighorn:riverid/2,usa:countryid/2],[mississippi:riverid/2,missouri:stateid/2],[tombigbee:riverid/2,alabama:stateid/2],[chattahoochee:riverid/2,usa:countryid/2],[yellowstone:riverid/2,montana:stateid/2],[delaware:riverid/2,usa:countryid/2],[dakota:riverid/2,north dakota:stateid/2],[green:riverid/2,colorado:stateid/2],[dakota:riverid/2,usa:countryid/2],[delaware:riverid/2,new york:stateid/2],[dakota:riverid/2,south dakota:stateid/2],[potomac:riverid/2,usa:countryid/2],[cimarron:riverid/2,usa:countryid/2],[missouri:riverid/2,iowa:stateid/2],[rio grande:riverid/2,new mexico:stateid/2],[ohio:riverid/2,ohio:stateid/2],[rock:riverid/2,illinois:stateid/2],[washita:riverid/2,usa:countryid/2],[arkansas:riverid/2,arkansas:stateid/2],[colorado:riverid/2,colorado:stateid/2],[mississippi:riverid/2,tennessee:stateid/2],[wabash:riverid/2,ohio:stateid/2],[smoky hill:riverid/2,kansas:stateid/2],[wateree catawba:riverid/2,south carolina:stateid/2],[arkansas:riverid/2,oklahoma:stateid/2],[cimarron:riverid/2,oklahoma:stateid/2],[st. francis:riverid/2,missouri:stateid/2],[mississippi:riverid/2,minnesota:stateid/2],[white:riverid/2,arkansas:stateid/2],[san juan:riverid/2,colorado:stateid/2],[hudson:riverid/2,new york:stateid/2],[snake:riverid/2,oregon:stateid/2],[connecticut:riverid/2,usa:countryid/2],[red:riverid/2,louisiana:stateid/2],[yellowstone:riverid/2,usa:countryid/2],[clark fork:riverid/2,montana:stateid/2],[st. francis:riverid/2,usa:countryid/2],[washita:riverid/2,oklahoma:stateid/2],[mississippi:riverid/2,arkansas:stateid/2],[ohio:riverid/2,kentucky:stateid/2],[pearl:riverid/2,michigan:stateid/2],[allegheny:riverid/2,pennsylvania:stateid/2],[tennessee:riverid/2,tennessee:stateid/2],[delaware:riverid/2,new jersey:stateid/2],[ouachita:riverid/2,louisiana:stateid/2],[connecticut:riverid/2,massachusetts:stateid/2],[south platte:riverid/2,nebraska:stateid/2],[mississippi:riverid/2,louisiana:stateid/2],[mississippi:riverid/2,kentucky:stateid/2],[allegheny:riverid/2,new york:stateid/2],[columbia:riverid/2,washington:stateid/2],[columbia:riverid/2,usa:countryid/2],[wabash:riverid/2,usa:countryid/2],[rio grande:riverid/2,colorado:stateid/2],[san juan:riverid/2,new mexico:stateid/2],[cimarron:riverid/2,new mexico:stateid/2],[connecticut:riverid/2,connecticut:stateid/2],[north platte:riverid/2,wyoming:stateid/2],[smoky hill:riverid/2,usa:countryid/2],[red:riverid/2,usa:countryid/2],[ohio:riverid/2,pennsylvania:stateid/2],[hudson:riverid/2,new jersey:stateid/2],[red:riverid/2,oklahoma:stateid/2],[st. francis:riverid/2,arkansas:stateid/2],[tombigbee:riverid/2,usa:countryid/2],[chattahoochee:riverid/2,georgia:stateid/2],[powder:riverid/2,wyoming:stateid/2],[san juan:riverid/2,utah:stateid/2],[pearl:riverid/2,louisiana:stateid/2],[cumberland:riverid/2,tennessee:stateid/2],[wateree catawba:riverid/2,north carolina:stateid/2],[wateree catawba:riverid/2,usa:countryid/2],[rock:riverid/2,wisconsin:stateid/2],[chattahoochee:riverid/2,florida:stateid/2],[mississippi:riverid/2,mississippi:stateid/2],[mississippi:riverid/2,usa:countryid/2],[mississippi:riverid/2,wisconsin:stateid/2],[bighorn:riverid/2,wyoming:stateid/2],[mississippi:riverid/2,iowa:stateid/2],[arkansas:riverid/2,kansas:stateid/2],[snake:riverid/2,idaho:stateid/2],[colorado:riverid/2,utah:stateid/2],[ohio:riverid/2,illinois:stateid/2],[pecos:riverid/2,usa:countryid/2],[tennessee:riverid/2,alabama:stateid/2],[potomac:riverid/2,district of columbia:stateid/2],[hudson:riverid/2,usa:countryid/2],[yellowstone:riverid/2,wyoming:stateid/2],[cheyenne:riverid/2,usa:countryid/2],[missouri:riverid/2,nebraska:stateid/2],[wabash:riverid/2,illinois:stateid/2],[clark fork:riverid/2,usa:countryid/2],[connecticut:riverid/2,vermont:stateid/2],[ouachita:riverid/2,usa:countryid/2],[pecos:riverid/2,texas:stateid/2],[delaware:riverid/2,delaware:stateid/2],[snake:riverid/2,washington:stateid/2],[white:riverid/2,missouri:stateid/2],[clark fork:riverid/2,idaho:stateid/2],[ouachita:riverid/2,arkansas:stateid/2],[rio grande:riverid/2,texas:stateid/2],[green:riverid/2,usa:countryid/2],[canadian:riverid/2,texas:stateid/2],[south platte:riverid/2,usa:countryid/2],[cheyenne:riverid/2,north dakota:stateid/2]}:{[riverid/2,stateid/2],[riverid/2,countryid/2]}[1] and {..}:{[date,date,cityid/3],[money,money,cityid/3],[length,length,cityid/3],[count/length^2,count/length^2,cityid/3],[money/time_duration,money/time_duration,cityid/3],[date_month,date_month,cityid/3],[time_duration,time_duration,cityid/3],[frac,frac,cityid/3],[name,name,cityid/3],[rank,rank,cityid/3],[date_year,date_year,cityid/3],[date_day,date_day,cityid/3],[date_time,date_time,cityid/3],[count,count,cityid/3],[length^2,length^2,cityid/3]}[2] => {}:error]} | answer(A,(river(A),loc(A,B),const(B,cityid(springfield,_))))
        Example tmpe6f2k58p.dlog:499: query => {[Join failed syntactically: {[14229000count,usa:countryid/2]}:{[count,countryid/2]}[1] and {[texas,texas:stateid/2]}:{[date,stateid/2],[date_day,stateid/2],[time_duration,stateid/2],[count,stateid/2],[date_year,stateid/2],[rank,stateid/2],[date_month,stateid/2],[money/time_duration,stateid/2],[length,stateid/2],[frac,stateid/2],[date_time,stateid/2],[length^2,stateid/2],[name,stateid/2],[count/length^2,stateid/2],[money,stateid/2]}[1] => {}:error]} | answer(A,(population(B,A),const(B,stateid(texas)),loc(B,C),const(C,stateid(texas))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:500: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[lubbock_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[fort worth_tx:cityid/3],[houston_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[corpus christi_tx:cityid/3],[longview_tx:cityid/3],[arlington_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[austin_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[el paso_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[dallas_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[san antonio_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(texas))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:501: query => {[Join failed syntactically: {[mississippi:riverid/2]}:{[riverid/2]}[0] and {[ohio:riverid/2,west virginia:stateid/2],[wabash:riverid/2,indiana:stateid/2],[smoky hill:riverid/2,colorado:stateid/2],[tennessee:riverid/2,usa:countryid/2],[niobrara:riverid/2,nebraska:stateid/2],[canadian:riverid/2,usa:countryid/2],[neosho:riverid/2,oklahoma:stateid/2],[green:riverid/2,wyoming:stateid/2],[colorado:riverid/2,nevada:stateid/2],[pecos:riverid/2,new mexico:stateid/2],[san juan:riverid/2,usa:countryid/2],[little missouri:riverid/2,south dakota:stateid/2],[rio grande:riverid/2,usa:countryid/2],[rock:riverid/2,usa:countryid/2],[missouri:riverid/2,montana:stateid/2],[colorado:riverid/2,california:stateid/2],[pearl:riverid/2,usa:countryid/2],[gila:riverid/2,arizona:stateid/2],[green:riverid/2,utah:stateid/2],[arkansas:riverid/2,usa:countryid/2],[tombigbee:riverid/2,mississippi:stateid/2],[potomac:riverid/2,maryland:stateid/2],[snake:riverid/2,usa:countryid/2],[roanoke:riverid/2,north carolina:stateid/2],[missouri:riverid/2,north dakota:stateid/2],[little missouri:riverid/2,wyoming:stateid/2],[washita:riverid/2,texas:stateid/2],[little missouri:riverid/2,north dakota:stateid/2],[neosho:riverid/2,kansas:stateid/2],[missouri:riverid/2,south dakota:stateid/2],[cimarron:riverid/2,kansas:stateid/2],[potomac:riverid/2,west virginia:stateid/2],[connecticut:riverid/2,new hampshire:stateid/2],[powder:riverid/2,usa:countryid/2],[canadian:riverid/2,new mexico:stateid/2],[colorado:riverid/2,usa:countryid/2],[canadian:riverid/2,colorado:stateid/2],[little missouri:riverid/2,usa:countryid/2],[yellowstone:riverid/2,north dakota:stateid/2],[republican:riverid/2,usa:countryid/2],[cumberland:riverid/2,usa:countryid/2],[ohio:riverid/2,usa:countryid/2],[missouri:riverid/2,missouri:stateid/2],[cumberland:riverid/2,kentucky:stateid/2],[powder:riverid/2,montana:stateid/2],[south platte:riverid/2,colorado:stateid/2],[arkansas:riverid/2,colorado:stateid/2],[north platte:riverid/2,nebraska:stateid/2],[republican:riverid/2,colorado:stateid/2],[little missouri:riverid/2,montana:stateid/2],[red:riverid/2,arkansas:stateid/2],[mississippi:riverid/2,illinois:stateid/2],[roanoke:riverid/2,virginia:stateid/2],[north platte:riverid/2,colorado:stateid/2],[allegheny:riverid/2,usa:countryid/2],[ohio:riverid/2,indiana:stateid/2],[niobrara:riverid/2,wyoming:stateid/2],[republican:riverid/2,kansas:stateid/2],[gila:riverid/2,usa:countryid/2],[tennessee:riverid/2,kentucky:stateid/2],[canadian:riverid/2,oklahoma:stateid/2],[red:riverid/2,new mexico:stateid/2],[missouri:riverid/2,usa:countryid/2],[bighorn:riverid/2,montana:stateid/2],[republican:riverid/2,nebraska:stateid/2],[neosho:riverid/2,usa:countryid/2],[cheyenne:riverid/2,wyoming:stateid/2],[red:riverid/2,texas:stateid/2],[delaware:riverid/2,pennsylvania:stateid/2],[columbia:riverid/2,oregon:stateid/2],[niobrara:riverid/2,usa:countryid/2],[white:riverid/2,usa:countryid/2],[gila:riverid/2,new mexico:stateid/2],[potomac:riverid/2,virginia:stateid/2],[snake:riverid/2,wyoming:stateid/2],[roanoke:riverid/2,usa:countryid/2],[north platte:riverid/2,usa:countryid/2],[colorado:riverid/2,arizona:stateid/2],[bighorn:riverid/2,usa:countryid/2],[mississippi:riverid/2,missouri:stateid/2],[tombigbee:riverid/2,alabama:stateid/2],[chattahoochee:riverid/2,usa:countryid/2],[yellowstone:riverid/2,montana:stateid/2],[delaware:riverid/2,usa:countryid/2],[dakota:riverid/2,north dakota:stateid/2],[green:riverid/2,colorado:stateid/2],[dakota:riverid/2,usa:countryid/2],[delaware:riverid/2,new york:stateid/2],[dakota:riverid/2,south dakota:stateid/2],[potomac:riverid/2,usa:countryid/2],[cimarron:riverid/2,usa:countryid/2],[missouri:riverid/2,iowa:stateid/2],[rio grande:riverid/2,new mexico:stateid/2],[ohio:riverid/2,ohio:stateid/2],[rock:riverid/2,illinois:stateid/2],[washita:riverid/2,usa:countryid/2],[arkansas:riverid/2,arkansas:stateid/2],[colorado:riverid/2,colorado:stateid/2],[mississippi:riverid/2,tennessee:stateid/2],[wabash:riverid/2,ohio:stateid/2],[smoky hill:riverid/2,kansas:stateid/2],[wateree catawba:riverid/2,south carolina:stateid/2],[arkansas:riverid/2,oklahoma:stateid/2],[cimarron:riverid/2,oklahoma:stateid/2],[st. francis:riverid/2,missouri:stateid/2],[mississippi:riverid/2,minnesota:stateid/2],[white:riverid/2,arkansas:stateid/2],[san juan:riverid/2,colorado:stateid/2],[hudson:riverid/2,new york:stateid/2],[snake:riverid/2,oregon:stateid/2],[connecticut:riverid/2,usa:countryid/2],[red:riverid/2,louisiana:stateid/2],[yellowstone:riverid/2,usa:countryid/2],[clark fork:riverid/2,montana:stateid/2],[st. francis:riverid/2,usa:countryid/2],[washita:riverid/2,oklahoma:stateid/2],[mississippi:riverid/2,arkansas:stateid/2],[ohio:riverid/2,kentucky:stateid/2],[pearl:riverid/2,michigan:stateid/2],[allegheny:riverid/2,pennsylvania:stateid/2],[tennessee:riverid/2,tennessee:stateid/2],[delaware:riverid/2,new jersey:stateid/2],[ouachita:riverid/2,louisiana:stateid/2],[connecticut:riverid/2,massachusetts:stateid/2],[south platte:riverid/2,nebraska:stateid/2],[mississippi:riverid/2,louisiana:stateid/2],[mississippi:riverid/2,kentucky:stateid/2],[allegheny:riverid/2,new york:stateid/2],[columbia:riverid/2,washington:stateid/2],[columbia:riverid/2,usa:countryid/2],[wabash:riverid/2,usa:countryid/2],[rio grande:riverid/2,colorado:stateid/2],[san juan:riverid/2,new mexico:stateid/2],[cimarron:riverid/2,new mexico:stateid/2],[connecticut:riverid/2,connecticut:stateid/2],[north platte:riverid/2,wyoming:stateid/2],[smoky hill:riverid/2,usa:countryid/2],[red:riverid/2,usa:countryid/2],[ohio:riverid/2,pennsylvania:stateid/2],[hudson:riverid/2,new jersey:stateid/2],[red:riverid/2,oklahoma:stateid/2],[st. francis:riverid/2,arkansas:stateid/2],[tombigbee:riverid/2,usa:countryid/2],[chattahoochee:riverid/2,georgia:stateid/2],[colorado:riverid/2,austin_tx:cityid/3],[powder:riverid/2,wyoming:stateid/2],[san juan:riverid/2,utah:stateid/2],[pearl:riverid/2,louisiana:stateid/2],[cumberland:riverid/2,tennessee:stateid/2],[wateree catawba:riverid/2,north carolina:stateid/2],[wateree catawba:riverid/2,usa:countryid/2],[rock:riverid/2,wisconsin:stateid/2],[chattahoochee:riverid/2,florida:stateid/2],[mississippi:riverid/2,mississippi:stateid/2],[mississippi:riverid/2,usa:countryid/2],[mississippi:riverid/2,wisconsin:stateid/2],[bighorn:riverid/2,wyoming:stateid/2],[mississippi:riverid/2,iowa:stateid/2],[arkansas:riverid/2,kansas:stateid/2],[snake:riverid/2,idaho:stateid/2],[colorado:riverid/2,utah:stateid/2],[ohio:riverid/2,illinois:stateid/2],[pecos:riverid/2,usa:countryid/2],[tennessee:riverid/2,alabama:stateid/2],[potomac:riverid/2,district of columbia:stateid/2],[hudson:riverid/2,usa:countryid/2],[yellowstone:riverid/2,wyoming:stateid/2],[cheyenne:riverid/2,usa:countryid/2],[missouri:riverid/2,nebraska:stateid/2],[wabash:riverid/2,illinois:stateid/2],[clark fork:riverid/2,usa:countryid/2],[connecticut:riverid/2,vermont:stateid/2],[ouachita:riverid/2,usa:countryid/2],[pecos:riverid/2,texas:stateid/2],[delaware:riverid/2,delaware:stateid/2],[snake:riverid/2,washington:stateid/2],[white:riverid/2,missouri:stateid/2],[clark fork:riverid/2,idaho:stateid/2],[ouachita:riverid/2,arkansas:stateid/2],[rio grande:riverid/2,texas:stateid/2],[green:riverid/2,usa:countryid/2],[canadian:riverid/2,texas:stateid/2],[south platte:riverid/2,usa:countryid/2],[cheyenne:riverid/2,north dakota:stateid/2]}:{[riverid/2,stateid/2],[riverid/2,cityid/3],[riverid/2,countryid/2]}[1] => {}:error]} | answer(A,(population(B,A),const(C,riverid(mississippi)),traverse(B,C)))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:502: query => {[Join failed syntactically: {[madison_wi:cityid/3],[milwaukee_wi:cityid/3],[timms hill:placeid/2],[racine_wi:cityid/3],[rock:riverid/2],[west allis_wi:cityid/3],[michigan:lakeid/2],[kenosha_wi:cityid/3],[winnebago:lakeid/2],[mississippi:riverid/2],[appleton_wi:cityid/3],[green bay_wi:cityid/3],[superior:lakeid/2],[lake michigan:placeid/2]}:{[placeid/2],[lakeid/2],[cityid/3],[mountainid/2],[riverid/2]}[0] and {[nebraska:stateid/2,lincoln_ne:cityid/3],[district of columbia:stateid/2,washington_dc:cityid/3],[alaska:stateid/2,juneau_ak:cityid/3],[south dakota:stateid/2,pierre_sd:cityid/3],[west virginia:stateid/2,charleston_wv:cityid/3],[wisconsin:stateid/2,madison_wi:cityid/3],[maine:stateid/2,augusta_me:cityid/3],[rhode island:stateid/2,providence_ri:cityid/3],[kansas:stateid/2,topeka_ks:cityid/3],[pennsylvania:stateid/2,harrisburg_pa:cityid/3],[montana:stateid/2,helena_mt:cityid/3],[florida:stateid/2,tallahassee_fl:cityid/3],[wyoming:stateid/2,cheyenne_wy:cityid/3],[south carolina:stateid/2,columbia_sc:cityid/3],[michigan:stateid/2,lansing_mi:cityid/3],[idaho:stateid/2,boise_id:cityid/3],[colorado:stateid/2,denver_co:cityid/3],[oklahoma:stateid/2,oklahoma city_ok:cityid/3],[california:stateid/2,sacramento_ca:cityid/3],[washington:stateid/2,olympia_wa:cityid/3],[utah:stateid/2,salt lake city_ut:cityid/3],[ohio:stateid/2,columbus_oh:cityid/3],[new mexico:stateid/2,santa fe_nm:cityid/3],[mississippi:stateid/2,jackson_ms:cityid/3],[missouri:stateid/2,jefferson city_mo:cityid/3],[alabama:stateid/2,montgomery_al:cityid/3],[vermont:stateid/2,montpelier_vt:cityid/3],[minnesota:stateid/2,st. paul_mn:cityid/3],[virginia:stateid/2,richmond_va:cityid/3],[kentucky:stateid/2,frankfort_ky:cityid/3],[illinois:stateid/2,springfield_il:cityid/3],[massachusetts:stateid/2,boston_ma:cityid/3],[north carolina:stateid/2,raleigh_nc:cityid/3],[arizona:stateid/2,phoenix_az:cityid/3],[arkansas:stateid/2,little rock_ar:cityid/3],[new hampshire:stateid/2,concord_nh:cityid/3],[tennessee:stateid/2,nashville_tn:cityid/3],[nevada:stateid/2,carson city_nv:cityid/3],[new jersey:stateid/2,trenton_nj:cityid/3],[louisiana:stateid/2,baton rouge_la:cityid/3],[iowa:stateid/2,des moines_ia:cityid/3],[indiana:stateid/2,indianapolis_in:cityid/3],[maryland:stateid/2,annapolis_md:cityid/3],[north dakota:stateid/2,bismarck_nd:cityid/3],[hawaii:stateid/2,honolulu_hi:cityid/3],[delaware:stateid/2,dover_de:cityid/3],[texas:stateid/2,austin_tx:cityid/3],[oregon:stateid/2,salem_or:cityid/3],[georgia:stateid/2,atlanta_ga:cityid/3],[connecticut:stateid/2,hartford_ct:cityid/3],[new york:stateid/2,albany_ny:cityid/3]}:{[stateid/2,cityid/3]}[0] => {}:error]} | answer(A,(capital(B,A),major(B),city(B),loc(B,C),const(C,stateid(wisconsin))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:507: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:508: query => {[rio grande:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(colorado)))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:509: query => {[death valley:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:510: query => {[death valley:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:512: query => {[mckinley:mountainid/2]} | answer(A,highest(A,(mountain(A),loc(A,B),const(B,countryid(usa)))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:517: query => {[delaware:riverid/2]} | answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:518: query => {[oxnard_ca:cityid/3],[bristol township_pa:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[fayetteville_nc:cityid/3],[orlando_fl:cityid/3],[san angelo_tx:cityid/3],[downey_ca:cityid/3],[greenville_sc:cityid/3],[concord_ca:cityid/3],[richardson_tx:cityid/3],[columbia_sc:cityid/3],[waukegan_il:cityid/3],[connecticut:riverid/2],[naknek:lakeid/2],[orange_ca:cityid/3],[clark fork:riverid/2],[pomona_ca:cityid/3],[lowell_ma:cityid/3],[charleston_sc:cityid/3],[largo_fl:cityid/3],[allegheny:riverid/2],[clearwater_fl:cityid/3],[bayonne_nj:cityid/3],[manchester_nh:cityid/3],[amarillo_tx:cityid/3],[vallejo_ca:cityid/3],[south platte:riverid/2],[grand prairie_tx:cityid/3],[hudson:riverid/2],[san bernardino_ca:cityid/3],[lakewood_oh:cityid/3],[bethesda_md:cityid/3],[evanston_il:cityid/3],[medford_ma:cityid/3],[san leandro_ca:cityid/3],[lakewood_co:cityid/3],[pueblo_co:cityid/3],[great falls_mt:cityid/3],[boise_id:cityid/3],[modesto_ca:cityid/3],[richmond_ca:cityid/3],[north charleston_sc:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[bellevue_wa:cityid/3],[reno_nv:cityid/3],[warwick_ri:cityid/3],[schenectady_ny:cityid/3],[sterling heights_mi:cityid/3],[peoria_il:cityid/3],[santa clara_ca:cityid/3],[bethlehem_pa:cityid/3],[utica_ny:cityid/3],[salem_or:cityid/3],[columbia_mo:cityid/3],[alexandria_va:cityid/3],[springfield_mo:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[livonia_mi:cityid/3],[salton sea:lakeid/2],[lawton_ok:cityid/3],[okeechobee:lakeid/2],[fargo_nd:cityid/3],[citrus heights_ca:cityid/3],[waterford_mi:cityid/3],[independence_mo:cityid/3],[silver spring_md:cityid/3],[waco_tx:cityid/3],[red:lakeid/2],[carson_ca:cityid/3],[tombigbee:riverid/2],[bristol_ct:cityid/3],[glendale_ca:cityid/3],[wyoming_mi:cityid/3],[rochester_mn:cityid/3],[beaumont_tx:cityid/3],[chattahoochee:riverid/2],[oceanside_ca:cityid/3],[oak lawn_il:cityid/3],[east orange_nj:cityid/3],[scranton_pa:cityid/3],[westland_mi:cityid/3],[south gate_ca:cityid/3],[bloomington_mn:cityid/3],[royal oak_mi:cityid/3],[terre haute_in:cityid/3],[ogden_ut:cityid/3],[longview_tx:cityid/3],[anderson_in:cityid/3],[springfield_oh:cityid/3],[waterloo_ia:cityid/3],[troy_mi:cityid/3],[rockford_il:cityid/3],[somerville_ma:cityid/3],[lynn_ma:cityid/3],[quincy_ma:cityid/3],[cicero_il:cityid/3],[roanoke:riverid/2],[stockton_ca:cityid/3],[teshekpuk:lakeid/2],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[huntington_wv:cityid/3],[norwalk_ct:cityid/3],[bridgeport_ct:cityid/3],[delaware:riverid/2],[ontario_ca:cityid/3],[alhambra_ca:cityid/3],[lorain_oh:cityid/3],[penn hills_pa:cityid/3],[wateree catawba:riverid/2],[macon_ga:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[billings_mt:cityid/3],[dearborn heights_mi:cityid/3],[wilmington_de:cityid/3],[hayward_ca:cityid/3],[irving_tx:cityid/3],[scottsdale_az:cityid/3],[cedar rapids_ia:cityid/3],[santa monica_ca:cityid/3],[kettering_oh:cityid/3],[santa rosa_ca:cityid/3],[gainesville_fl:cityid/3],[kendall_fl:cityid/3],[powder:riverid/2],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[arvada_co:cityid/3],[brownsville_tx:cityid/3],[sioux falls_sd:cityid/3],[kalamazoo_mi:cityid/3],[south bend_in:cityid/3],[clifton_nj:cityid/3],[chula vista_ca:cityid/3],[flathead:lakeid/2],[euclid_oh:cityid/3],[redondo beach_ca:cityid/3],[tahoe:lakeid/2],[hartford_ct:cityid/3],[mesquite_tx:cityid/3],[clinton_mi:cityid/3],[burbank_ca:cityid/3],[bighorn:riverid/2],[farmington hills_mi:cityid/3],[middletown_nj:cityid/3],[pasadena_tx:cityid/3],[racine_wi:cityid/3],[youngstown_oh:cityid/3],[huntsville_al:cityid/3],[cheektowaga_ny:cityid/3],[framingham_ma:cityid/3],[monroe_la:cityid/3],[tallahassee_fl:cityid/3],[champaign_il:cityid/3],[tuscaloosa_al:cityid/3],[boulder_co:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[woodbridge_nj:cityid/3],[reading_pa:cityid/3],[newport news_va:cityid/3],[wichita falls_tx:cityid/3],[fort smith_ar:cityid/3],[danbury_ct:cityid/3],[mount vernon_ny:cityid/3],[fort collins_co:cityid/3],[ann arbor_mi:cityid/3],[waltham_ma:cityid/3],[nashua_nh:cityid/3],[alameda_ca:cityid/3],[niobrara:riverid/2],[stamford_ct:cityid/3],[arlington heights_il:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[laredo_tx:cityid/3],[rock:riverid/2],[high point_nc:cityid/3],[dubuque_ia:cityid/3],[sunnyvale_ca:cityid/3],[charleston_wv:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[dundalk_md:cityid/3],[meriden_ct:cityid/3],[west allis_wi:cityid/3],[lynchburg_va:cityid/3],[west hartford_ct:cityid/3],[southfield_mi:cityid/3],[paterson_nj:cityid/3],[altoona_pa:cityid/3],[lansing_mi:cityid/3],[becharof:lakeid/2],[hollywood_fl:cityid/3],[st. clair shores_mi:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[ventura_ca:cityid/3],[new bedford_ma:cityid/3],[tempe_az:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[pensacola_fl:cityid/3],[duluth_mn:cityid/3],[greenwich_ct:cityid/3],[skokie_il:cityid/3],[elyria_oh:cityid/3],[sioux city_ia:cityid/3],[bakersfield_ca:cityid/3],[niagara falls_ny:cityid/3],[thousand oaks_ca:cityid/3],[cranston_ri:cityid/3],[evansville_in:cityid/3],[trenton_nj:cityid/3],[redford_mi:cityid/3],[kenosha_wi:cityid/3],[durham_nc:cityid/3],[lake of the woods:lakeid/2],[iliamna:lakeid/2],[winnebago:lakeid/2],[fremont_ca:cityid/3],[camden_nj:cityid/3],[miami beach_fl:cityid/3],[odessa_tx:cityid/3],[appleton_wi:cityid/3],[muncie_in:cityid/3],[overland park_ks:cityid/3],[potomac:riverid/2],[green bay_wi:cityid/3],[topeka_ks:cityid/3],[edison_nj:cityid/3],[republican:riverid/2],[waterbury_ct:cityid/3],[hampton_va:cityid/3],[west valley_ut:cityid/3],[st. joseph_mo:cityid/3],[savannah_ga:cityid/3],[torrance_ca:cityid/3],[rainy:lakeid/2],[lakewood_ca:cityid/3],[pontchartrain:lakeid/2],[casper_wy:cityid/3],[hammond_in:cityid/3],[irvington_nj:cityid/3],[abingdon_pa:cityid/3],[eugene_or:cityid/3],[joliet_il:cityid/3],[simi valley_ca:cityid/3],[west palm beach_fl:cityid/3],[dearborn_mi:cityid/3],[cherry hill_nj:cityid/3],[new haven_ct:cityid/3],[lawrence_ma:cityid/3],[chesapeake_va:cityid/3],[springfield_il:cityid/3],[erie_pa:cityid/3],[compton_ca:cityid/3],[levittown_ny:cityid/3],[aurora_il:cityid/3],[albany_ny:cityid/3],[elizabeth_nj:cityid/3],[pontiac_mi:cityid/3],[whittier_ca:cityid/3],[decatur_il:cityid/3],[pawtucket_ri:cityid/3],[koolaupoko_hi:cityid/3],[north little rock_ar:cityid/3],[champlain:lakeid/2],[lake charles_la:cityid/3],[fullerton_ca:cityid/3],[davenport_ia:cityid/3],[neosho:riverid/2],[fall river_ma:cityid/3],[brockton_ma:cityid/3],[midland_tx:cityid/3],[new rochelle_ny:cityid/3],[lafayette_la:cityid/3],[parma_oh:cityid/3],[allentown_pa:cityid/3],[provo_ut:cityid/3],[upper darby_pa:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[roanoke_va:cityid/3],[pasadena_ca:cityid/3],[port arthur_tx:cityid/3],[newton_ma:cityid/3],[glendale_az:cityid/3],[tyler_tx:cityid/3],[new britain_ct:cityid/3],[st. clair:lakeid/2],[escondido_ca:cityid/3],[elgin_il:cityid/3],[cambridge_ma:cityid/3],[lower merion_pa:cityid/3],[irondequoit_ny:cityid/3],[norman_ok:cityid/3],[mille lacs:lakeid/2],[san juan:riverid/2],[portland_me:cityid/3],[taylor_mi:cityid/3],[albany_ga:cityid/3],[hamilton_oh:cityid/3],[saginaw_mi:cityid/3],[st. francis:riverid/2],[kenner_la:cityid/3],[canton_oh:cityid/3]} | answer(A,(major(A),loc(A),loc(A,B),const(B,countryid(usa))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:521: query => {[atlanta_ga:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(georgia))))
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:523: query => {[jerimoth hill:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid('rhode island')))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:524: query => {[rio grande:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid('new mexico')))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:525: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:526: query => {[3.15e+11length^2]} | answer(A,(size(B,A),const(B,stateid('new mexico'))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:528: query => {[mount marcy:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid('new york')))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:529: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:531: query => {[louisiana:stateid/2]} | answer(A,smallest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:532: query => {[delaware:riverid/2]} | answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:534: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:536: query => {[oxnard_ca:cityid/3],[bristol township_pa:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[fayetteville_nc:cityid/3],[orlando_fl:cityid/3],[san angelo_tx:cityid/3],[downey_ca:cityid/3],[greenville_sc:cityid/3],[concord_ca:cityid/3],[richardson_tx:cityid/3],[columbia_sc:cityid/3],[waukegan_il:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[lowell_ma:cityid/3],[charleston_sc:cityid/3],[largo_fl:cityid/3],[clearwater_fl:cityid/3],[bayonne_nj:cityid/3],[manchester_nh:cityid/3],[amarillo_tx:cityid/3],[vallejo_ca:cityid/3],[grand prairie_tx:cityid/3],[san bernardino_ca:cityid/3],[lakewood_oh:cityid/3],[bethesda_md:cityid/3],[evanston_il:cityid/3],[medford_ma:cityid/3],[san leandro_ca:cityid/3],[lakewood_co:cityid/3],[pueblo_co:cityid/3],[great falls_mt:cityid/3],[boise_id:cityid/3],[modesto_ca:cityid/3],[richmond_ca:cityid/3],[north charleston_sc:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[bellevue_wa:cityid/3],[reno_nv:cityid/3],[warwick_ri:cityid/3],[schenectady_ny:cityid/3],[sterling heights_mi:cityid/3],[peoria_il:cityid/3],[santa clara_ca:cityid/3],[bethlehem_pa:cityid/3],[utica_ny:cityid/3],[salem_or:cityid/3],[columbia_mo:cityid/3],[alexandria_va:cityid/3],[springfield_mo:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[livonia_mi:cityid/3],[lawton_ok:cityid/3],[fargo_nd:cityid/3],[citrus heights_ca:cityid/3],[waterford_mi:cityid/3],[independence_mo:cityid/3],[silver spring_md:cityid/3],[waco_tx:cityid/3],[carson_ca:cityid/3],[bristol_ct:cityid/3],[glendale_ca:cityid/3],[wyoming_mi:cityid/3],[rochester_mn:cityid/3],[beaumont_tx:cityid/3],[oceanside_ca:cityid/3],[oak lawn_il:cityid/3],[east orange_nj:cityid/3],[scranton_pa:cityid/3],[westland_mi:cityid/3],[south gate_ca:cityid/3],[bloomington_mn:cityid/3],[royal oak_mi:cityid/3],[terre haute_in:cityid/3],[ogden_ut:cityid/3],[longview_tx:cityid/3],[anderson_in:cityid/3],[springfield_oh:cityid/3],[waterloo_ia:cityid/3],[troy_mi:cityid/3],[rockford_il:cityid/3],[somerville_ma:cityid/3],[lynn_ma:cityid/3],[quincy_ma:cityid/3],[cicero_il:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[huntington_wv:cityid/3],[norwalk_ct:cityid/3],[bridgeport_ct:cityid/3],[ontario_ca:cityid/3],[alhambra_ca:cityid/3],[lorain_oh:cityid/3],[penn hills_pa:cityid/3],[macon_ga:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[billings_mt:cityid/3],[dearborn heights_mi:cityid/3],[wilmington_de:cityid/3],[hayward_ca:cityid/3],[irving_tx:cityid/3],[scottsdale_az:cityid/3],[cedar rapids_ia:cityid/3],[santa monica_ca:cityid/3],[kettering_oh:cityid/3],[santa rosa_ca:cityid/3],[gainesville_fl:cityid/3],[kendall_fl:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[arvada_co:cityid/3],[brownsville_tx:cityid/3],[sioux falls_sd:cityid/3],[kalamazoo_mi:cityid/3],[south bend_in:cityid/3],[clifton_nj:cityid/3],[chula vista_ca:cityid/3],[euclid_oh:cityid/3],[redondo beach_ca:cityid/3],[hartford_ct:cityid/3],[mesquite_tx:cityid/3],[clinton_mi:cityid/3],[burbank_ca:cityid/3],[farmington hills_mi:cityid/3],[middletown_nj:cityid/3],[pasadena_tx:cityid/3],[racine_wi:cityid/3],[youngstown_oh:cityid/3],[huntsville_al:cityid/3],[cheektowaga_ny:cityid/3],[framingham_ma:cityid/3],[monroe_la:cityid/3],[tallahassee_fl:cityid/3],[champaign_il:cityid/3],[tuscaloosa_al:cityid/3],[boulder_co:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[woodbridge_nj:cityid/3],[reading_pa:cityid/3],[newport news_va:cityid/3],[wichita falls_tx:cityid/3],[fort smith_ar:cityid/3],[danbury_ct:cityid/3],[mount vernon_ny:cityid/3],[fort collins_co:cityid/3],[ann arbor_mi:cityid/3],[waltham_ma:cityid/3],[nashua_nh:cityid/3],[alameda_ca:cityid/3],[stamford_ct:cityid/3],[arlington heights_il:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[laredo_tx:cityid/3],[high point_nc:cityid/3],[dubuque_ia:cityid/3],[sunnyvale_ca:cityid/3],[charleston_wv:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[dundalk_md:cityid/3],[meriden_ct:cityid/3],[west allis_wi:cityid/3],[lynchburg_va:cityid/3],[west hartford_ct:cityid/3],[southfield_mi:cityid/3],[paterson_nj:cityid/3],[altoona_pa:cityid/3],[lansing_mi:cityid/3],[hollywood_fl:cityid/3],[st. clair shores_mi:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[ventura_ca:cityid/3],[new bedford_ma:cityid/3],[tempe_az:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[pensacola_fl:cityid/3],[duluth_mn:cityid/3],[greenwich_ct:cityid/3],[skokie_il:cityid/3],[elyria_oh:cityid/3],[sioux city_ia:cityid/3],[bakersfield_ca:cityid/3],[niagara falls_ny:cityid/3],[thousand oaks_ca:cityid/3],[cranston_ri:cityid/3],[evansville_in:cityid/3],[trenton_nj:cityid/3],[redford_mi:cityid/3],[kenosha_wi:cityid/3],[durham_nc:cityid/3],[fremont_ca:cityid/3],[camden_nj:cityid/3],[miami beach_fl:cityid/3],[odessa_tx:cityid/3],[appleton_wi:cityid/3],[muncie_in:cityid/3],[overland park_ks:cityid/3],[green bay_wi:cityid/3],[topeka_ks:cityid/3],[edison_nj:cityid/3],[waterbury_ct:cityid/3],[hampton_va:cityid/3],[west valley_ut:cityid/3],[st. joseph_mo:cityid/3],[savannah_ga:cityid/3],[torrance_ca:cityid/3],[lakewood_ca:cityid/3],[casper_wy:cityid/3],[hammond_in:cityid/3],[irvington_nj:cityid/3],[abingdon_pa:cityid/3],[eugene_or:cityid/3],[joliet_il:cityid/3],[simi valley_ca:cityid/3],[west palm beach_fl:cityid/3],[dearborn_mi:cityid/3],[cherry hill_nj:cityid/3],[new haven_ct:cityid/3],[lawrence_ma:cityid/3],[chesapeake_va:cityid/3],[springfield_il:cityid/3],[erie_pa:cityid/3],[compton_ca:cityid/3],[levittown_ny:cityid/3],[aurora_il:cityid/3],[albany_ny:cityid/3],[elizabeth_nj:cityid/3],[pontiac_mi:cityid/3],[whittier_ca:cityid/3],[decatur_il:cityid/3],[pawtucket_ri:cityid/3],[koolaupoko_hi:cityid/3],[north little rock_ar:cityid/3],[lake charles_la:cityid/3],[fullerton_ca:cityid/3],[davenport_ia:cityid/3],[fall river_ma:cityid/3],[brockton_ma:cityid/3],[midland_tx:cityid/3],[new rochelle_ny:cityid/3],[lafayette_la:cityid/3],[parma_oh:cityid/3],[allentown_pa:cityid/3],[provo_ut:cityid/3],[upper darby_pa:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[roanoke_va:cityid/3],[pasadena_ca:cityid/3],[port arthur_tx:cityid/3],[newton_ma:cityid/3],[glendale_az:cityid/3],[tyler_tx:cityid/3],[new britain_ct:cityid/3],[escondido_ca:cityid/3],[elgin_il:cityid/3],[cambridge_ma:cityid/3],[lower merion_pa:cityid/3],[irondequoit_ny:cityid/3],[norman_ok:cityid/3],[portland_me:cityid/3],[taylor_mi:cityid/3],[albany_ga:cityid/3],[hamilton_oh:cityid/3],[saginaw_mi:cityid/3],[kenner_la:cityid/3],[canton_oh:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,countryid(usa))))
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:538: query => {[690767count]} | answer(A,(population(B,A),const(B,stateid('south dakota'))))
        Example tmpe6f2k58p.dlog:539: query => {[new york_ny:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:541: query => {} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid('new mexico'))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:543: query => {[naknek:lakeid/2],[salton sea:lakeid/2],[okeechobee:lakeid/2],[red:lakeid/2],[teshekpuk:lakeid/2],[flathead:lakeid/2],[tahoe:lakeid/2],[becharof:lakeid/2],[lake of the woods:lakeid/2],[iliamna:lakeid/2],[winnebago:lakeid/2],[rainy:lakeid/2],[pontchartrain:lakeid/2],[champlain:lakeid/2],[st. clair:lakeid/2],[mille lacs:lakeid/2]} | answer(A,(major(A),lake(A),loc(A,B),const(B,countryid(usa))))
        Example tmpe6f2k58p.dlog:544: query => {[17558000count]} | answer(A,(population(B,A),const(B,stateid('new york'))))
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:546: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,riverid(missouri))))
        Example tmpe6f2k58p.dlog:547: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:549: query => {} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(') island'))))
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:554: query => {[rio grande:riverid/2]} | answer(A,largest(A,(river(A),loc(A,B),const(B,stateid(texas)))))
        Example tmpe6f2k58p.dlog:555: query => {[oxnard_ca:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[downey_ca:cityid/3],[concord_ca:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[vallejo_ca:cityid/3],[san bernardino_ca:cityid/3],[san leandro_ca:cityid/3],[modesto_ca:cityid/3],[richmond_ca:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[santa clara_ca:cityid/3],[citrus heights_ca:cityid/3],[carson_ca:cityid/3],[glendale_ca:cityid/3],[oceanside_ca:cityid/3],[south gate_ca:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[ontario_ca:cityid/3],[alhambra_ca:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[hayward_ca:cityid/3],[santa monica_ca:cityid/3],[santa rosa_ca:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[chula vista_ca:cityid/3],[redondo beach_ca:cityid/3],[burbank_ca:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[alameda_ca:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[sunnyvale_ca:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[ventura_ca:cityid/3],[bakersfield_ca:cityid/3],[thousand oaks_ca:cityid/3],[fremont_ca:cityid/3],[torrance_ca:cityid/3],[lakewood_ca:cityid/3],[simi valley_ca:cityid/3],[compton_ca:cityid/3],[whittier_ca:cityid/3],[fullerton_ca:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[pasadena_ca:cityid/3],[escondido_ca:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(california))))
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:557: query => {[missouri:riverid/2]} | answer(A,largest(A,(river(A),loc(A,B),const(B,stateid(nebraska)))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:558: query => {[los angeles_ca:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(california)))))
        Example tmpe6f2k58p.dlog:559: query => {[los angeles_ca:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(california)))))
        Example tmpe6f2k58p.dlog:560: query => {[17558000count]} | answer(A,(population(B,A),const(B,stateid('new york'))))
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:563: query => {[mississippi:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(illinois)))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:564: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))
        Example tmpe6f2k58p.dlog:565: query => {[638333count]} | answer(A,(population(B,A),const(B,cityid(washington,_))))
        Example tmpe6f2k58p.dlog:566: query => {[rio grande:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(texas)))))
        Example tmpe6f2k58p.dlog:567: query => {[anchorage_ak:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(alaska)))))
        Example tmpe6f2k58p.dlog:568: query => {[7071639count]} | answer(A,(population(B,A),const(B,cityid('new york',_))))
        Example tmpe6f2k58p.dlog:569: query => {[delaware river:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(pennsylvania)))))
        Example tmpe6f2k58p.dlog:570: query => {[oxnard_ca:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[downey_ca:cityid/3],[concord_ca:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[vallejo_ca:cityid/3],[san bernardino_ca:cityid/3],[san leandro_ca:cityid/3],[modesto_ca:cityid/3],[richmond_ca:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[santa clara_ca:cityid/3],[citrus heights_ca:cityid/3],[carson_ca:cityid/3],[glendale_ca:cityid/3],[oceanside_ca:cityid/3],[south gate_ca:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[ontario_ca:cityid/3],[alhambra_ca:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[hayward_ca:cityid/3],[santa monica_ca:cityid/3],[santa rosa_ca:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[chula vista_ca:cityid/3],[redondo beach_ca:cityid/3],[burbank_ca:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[alameda_ca:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[sunnyvale_ca:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[ventura_ca:cityid/3],[bakersfield_ca:cityid/3],[thousand oaks_ca:cityid/3],[fremont_ca:cityid/3],[torrance_ca:cityid/3],[lakewood_ca:cityid/3],[simi valley_ca:cityid/3],[compton_ca:cityid/3],[whittier_ca:cityid/3],[fullerton_ca:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[pasadena_ca:cityid/3],[escondido_ca:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(california))))
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:572: query => {[nevada:stateid/2],[utah:stateid/2],[colorado:stateid/2],[california:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),const(B,riverid(colorado)),next_to(B,A)))
        Example tmpe6f2k58p.dlog:573: query => {[albany_ga:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(georgia)))))
        Example tmpe6f2k58p.dlog:574: query => {[milwaukee_wi:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(wisconsin)))))
        Example tmpe6f2k58p.dlog:575: query => {[307890000count]} | answer(A,(population(B,A),const(B,countryid(usa))))
        Example tmpe6f2k58p.dlog:576: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))
        Example tmpe6f2k58p.dlog:577: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),const(B,riverid(mississippi)),river(B),traverse(B,A)))
        Example tmpe6f2k58p.dlog:578: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:579: query => {[atlanta_ga:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(georgia)))))
        Example tmpe6f2k58p.dlog:580: query => {} | answer(A,(population(B,A),const(B,stateid(portland))))
        Example tmpe6f2k58p.dlog:581: query => {} | answer(A,(population(B,A),const(B,cityid(austin,wa))))
        Example tmpe6f2k58p.dlog:582: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example tmpe6f2k58p.dlog:583: query => {[new york_ny:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:584: query => {[171300count]} | answer(A,(population(B,A),const(B,cityid(spokane,wa))))
        Example tmpe6f2k58p.dlog:585: query => {[racine_wi:cityid/3],[west allis_wi:cityid/3],[kenosha_wi:cityid/3],[appleton_wi:cityid/3],[green bay_wi:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(wisconsin))))
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:587: query => {[1.27e+11length^2]} | answer(A,(area(B,A),const(B,stateid('new york'))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:588: query => {[lake michigan:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(wisconsin)))))
        Example tmpe6f2k58p.dlog:589: query => {[arkansas river:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(colorado)))))
        Example tmpe6f2k58p.dlog:590: query => {[3778000length]} | answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))
        Example tmpe6f2k58p.dlog:591: query => {} | answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(alaska)))))
        Example tmpe6f2k58p.dlog:592: query => {[guadalupe peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:595: query => {[638333count]} | answer(A,(population(B,A),const(B,cityid(washington,dc))))
        Example tmpe6f2k58p.dlog:596: query => {[wichita_ks:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(kansas)))))
        Example tmpe6f2k58p.dlog:597: query => {[casper_wy:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(wyoming)))))
        Example tmpe6f2k58p.dlog:598: query => {[wilmington_de:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(delaware))))
        Example tmpe6f2k58p.dlog:599: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[longview_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:603: query => {} | answer(A,(population(B,A),const(B,stateid('mount dakota'))))
        Example tmpe6f2k58p.dlog:604: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,tx))))
        Example tmpe6f2k58p.dlog:605: query => {[pacific ocean:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(oregon)))))
        Example tmpe6f2k58p.dlog:606: query => {[6.91e+11length^2]} | answer(A,(area(B,A),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:607: query => {[concord_nh:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid('new hampshire'))))
        Example tmpe6f2k58p.dlog:608: query => {} | answer(A,(population(B,A),const(B,cityid(seattle,dc))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:609: query => {[houston_tx:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))
        Example tmpe6f2k58p.dlog:610: query => {[alaska:stateid/2]} | answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpe6f2k58p.dlog:611: query => {[west virginia:stateid/2]} | answer(A,smallest(A,(state(A),next_to(A,B),const(B,stateid(ohio)))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:612: query => {[mount sunflower:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(kansas)))))
        Example tmpe6f2k58p.dlog:613: query => {[billings_mt:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(montana)))))
        Example tmpe6f2k58p.dlog:614: query => {[portland_or:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(oregon)))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:615: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B))))
        Example tmpe6f2k58p.dlog:616: query => {[houston_tx:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:617: query => {[mississippi river:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(iowa)))))
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:619: query => {[scottsdale_az:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(arizona)))))
        Example tmpe6f2k58p.dlog:620: query => {[mississippi river:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(iowa)))))
        Example tmpe6f2k58p.dlog:621: query => {[houston_tx:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:622: query => {[omaha_ne:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(nebraska)))))
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:624: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:626: query => {[1.85e-06count/length^2]} | answer(A,(density(B,A),const(B,stateid(wyoming))))
        Example tmpe6f2k58p.dlog:627: query => {[920600count]} | answer(A,(population(B,A),const(B,stateid('new hampshire'))))
        Example tmpe6f2k58p.dlog:628: query => {[gannett peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(wyoming)))))
        Example tmpe6f2k58p.dlog:629: query => {[gulf of mexico:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmpe6f2k58p.dlog:630: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:632: query => {[690767count]} | answer(A,(population(B,A),const(B,stateid('south dakota'))))
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:635: query => {[2.06e-05count/length^2]} | answer(A,(density(B,A),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:636: query => {[Join failed syntactically: {[wyoming:stateid/2,wyoming:stateid/2],[new york:stateid/2,usa:countryid/2],[kansas:stateid/2,kansas:stateid/2],[north dakota:stateid/2,north dakota:stateid/2],[new hampshire:stateid/2,usa:countryid/2],[california:stateid/2,california:stateid/2],[alaska:stateid/2,alaska:stateid/2],[new jersey:stateid/2,new jersey:stateid/2],[south dakota:stateid/2,south dakota:stateid/2],[massachusetts:stateid/2,massachusetts:stateid/2],[missouri:stateid/2,usa:countryid/2],[arkansas:stateid/2,arkansas:stateid/2],[illinois:stateid/2,illinois:stateid/2],[iowa:stateid/2,usa:countryid/2],[maine:stateid/2,usa:countryid/2],[connecticut:stateid/2,connecticut:stateid/2],[idaho:stateid/2,usa:countryid/2],[nebraska:stateid/2,nebraska:stateid/2],[florida:stateid/2,usa:countryid/2],[new mexico:stateid/2,new mexico:stateid/2],[iowa:stateid/2,iowa:stateid/2],[virginia:stateid/2,virginia:stateid/2],[minnesota:stateid/2,minnesota:stateid/2],[ohio:stateid/2,usa:countryid/2],[nevada:stateid/2,nevada:stateid/2],[tennessee:stateid/2,tennessee:stateid/2],[alabama:stateid/2,usa:countryid/2],[ohio:stateid/2,ohio:stateid/2],[kansas:stateid/2,usa:countryid/2],[alaska:stateid/2,usa:countryid/2],[north dakota:stateid/2,usa:countryid/2],[oregon:stateid/2,oregon:stateid/2],[connecticut:stateid/2,usa:countryid/2],[kentucky:stateid/2,usa:countryid/2],[north carolina:stateid/2,usa:countryid/2],[indiana:stateid/2,indiana:stateid/2],[georgia:stateid/2,usa:countryid/2],[montana:stateid/2,montana:stateid/2],[new jersey:stateid/2,usa:countryid/2],[new hampshire:stateid/2,new hampshire:stateid/2],[indiana:stateid/2,usa:countryid/2],[washington:stateid/2,usa:countryid/2],[maryland:stateid/2,usa:countryid/2],[florida:stateid/2,florida:stateid/2],[michigan:stateid/2,usa:countryid/2],[nebraska:stateid/2,usa:countryid/2],[california:stateid/2,usa:countryid/2],[hawaii:stateid/2,hawaii:stateid/2],[vermont:stateid/2,usa:countryid/2],[kentucky:stateid/2,kentucky:stateid/2],[mississippi:stateid/2,mississippi:stateid/2],[louisiana:stateid/2,louisiana:stateid/2],[vermont:stateid/2,vermont:stateid/2],[wisconsin:stateid/2,wisconsin:stateid/2],[utah:stateid/2,usa:countryid/2],[minnesota:stateid/2,usa:countryid/2],[alabama:stateid/2,alabama:stateid/2],[delaware:stateid/2,delaware:stateid/2],[new york:stateid/2,new york:stateid/2],[south carolina:stateid/2,usa:countryid/2],[idaho:stateid/2,idaho:stateid/2],[pennsylvania:stateid/2,usa:countryid/2],[wyoming:stateid/2,usa:countryid/2],[colorado:stateid/2,usa:countryid/2],[west virginia:stateid/2,west virginia:stateid/2],[hawaii:stateid/2,usa:countryid/2],[oklahoma:stateid/2,oklahoma:stateid/2],[district of columbia:stateid/2,district of columbia:stateid/2],[virginia:stateid/2,usa:countryid/2],[arizona:stateid/2,usa:countryid/2],[arizona:stateid/2,arizona:stateid/2],[new mexico:stateid/2,usa:countryid/2],[illinois:stateid/2,usa:countryid/2],[pennsylvania:stateid/2,pennsylvania:stateid/2],[wisconsin:stateid/2,usa:countryid/2],[tennessee:stateid/2,usa:countryid/2],[oklahoma:stateid/2,usa:countryid/2],[mississippi:stateid/2,usa:countryid/2],[montana:stateid/2,usa:countryid/2],[maryland:stateid/2,maryland:stateid/2],[georgia:stateid/2,georgia:stateid/2],[rhode island:stateid/2,usa:countryid/2],[louisiana:stateid/2,usa:countryid/2],[missouri:stateid/2,missouri:stateid/2],[nevada:stateid/2,usa:countryid/2],[west virginia:stateid/2,usa:countryid/2],[maine:stateid/2,maine:stateid/2],[oregon:stateid/2,usa:countryid/2],[north carolina:stateid/2,north carolina:stateid/2],[rhode island:stateid/2,rhode island:stateid/2],[south carolina:stateid/2,south carolina:stateid/2],[texas:stateid/2,texas:stateid/2],[washington:stateid/2,washington:stateid/2],[massachusetts:stateid/2,usa:countryid/2],[arkansas:stateid/2,usa:countryid/2],[colorado:stateid/2,colorado:stateid/2],[south dakota:stateid/2,usa:countryid/2],[michigan:stateid/2,michigan:stateid/2],[delaware:stateid/2,usa:countryid/2],[texas:stateid/2,usa:countryid/2],[utah:stateid/2,utah:stateid/2],[district of columbia:stateid/2,usa:countryid/2]}:{[stateid/2,stateid/2],[stateid/2,countryid/2]}[1] and {..}:{[date,date,cityid/3],[money,money,cityid/3],[length,length,cityid/3],[count/length^2,count/length^2,cityid/3],[money/time_duration,money/time_duration,cityid/3],[date_month,date_month,cityid/3],[time_duration,time_duration,cityid/3],[frac,frac,cityid/3],[name,name,cityid/3],[rank,rank,cityid/3],[date_year,date_year,cityid/3],[date_day,date_day,cityid/3],[date_time,date_time,cityid/3],[count,count,cityid/3],[length^2,length^2,cityid/3]}[2] => {}:error]} | answer(A,(state(A),loc(B,A),city(B),loc(B,cityid(austin,_))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:637: query => {[utah:stateid/2],[wyoming:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[kansas:stateid/2],[nebraska:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(colorado))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:638: query => {} | answer(A,(population(B,A),const(B,cityid(francisco,_))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:639: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B))))
        Example tmpe6f2k58p.dlog:640: query => {[Join failed syntactically: {[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,new jersey:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,new hampshire:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,california:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,new jersey:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,utah:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,georgia:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,virginia:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,wisconsin:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,district of columbia:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,michigan:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,north carolina:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,texas:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,california:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,oklahoma:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,pennsylvania:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,alaska:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,oklahoma:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,north carolina:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,north carolina:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,west virginia:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,alaska:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,georgia:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,oregon:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,south dakota:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,nevada:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,new york:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,maine:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,maryland:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,nebraska:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,wisconsin:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,minnesota:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,missouri:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,florida:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,colorado:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,connecticut:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,maryland:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,utah:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,maine:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,south carolina:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,rhode island:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,district of columbia:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,montana:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,idaho:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,florida:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,arkansas:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,wisconsin:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,arizona:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,montana:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,nevada:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,massachusetts:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,rhode island:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,maine:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,idaho:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,pennsylvania:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,idaho:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,hawaii:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,new york:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,kentucky:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,maine:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,alabama:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,wyoming:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,arizona:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,texas:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,alaska:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,illinois:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,pennsylvania:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,south dakota:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,california:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,nevada:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,rhode island:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,minnesota:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,north carolina:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,delaware:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,vermont:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,florida:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,connecticut:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,montana:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,north dakota:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,new jersey:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,missouri:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,indiana:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,massachusetts:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,illinois:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,virginia:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,north carolina:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,georgia:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,new jersey:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,ohio:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,vermont:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,iowa:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,south dakota:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,kansas:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,alaska:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,delaware:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,ohio:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,kansas:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,new hampshire:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,louisiana:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,oklahoma:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,maine:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,nebraska:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,nevada:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,iowa:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,florida:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,vermont:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,new york:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,florida:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,alaska:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,wyoming:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,massachusetts:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,hawaii:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,indiana:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,iowa:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,rhode island:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,ohio:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,indiana:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,maryland:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,missouri:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,new mexico:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,new mexico:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,connecticut:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,tennessee:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,alabama:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,alabama:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,oregon:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,pennsylvania:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,missouri:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,north dakota:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,arkansas:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,iowa:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,ohio:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,texas:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,new jersey:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,district of columbia:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,utah:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,indiana:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,louisiana:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,idaho:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,alabama:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,colorado:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,montana:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,washington:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,oklahoma:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,missouri:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,iowa:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,west virginia:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,new mexico:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,wyoming:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,maryland:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,nebraska:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,louisiana:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,rhode island:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,new mexico:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,wisconsin:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,illinois:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,new mexico:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,vermont:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,oregon:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,south dakota:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,kansas:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,alabama:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,south dakota:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,connecticut:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,mississippi:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,wisconsin:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,kentucky:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,north carolina:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,michigan:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,arkansas:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,utah:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,new jersey:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,massachusetts:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,tennessee:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,florida:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,alabama:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,georgia:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,oklahoma:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,washington:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,wyoming:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,mississippi:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,tennessee:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,north dakota:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,tennessee:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,california:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,new mexico:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,maine:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,alaska:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,arkansas:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,indiana:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,north dakota:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,tennessee:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,utah:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,colorado:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,arizona:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,kentucky:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,kentucky:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,nebraska:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,maryland:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,indiana:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,georgia:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,montana:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,ohio:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,vermont:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,texas:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,arizona:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,colorado:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,hawaii:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,new hampshire:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,idaho:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,west virginia:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,nebraska:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,washington:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,kentucky:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,south dakota:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,new hampshire:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,wyoming:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,iowa:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,minnesota:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,new york:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,missouri:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,oklahoma:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,west virginia:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,washington:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,south carolina:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,mississippi:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,district of columbia:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,maryland:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,connecticut:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,vermont:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,illinois:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,pennsylvania:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,arizona:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,colorado:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,new hampshire:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,south carolina:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,ohio:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,california:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,mississippi:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,arizona:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,mississippi:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,illinois:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,michigan:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,connecticut:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,nebraska:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,virginia:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,district of columbia:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,louisiana:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,utah:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,minnesota:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,hawaii:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,arkansas:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,nevada:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,washington:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,oregon:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,minnesota:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,south carolina:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,texas:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,west virginia:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,idaho:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,virginia:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,mississippi:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,south carolina:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,hawaii:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,arkansas:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,new york:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,washington:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,virginia:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,texas:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,delaware:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,louisiana:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,kentucky:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,georgia:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,michigan:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,koolaupoko_hi:cityid/3,district of columbia:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,michigan:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,oregon:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,pennsylvania:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,rhode island:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,nevada:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,kansas:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,michigan:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,massachusetts:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,new york:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,louisiana:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,north dakota:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,hawaii:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,north dakota:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,oregon:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,delaware:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,south carolina:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,california:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,delaware:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,colorado:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,illinois:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,massachusetts:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,delaware:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,kansas:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,montana:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,minnesota:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,pacific ocean:placeid/2,new hampshire:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,virginia:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,ewa_hi:cityid/3,kansas:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,honolulu_hi:cityid/3,wyoming:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,west virginia:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,wahiawa_hi:cityid/3,tennessee:stateid/2],[hawaii,hawaii:stateid/2,hawaii:stateid/2,mauna kea:placeid/2,wisconsin:stateid/2]}:{[money,stateid/2,stateid/2,riverid/2,stateid/2],[frac,stateid/2,stateid/2,cityid/3,stateid/2],[length,stateid/2,stateid/2,placeid/2,stateid/2],[money,stateid/2,stateid/2,lakeid/2,stateid/2],[count/length^2,stateid/2,stateid/2,mountainid/2,stateid/2],[rank,stateid/2,stateid/2,lakeid/2,stateid/2],[date_year,stateid/2,stateid/2,lakeid/2,stateid/2],[length,stateid/2,stateid/2,cityid/3,stateid/2],[length^2,stateid/2,stateid/2,lakeid/2,stateid/2],[length,stateid/2,stateid/2,riverid/2,stateid/2],[date_year,stateid/2,stateid/2,cityid/3,stateid/2],[count/length^2,stateid/2,stateid/2,placeid/2,stateid/2],[date_time,stateid/2,stateid/2,cityid/3,stateid/2],[count,stateid/2,stateid/2,cityid/3,stateid/2],[date_time,stateid/2,stateid/2,riverid/2,stateid/2],[time_duration,stateid/2,stateid/2,riverid/2,stateid/2],[rank,stateid/2,stateid/2,cityid/3,stateid/2],[length^2,stateid/2,stateid/2,placeid/2,stateid/2],[date_day,stateid/2,stateid/2,placeid/2,stateid/2],[money/time_duration,stateid/2,stateid/2,lakeid/2,stateid/2],[date_day,stateid/2,stateid/2,riverid/2,stateid/2],[date_month,stateid/2,stateid/2,cityid/3,stateid/2],[date_day,stateid/2,stateid/2,lakeid/2,stateid/2],[date_year,stateid/2,stateid/2,riverid/2,stateid/2],[frac,stateid/2,stateid/2,riverid/2,stateid/2],[length^2,stateid/2,stateid/2,mountainid/2,stateid/2],[name,stateid/2,stateid/2,cityid/3,stateid/2],[frac,stateid/2,stateid/2,placeid/2,stateid/2],[date,stateid/2,stateid/2,cityid/3,stateid/2],[length,stateid/2,stateid/2,lakeid/2,stateid/2],[count,stateid/2,stateid/2,mountainid/2,stateid/2],[length^2,stateid/2,stateid/2,riverid/2,stateid/2],[frac,stateid/2,stateid/2,mountainid/2,stateid/2],[money/time_duration,stateid/2,stateid/2,placeid/2,stateid/2],[count,stateid/2,stateid/2,placeid/2,stateid/2],[date_time,stateid/2,stateid/2,placeid/2,stateid/2],[count/length^2,stateid/2,stateid/2,lakeid/2,stateid/2],[money,stateid/2,stateid/2,cityid/3,stateid/2],[frac,stateid/2,stateid/2,lakeid/2,stateid/2],[date_month,stateid/2,stateid/2,lakeid/2,stateid/2],[name,stateid/2,stateid/2,placeid/2,stateid/2],[date_year,stateid/2,stateid/2,mountainid/2,stateid/2],[date,stateid/2,stateid/2,placeid/2,stateid/2],[date,stateid/2,stateid/2,lakeid/2,stateid/2],[rank,stateid/2,stateid/2,riverid/2,stateid/2],[name,stateid/2,stateid/2,mountainid/2,stateid/2],[date_time,stateid/2,stateid/2,lakeid/2,stateid/2],[count/length^2,stateid/2,stateid/2,cityid/3,stateid/2],[date_time,stateid/2,stateid/2,mountainid/2,stateid/2],[money,stateid/2,stateid/2,mountainid/2,stateid/2],[date_year,stateid/2,stateid/2,placeid/2,stateid/2],[date_month,stateid/2,stateid/2,placeid/2,stateid/2],[date,stateid/2,stateid/2,riverid/2,stateid/2],[date_day,stateid/2,stateid/2,mountainid/2,stateid/2],[rank,stateid/2,stateid/2,placeid/2,stateid/2],[count,stateid/2,stateid/2,lakeid/2,stateid/2],[money/time_duration,stateid/2,stateid/2,cityid/3,stateid/2],[length,stateid/2,stateid/2,mountainid/2,stateid/2],[date_month,stateid/2,stateid/2,riverid/2,stateid/2],[money/time_duration,stateid/2,stateid/2,riverid/2,stateid/2],[name,stateid/2,stateid/2,lakeid/2,stateid/2],[count/length^2,stateid/2,stateid/2,riverid/2,stateid/2],[rank,stateid/2,stateid/2,mountainid/2,stateid/2],[time_duration,stateid/2,stateid/2,lakeid/2,stateid/2],[date,stateid/2,stateid/2,mountainid/2,stateid/2],[time_duration,stateid/2,stateid/2,cityid/3,stateid/2],[length^2,stateid/2,stateid/2,cityid/3,stateid/2],[time_duration,stateid/2,stateid/2,mountainid/2,stateid/2],[time_duration,stateid/2,stateid/2,placeid/2,stateid/2],[count,stateid/2,stateid/2,riverid/2,stateid/2],[money,stateid/2,stateid/2,placeid/2,stateid/2],[name,stateid/2,stateid/2,riverid/2,stateid/2],[money/time_duration,stateid/2,stateid/2,mountainid/2,stateid/2],[date_month,stateid/2,stateid/2,mountainid/2,stateid/2],[date_day,stateid/2,stateid/2,cityid/3,stateid/2]}[4] and {[oxnard_ca:cityid/3],[dayton_oh:cityid/3],[bristol township_pa:cityid/3],[duval circle_dc:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[fayetteville_nc:cityid/3],[orlando_fl:cityid/3],[san angelo_tx:cityid/3],[downey_ca:cityid/3],[greenville_sc:cityid/3],[concord_ca:cityid/3],[richardson_tx:cityid/3],[grand island_ne:cityid/3],[columbia_sc:cityid/3],[waukegan_il:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[lubbock_tx:cityid/3],[lowell_ma:cityid/3],[phoenix_az:cityid/3],[charleston_sc:cityid/3],[largo_fl:cityid/3],[clearwater_fl:cityid/3],[bayonne_nj:cityid/3],[idaho falls_id:cityid/3],[baton rouge_la:cityid/3],[san jose_ca:cityid/3],[salt lake city_ut:cityid/3],[manchester_nh:cityid/3],[amarillo_tx:cityid/3],[georgetown_dc:cityid/3],[vallejo_ca:cityid/3],[grand prairie_tx:cityid/3],[covington_ky:cityid/3],[new york_ny:cityid/3],[concord_nh:cityid/3],[san bernardino_ca:cityid/3],[portsmouth_nh:cityid/3],[warren_mi:cityid/3],[lakewood_oh:cityid/3],[bethesda_md:cityid/3],[louisville_ky:cityid/3],[yonkers_ny:cityid/3],[evanston_il:cityid/3],[fort worth_tx:cityid/3],[omaha_ne:cityid/3],[medford_ma:cityid/3],[san leandro_ca:cityid/3],[lakewood_co:cityid/3],[long beach_ca:cityid/3],[biloxi_ms:cityid/3],[mobile_al:cityid/3],[pueblo_co:cityid/3],[las vegas_nv:cityid/3],[great falls_mt:cityid/3],[boise_id:cityid/3],[richmond_va:cityid/3],[modesto_ca:cityid/3],[boston_ma:cityid/3],[cleveland_oh:cityid/3],[houston_tx:cityid/3],[cheyenne_wy:cityid/3],[richmond_ca:cityid/3],[north charleston_sc:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[madison_wi:cityid/3],[des moines_ia:cityid/3],[bellevue_wa:cityid/3],[reno_nv:cityid/3],[warwick_ri:cityid/3],[schenectady_ny:cityid/3],[sterling heights_mi:cityid/3],[birmingham_al:cityid/3],[norfolk_va:cityid/3],[peoria_il:cityid/3],[santa clara_ca:cityid/3],[newark_nj:cityid/3],[bethlehem_pa:cityid/3],[aurora_co:cityid/3],[utica_ny:cityid/3],[salem_or:cityid/3],[milwaukee_wi:cityid/3],[fort lauderdale_fl:cityid/3],[columbia_mo:cityid/3],[alexandria_va:cityid/3],[springfield_mo:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[livonia_mi:cityid/3],[lawton_ok:cityid/3],[fargo_nd:cityid/3],[citrus heights_ca:cityid/3],[waterford_mi:cityid/3],[independence_mo:cityid/3],[silver spring_md:cityid/3],[waco_tx:cityid/3],[st. louis_mo:cityid/3],[oakland_ca:cityid/3],[worcester_ma:cityid/3],[carson_ca:cityid/3],[bennington_vt:cityid/3],[bristol_ct:cityid/3],[glendale_ca:cityid/3],[indianapolis_in:cityid/3],[wyoming_mi:cityid/3],[rochester_mn:cityid/3],[san diego_ca:cityid/3],[beaumont_tx:cityid/3],[charlotte_nc:cityid/3],[los angeles_ca:cityid/3],[watertown_sd:cityid/3],[oceanside_ca:cityid/3],[bangor_me:cityid/3],[oak lawn_il:cityid/3],[east orange_nj:cityid/3],[oklahoma city_ok:cityid/3],[scranton_pa:cityid/3],[westland_mi:cityid/3],[south gate_ca:cityid/3],[bloomington_mn:cityid/3],[royal oak_mi:cityid/3],[corpus christi_tx:cityid/3],[terre haute_in:cityid/3],[ogden_ut:cityid/3],[longview_tx:cityid/3],[missoula_mt:cityid/3],[anderson_in:cityid/3],[springfield_oh:cityid/3],[tulsa_ok:cityid/3],[san francisco_ca:cityid/3],[waterloo_ia:cityid/3],[troy_mi:cityid/3],[riverside_ca:cityid/3],[rockford_il:cityid/3],[somerville_ma:cityid/3],[lynn_ma:cityid/3],[minneapolis_mn:cityid/3],[quincy_ma:cityid/3],[cicero_il:cityid/3],[fresno_ca:cityid/3],[jackson_ms:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[huntington_wv:cityid/3],[norwalk_ct:cityid/3],[bridgeport_ct:cityid/3],[ontario_ca:cityid/3],[arlington_tx:cityid/3],[alhambra_ca:cityid/3],[lorain_oh:cityid/3],[penn hills_pa:cityid/3],[macon_ga:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[memphis_tn:cityid/3],[billings_mt:cityid/3],[dearborn heights_mi:cityid/3],[wilmington_de:cityid/3],[hayward_ca:cityid/3],[irving_tx:cityid/3],[scottsdale_az:cityid/3],[cedar rapids_ia:cityid/3],[santa monica_ca:cityid/3],[kettering_oh:cityid/3],[santa rosa_ca:cityid/3],[rapid city_sd:cityid/3],[gainesville_fl:cityid/3],[hattiesburg_ms:cityid/3],[gary_in:cityid/3],[kendall_fl:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[sitka_ak:cityid/3],[arvada_co:cityid/3],[brownsville_tx:cityid/3],[sioux falls_sd:cityid/3],[flint_mi:cityid/3],[anchorage_ak:cityid/3],[kalamazoo_mi:cityid/3],[south bend_in:cityid/3],[clifton_nj:cityid/3],[chula vista_ca:cityid/3],[euclid_oh:cityid/3],[redondo beach_ca:cityid/3],[chattanooga_tn:cityid/3],[nashville_tn:cityid/3],[hartford_ct:cityid/3],[springfield_or:cityid/3],[washington_dc:cityid/3],[mesquite_tx:cityid/3],[clinton_mi:cityid/3],[burbank_ca:cityid/3],[farmington hills_mi:cityid/3],[middletown_nj:cityid/3],[las cruces_nm:cityid/3],[pasadena_tx:cityid/3],[little rock_ar:cityid/3],[pine bluff_ar:cityid/3],[racine_wi:cityid/3],[lexington_ky:cityid/3],[youngstown_oh:cityid/3],[tampa_fl:cityid/3],[austin_tx:cityid/3],[new orleans_la:cityid/3],[juneau_ak:cityid/3],[huntsville_al:cityid/3],[cheektowaga_ny:cityid/3],[framingham_ma:cityid/3],[cincinnati_oh:cityid/3],[providence_ri:cityid/3],[monroe_la:cityid/3],[tallahassee_fl:cityid/3],[lewiston_me:cityid/3],[kansas city_ks:cityid/3],[champaign_il:cityid/3],[tuscaloosa_al:cityid/3],[boulder_co:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[minot_nd:cityid/3],[woodbridge_nj:cityid/3],[reading_pa:cityid/3],[newport news_va:cityid/3],[wichita falls_tx:cityid/3],[fort smith_ar:cityid/3],[miami_fl:cityid/3],[danbury_ct:cityid/3],[lincoln_ne:cityid/3],[mount vernon_ny:cityid/3],[rock springs_wy:cityid/3],[fort collins_co:cityid/3],[ann arbor_mi:cityid/3],[waltham_ma:cityid/3],[bismarck_nd:cityid/3],[santa fe_nm:cityid/3],[akron_oh:cityid/3],[nashua_nh:cityid/3],[buffalo_ny:cityid/3],[alameda_ca:cityid/3],[stamford_ct:cityid/3],[arlington heights_il:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[laredo_tx:cityid/3],[high point_nc:cityid/3],[albuquerque_nm:cityid/3],[springfield_ma:cityid/3],[dubuque_ia:cityid/3],[auburn_me:cityid/3],[sunnyvale_ca:cityid/3],[charleston_wv:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[sacramento_ca:cityid/3],[dundalk_md:cityid/3],[meriden_ct:cityid/3],[tenleytown_dc:cityid/3],[ewa_hi:cityid/3],[mesa_az:cityid/3],[west allis_wi:cityid/3],[st. paul_mn:cityid/3],[lynchburg_va:cityid/3],[west hartford_ct:cityid/3],[southfield_mi:cityid/3],[paterson_nj:cityid/3],[st. petersburg_fl:cityid/3],[tucson_az:cityid/3],[el paso_tx:cityid/3],[seattle_wa:cityid/3],[altoona_pa:cityid/3],[lansing_mi:cityid/3],[sparks_nv:cityid/3],[rutland_vt:cityid/3],[hollywood_fl:cityid/3],[st. clair shores_mi:cityid/3],[mcallen_tx:cityid/3],[newark_de:cityid/3],[meridian_ms:cityid/3],[pocatello_id:cityid/3],[abilene_tx:cityid/3],[grand forks_nd:cityid/3],[ventura_ca:cityid/3],[new bedford_ma:cityid/3],[tempe_az:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[pensacola_fl:cityid/3],[lewiston_id:cityid/3],[duluth_mn:cityid/3],[greenwich_ct:cityid/3],[skokie_il:cityid/3],[elyria_oh:cityid/3],[sioux city_ia:cityid/3],[bakersfield_ca:cityid/3],[niagara falls_ny:cityid/3],[thousand oaks_ca:cityid/3],[cranston_ri:cityid/3],[evansville_in:cityid/3],[columbus_ga:cityid/3],[trenton_nj:cityid/3],[redford_mi:cityid/3],[kenosha_wi:cityid/3],[durham_nc:cityid/3],[fremont_ca:cityid/3],[camden_nj:cityid/3],[miami beach_fl:cityid/3],[columbus_oh:cityid/3],[odessa_tx:cityid/3],[appleton_wi:cityid/3],[wichita_ks:cityid/3],[muncie_in:cityid/3],[overland park_ks:cityid/3],[anaheim_ca:cityid/3],[fort wayne_in:cityid/3],[honolulu_hi:cityid/3],[aberdeen_sd:cityid/3],[atlanta_ga:cityid/3],[butte_mt:cityid/3],[jersey city_nj:cityid/3],[montgomery_al:cityid/3],[green bay_wi:cityid/3],[topeka_ks:cityid/3],[edison_nj:cityid/3],[grand rapids_mi:cityid/3],[jacksonville_fl:cityid/3],[dallas_tx:cityid/3],[waterbury_ct:cityid/3],[hampton_va:cityid/3],[west valley_ut:cityid/3],[roswell_nm:cityid/3],[north platte_ne:cityid/3],[st. joseph_mo:cityid/3],[chicago_il:cityid/3],[savannah_ga:cityid/3],[torrance_ca:cityid/3],[colorado springs_co:cityid/3],[denver_co:cityid/3],[lakewood_ca:cityid/3],[owensboro_ky:cityid/3],[casper_wy:cityid/3],[hammond_in:cityid/3],[virginia beach_va:cityid/3],[baltimore_md:cityid/3],[laramie_wy:cityid/3],[irvington_nj:cityid/3],[abingdon_pa:cityid/3],[eugene_or:cityid/3],[joliet_il:cityid/3],[simi valley_ca:cityid/3],[knoxville_tn:cityid/3],[wheeling_wv:cityid/3],[west palm beach_fl:cityid/3],[dearborn_mi:cityid/3],[cherry hill_nj:cityid/3],[santa ana_ca:cityid/3],[new haven_ct:cityid/3],[lawrence_ma:cityid/3],[chesapeake_va:cityid/3],[springfield_il:cityid/3],[sunrise manor_nv:cityid/3],[erie_pa:cityid/3],[compton_ca:cityid/3],[levittown_ny:cityid/3],[aurora_il:cityid/3],[metairie_la:cityid/3],[detroit_mi:cityid/3],[dover_de:cityid/3],[albany_ny:cityid/3],[elizabeth_nj:cityid/3],[pontiac_mi:cityid/3],[philadelphia_pa:cityid/3],[whittier_ca:cityid/3],[decatur_il:cityid/3],[pawtucket_ri:cityid/3],[koolaupoko_hi:cityid/3],[north little rock_ar:cityid/3],[essex_vt:cityid/3],[portland_or:cityid/3],[lake charles_la:cityid/3],[fullerton_ca:cityid/3],[davenport_ia:cityid/3],[kansas city_mo:cityid/3],[fall river_ma:cityid/3],[brockton_ma:cityid/3],[midland_tx:cityid/3],[new rochelle_ny:cityid/3],[lafayette_la:cityid/3],[greensboro_nc:cityid/3],[tacoma_wa:cityid/3],[parma_oh:cityid/3],[allentown_pa:cityid/3],[provo_ut:cityid/3],[upper darby_pa:cityid/3],[spokane_wa:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[roanoke_va:cityid/3],[arlington_va:cityid/3],[pasadena_ca:cityid/3],[port arthur_tx:cityid/3],[brookside_de:cityid/3],[newton_ma:cityid/3],[glendale_az:cityid/3],[san antonio_tx:cityid/3],[syracuse_ny:cityid/3],[tyler_tx:cityid/3],[rochester_ny:cityid/3],[new britain_ct:cityid/3],[escondido_ca:cityid/3],[toledo_oh:cityid/3],[elgin_il:cityid/3],[cambridge_ma:cityid/3],[lower merion_pa:cityid/3],[irondequoit_ny:cityid/3],[norman_ok:cityid/3],[pittsburgh_pa:cityid/3],[portland_me:cityid/3],[wahiawa_hi:cityid/3],[shreveport_la:cityid/3],[burlington_vt:cityid/3],[taylor_mi:cityid/3],[albany_ga:cityid/3],[hamilton_oh:cityid/3],[huntington beach_ca:cityid/3],[saginaw_mi:cityid/3],[fairbanks_ak:cityid/3],[kenner_la:cityid/3],[parkersburg_wv:cityid/3],[canton_oh:cityid/3]}:{[cityid/3]}[0] => {}:error]} | answer(A,largest(B,(state(A),city(A),loc(B,C),const(C,stateid(hawaii)))))
        Example tmpe6f2k58p.dlog:641: query => {[oxnard_ca:cityid/3],[dayton_oh:cityid/3],[bristol township_pa:cityid/3],[duval circle_dc:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[fayetteville_nc:cityid/3],[orlando_fl:cityid/3],[san angelo_tx:cityid/3],[downey_ca:cityid/3],[greenville_sc:cityid/3],[concord_ca:cityid/3],[richardson_tx:cityid/3],[grand island_ne:cityid/3],[columbia_sc:cityid/3],[waukegan_il:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[lubbock_tx:cityid/3],[lowell_ma:cityid/3],[phoenix_az:cityid/3],[charleston_sc:cityid/3],[largo_fl:cityid/3],[clearwater_fl:cityid/3],[bayonne_nj:cityid/3],[idaho falls_id:cityid/3],[baton rouge_la:cityid/3],[san jose_ca:cityid/3],[salt lake city_ut:cityid/3],[manchester_nh:cityid/3],[amarillo_tx:cityid/3],[georgetown_dc:cityid/3],[vallejo_ca:cityid/3],[grand prairie_tx:cityid/3],[covington_ky:cityid/3],[new york_ny:cityid/3],[concord_nh:cityid/3],[san bernardino_ca:cityid/3],[portsmouth_nh:cityid/3],[warren_mi:cityid/3],[lakewood_oh:cityid/3],[bethesda_md:cityid/3],[louisville_ky:cityid/3],[yonkers_ny:cityid/3],[evanston_il:cityid/3],[fort worth_tx:cityid/3],[omaha_ne:cityid/3],[medford_ma:cityid/3],[san leandro_ca:cityid/3],[lakewood_co:cityid/3],[long beach_ca:cityid/3],[biloxi_ms:cityid/3],[mobile_al:cityid/3],[pueblo_co:cityid/3],[las vegas_nv:cityid/3],[great falls_mt:cityid/3],[boise_id:cityid/3],[richmond_va:cityid/3],[modesto_ca:cityid/3],[boston_ma:cityid/3],[cleveland_oh:cityid/3],[houston_tx:cityid/3],[cheyenne_wy:cityid/3],[richmond_ca:cityid/3],[north charleston_sc:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[madison_wi:cityid/3],[des moines_ia:cityid/3],[bellevue_wa:cityid/3],[reno_nv:cityid/3],[warwick_ri:cityid/3],[schenectady_ny:cityid/3],[sterling heights_mi:cityid/3],[birmingham_al:cityid/3],[norfolk_va:cityid/3],[peoria_il:cityid/3],[santa clara_ca:cityid/3],[newark_nj:cityid/3],[bethlehem_pa:cityid/3],[aurora_co:cityid/3],[utica_ny:cityid/3],[salem_or:cityid/3],[milwaukee_wi:cityid/3],[fort lauderdale_fl:cityid/3],[columbia_mo:cityid/3],[alexandria_va:cityid/3],[springfield_mo:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[livonia_mi:cityid/3],[lawton_ok:cityid/3],[fargo_nd:cityid/3],[citrus heights_ca:cityid/3],[waterford_mi:cityid/3],[independence_mo:cityid/3],[silver spring_md:cityid/3],[waco_tx:cityid/3],[st. louis_mo:cityid/3],[oakland_ca:cityid/3],[worcester_ma:cityid/3],[carson_ca:cityid/3],[bennington_vt:cityid/3],[bristol_ct:cityid/3],[glendale_ca:cityid/3],[indianapolis_in:cityid/3],[wyoming_mi:cityid/3],[rochester_mn:cityid/3],[san diego_ca:cityid/3],[beaumont_tx:cityid/3],[charlotte_nc:cityid/3],[los angeles_ca:cityid/3],[watertown_sd:cityid/3],[oceanside_ca:cityid/3],[bangor_me:cityid/3],[oak lawn_il:cityid/3],[east orange_nj:cityid/3],[oklahoma city_ok:cityid/3],[scranton_pa:cityid/3],[westland_mi:cityid/3],[south gate_ca:cityid/3],[bloomington_mn:cityid/3],[royal oak_mi:cityid/3],[corpus christi_tx:cityid/3],[terre haute_in:cityid/3],[ogden_ut:cityid/3],[longview_tx:cityid/3],[missoula_mt:cityid/3],[anderson_in:cityid/3],[springfield_oh:cityid/3],[tulsa_ok:cityid/3],[san francisco_ca:cityid/3],[waterloo_ia:cityid/3],[troy_mi:cityid/3],[riverside_ca:cityid/3],[rockford_il:cityid/3],[somerville_ma:cityid/3],[lynn_ma:cityid/3],[minneapolis_mn:cityid/3],[quincy_ma:cityid/3],[cicero_il:cityid/3],[fresno_ca:cityid/3],[jackson_ms:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[huntington_wv:cityid/3],[norwalk_ct:cityid/3],[bridgeport_ct:cityid/3],[ontario_ca:cityid/3],[arlington_tx:cityid/3],[alhambra_ca:cityid/3],[lorain_oh:cityid/3],[penn hills_pa:cityid/3],[macon_ga:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[memphis_tn:cityid/3],[billings_mt:cityid/3],[dearborn heights_mi:cityid/3],[wilmington_de:cityid/3],[hayward_ca:cityid/3],[irving_tx:cityid/3],[scottsdale_az:cityid/3],[cedar rapids_ia:cityid/3],[santa monica_ca:cityid/3],[kettering_oh:cityid/3],[santa rosa_ca:cityid/3],[rapid city_sd:cityid/3],[gainesville_fl:cityid/3],[hattiesburg_ms:cityid/3],[gary_in:cityid/3],[kendall_fl:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[sitka_ak:cityid/3],[arvada_co:cityid/3],[brownsville_tx:cityid/3],[sioux falls_sd:cityid/3],[flint_mi:cityid/3],[anchorage_ak:cityid/3],[kalamazoo_mi:cityid/3],[south bend_in:cityid/3],[clifton_nj:cityid/3],[chula vista_ca:cityid/3],[euclid_oh:cityid/3],[redondo beach_ca:cityid/3],[chattanooga_tn:cityid/3],[nashville_tn:cityid/3],[hartford_ct:cityid/3],[springfield_or:cityid/3],[washington_dc:cityid/3],[mesquite_tx:cityid/3],[clinton_mi:cityid/3],[burbank_ca:cityid/3],[farmington hills_mi:cityid/3],[middletown_nj:cityid/3],[las cruces_nm:cityid/3],[pasadena_tx:cityid/3],[little rock_ar:cityid/3],[pine bluff_ar:cityid/3],[racine_wi:cityid/3],[lexington_ky:cityid/3],[youngstown_oh:cityid/3],[tampa_fl:cityid/3],[austin_tx:cityid/3],[new orleans_la:cityid/3],[juneau_ak:cityid/3],[huntsville_al:cityid/3],[cheektowaga_ny:cityid/3],[framingham_ma:cityid/3],[cincinnati_oh:cityid/3],[providence_ri:cityid/3],[monroe_la:cityid/3],[tallahassee_fl:cityid/3],[lewiston_me:cityid/3],[kansas city_ks:cityid/3],[champaign_il:cityid/3],[tuscaloosa_al:cityid/3],[boulder_co:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[minot_nd:cityid/3],[woodbridge_nj:cityid/3],[reading_pa:cityid/3],[newport news_va:cityid/3],[wichita falls_tx:cityid/3],[fort smith_ar:cityid/3],[miami_fl:cityid/3],[danbury_ct:cityid/3],[lincoln_ne:cityid/3],[mount vernon_ny:cityid/3],[rock springs_wy:cityid/3],[fort collins_co:cityid/3],[ann arbor_mi:cityid/3],[waltham_ma:cityid/3],[bismarck_nd:cityid/3],[santa fe_nm:cityid/3],[akron_oh:cityid/3],[nashua_nh:cityid/3],[buffalo_ny:cityid/3],[alameda_ca:cityid/3],[stamford_ct:cityid/3],[arlington heights_il:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[laredo_tx:cityid/3],[high point_nc:cityid/3],[albuquerque_nm:cityid/3],[springfield_ma:cityid/3],[dubuque_ia:cityid/3],[auburn_me:cityid/3],[sunnyvale_ca:cityid/3],[charleston_wv:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[sacramento_ca:cityid/3],[dundalk_md:cityid/3],[meriden_ct:cityid/3],[tenleytown_dc:cityid/3],[ewa_hi:cityid/3],[mesa_az:cityid/3],[west allis_wi:cityid/3],[st. paul_mn:cityid/3],[lynchburg_va:cityid/3],[west hartford_ct:cityid/3],[southfield_mi:cityid/3],[paterson_nj:cityid/3],[st. petersburg_fl:cityid/3],[tucson_az:cityid/3],[el paso_tx:cityid/3],[seattle_wa:cityid/3],[altoona_pa:cityid/3],[lansing_mi:cityid/3],[sparks_nv:cityid/3],[rutland_vt:cityid/3],[hollywood_fl:cityid/3],[st. clair shores_mi:cityid/3],[mcallen_tx:cityid/3],[newark_de:cityid/3],[meridian_ms:cityid/3],[pocatello_id:cityid/3],[abilene_tx:cityid/3],[grand forks_nd:cityid/3],[ventura_ca:cityid/3],[new bedford_ma:cityid/3],[tempe_az:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[pensacola_fl:cityid/3],[lewiston_id:cityid/3],[duluth_mn:cityid/3],[greenwich_ct:cityid/3],[skokie_il:cityid/3],[elyria_oh:cityid/3],[sioux city_ia:cityid/3],[bakersfield_ca:cityid/3],[niagara falls_ny:cityid/3],[thousand oaks_ca:cityid/3],[cranston_ri:cityid/3],[evansville_in:cityid/3],[columbus_ga:cityid/3],[trenton_nj:cityid/3],[redford_mi:cityid/3],[kenosha_wi:cityid/3],[durham_nc:cityid/3],[fremont_ca:cityid/3],[camden_nj:cityid/3],[miami beach_fl:cityid/3],[columbus_oh:cityid/3],[odessa_tx:cityid/3],[appleton_wi:cityid/3],[wichita_ks:cityid/3],[muncie_in:cityid/3],[overland park_ks:cityid/3],[anaheim_ca:cityid/3],[fort wayne_in:cityid/3],[honolulu_hi:cityid/3],[aberdeen_sd:cityid/3],[atlanta_ga:cityid/3],[butte_mt:cityid/3],[jersey city_nj:cityid/3],[montgomery_al:cityid/3],[green bay_wi:cityid/3],[topeka_ks:cityid/3],[edison_nj:cityid/3],[grand rapids_mi:cityid/3],[jacksonville_fl:cityid/3],[dallas_tx:cityid/3],[waterbury_ct:cityid/3],[hampton_va:cityid/3],[west valley_ut:cityid/3],[roswell_nm:cityid/3],[north platte_ne:cityid/3],[st. joseph_mo:cityid/3],[chicago_il:cityid/3],[savannah_ga:cityid/3],[torrance_ca:cityid/3],[colorado springs_co:cityid/3],[denver_co:cityid/3],[lakewood_ca:cityid/3],[owensboro_ky:cityid/3],[casper_wy:cityid/3],[hammond_in:cityid/3],[virginia beach_va:cityid/3],[baltimore_md:cityid/3],[laramie_wy:cityid/3],[irvington_nj:cityid/3],[abingdon_pa:cityid/3],[eugene_or:cityid/3],[joliet_il:cityid/3],[simi valley_ca:cityid/3],[knoxville_tn:cityid/3],[wheeling_wv:cityid/3],[west palm beach_fl:cityid/3],[dearborn_mi:cityid/3],[cherry hill_nj:cityid/3],[santa ana_ca:cityid/3],[new haven_ct:cityid/3],[lawrence_ma:cityid/3],[chesapeake_va:cityid/3],[springfield_il:cityid/3],[sunrise manor_nv:cityid/3],[erie_pa:cityid/3],[compton_ca:cityid/3],[levittown_ny:cityid/3],[aurora_il:cityid/3],[metairie_la:cityid/3],[detroit_mi:cityid/3],[dover_de:cityid/3],[albany_ny:cityid/3],[elizabeth_nj:cityid/3],[pontiac_mi:cityid/3],[philadelphia_pa:cityid/3],[whittier_ca:cityid/3],[decatur_il:cityid/3],[pawtucket_ri:cityid/3],[koolaupoko_hi:cityid/3],[north little rock_ar:cityid/3],[essex_vt:cityid/3],[portland_or:cityid/3],[lake charles_la:cityid/3],[fullerton_ca:cityid/3],[davenport_ia:cityid/3],[kansas city_mo:cityid/3],[fall river_ma:cityid/3],[brockton_ma:cityid/3],[midland_tx:cityid/3],[new rochelle_ny:cityid/3],[lafayette_la:cityid/3],[greensboro_nc:cityid/3],[tacoma_wa:cityid/3],[parma_oh:cityid/3],[allentown_pa:cityid/3],[provo_ut:cityid/3],[upper darby_pa:cityid/3],[spokane_wa:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[roanoke_va:cityid/3],[arlington_va:cityid/3],[pasadena_ca:cityid/3],[port arthur_tx:cityid/3],[brookside_de:cityid/3],[newton_ma:cityid/3],[glendale_az:cityid/3],[san antonio_tx:cityid/3],[syracuse_ny:cityid/3],[tyler_tx:cityid/3],[rochester_ny:cityid/3],[new britain_ct:cityid/3],[escondido_ca:cityid/3],[toledo_oh:cityid/3],[elgin_il:cityid/3],[cambridge_ma:cityid/3],[lower merion_pa:cityid/3],[irondequoit_ny:cityid/3],[norman_ok:cityid/3],[pittsburgh_pa:cityid/3],[portland_me:cityid/3],[wahiawa_hi:cityid/3],[shreveport_la:cityid/3],[burlington_vt:cityid/3],[taylor_mi:cityid/3],[albany_ga:cityid/3],[hamilton_oh:cityid/3],[huntington beach_ca:cityid/3],[saginaw_mi:cityid/3],[fairbanks_ak:cityid/3],[kenner_la:cityid/3],[parkersburg_wv:cityid/3],[canton_oh:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,countryid(usa))))
        Example tmpe6f2k58p.dlog:642: query => {[cheyenne_wy:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(wyoming))))
        Example tmpe6f2k58p.dlog:643: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:644: query => {[cheyenne_wy:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(wyoming))))
        Example tmpe6f2k58p.dlog:645: query => {[2.06e-05count/length^2]} | answer(A,(density(B,A),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:646: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),loc(B,A),city(B),loc(B,A)))
        Example tmpe6f2k58p.dlog:647: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:649: query => {[23670000count]} | answer(A,(population(B,A),const(B,stateid(california))))
        Example tmpe6f2k58p.dlog:650: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmpe6f2k58p.dlog:651: query => {[678974count]} | answer(A,(population(B,A),const(B,cityid('san francisco',_))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:652: query => {[oxnard_ca:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[downey_ca:cityid/3],[concord_ca:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[vallejo_ca:cityid/3],[san bernardino_ca:cityid/3],[san leandro_ca:cityid/3],[modesto_ca:cityid/3],[richmond_ca:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[santa clara_ca:cityid/3],[salton sea:lakeid/2],[citrus heights_ca:cityid/3],[carson_ca:cityid/3],[glendale_ca:cityid/3],[oceanside_ca:cityid/3],[south gate_ca:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[ontario_ca:cityid/3],[alhambra_ca:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[hayward_ca:cityid/3],[santa monica_ca:cityid/3],[santa rosa_ca:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[chula vista_ca:cityid/3],[redondo beach_ca:cityid/3],[tahoe:lakeid/2],[burbank_ca:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[alameda_ca:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[sunnyvale_ca:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[ventura_ca:cityid/3],[bakersfield_ca:cityid/3],[thousand oaks_ca:cityid/3],[fremont_ca:cityid/3],[torrance_ca:cityid/3],[lakewood_ca:cityid/3],[simi valley_ca:cityid/3],[compton_ca:cityid/3],[whittier_ca:cityid/3],[fullerton_ca:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[pasadena_ca:cityid/3],[escondido_ca:cityid/3]} | answer(A,(major(A),loc(A,B),const(B,stateid(california))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:653: query => {[170876count]} | answer(A,(population(B,A),const(B,cityid(riverside,_))))
        Example tmpe6f2k58p.dlog:654: query => {[492365count]} | answer(A,(population(B,A),const(B,cityid(denver,_))))
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:656: query => {[492365count]} | answer(A,(population(B,A),const(B,cityid(denver,_))))
        Example tmpe6f2k58p.dlog:657: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),loc(B,A),capital(B),loc(B,A)))
        Example tmpe6f2k58p.dlog:658: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[lubbock_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[fort worth_tx:cityid/3],[houston_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[corpus christi_tx:cityid/3],[longview_tx:cityid/3],[arlington_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[austin_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[el paso_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[dallas_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[san antonio_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:659: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmpe6f2k58p.dlog:660: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B))))
        Example tmpe6f2k58p.dlog:661: query => {[4.09e+11length^2]} | answer(A,(area(B,A),const(B,stateid(california))))
        Example tmpe6f2k58p.dlog:662: query => {[south platte:riverid/2],[arkansas:riverid/2],[colorado:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[republican:riverid/2],[north platte:riverid/2],[green:riverid/2],[san juan:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(colorado))))
        Example tmpe6f2k58p.dlog:663: query => {[massachusetts:stateid/2],[oregon:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[ohio:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,cityid(springfield,_))))
        Example tmpe6f2k58p.dlog:664: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:665: query => {[492365count]} | answer(A,(population(B,A),const(B,cityid(denver,_))))
        Example tmpe6f2k58p.dlog:666: query => {[786700count]} | answer(A,(population(B,A),const(B,stateid(montana))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:667: query => {[493846count]} | answer(A,(population(B,A),const(B,cityid(seattle,_))))
        Example tmpe6f2k58p.dlog:668: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:670: query => {[Join failed syntactically: {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] and {[michigan:stateid/2,9262000count],[colorado springs_co:cityid/3,215150count],[skokie_il:cityid/3,60278count],[pontiac_mi:cityid/3,76715count],[wyoming_mi:cityid/3,59616count],[clearwater_fl:cityid/3,85450count],[lake charles_la:cityid/3,75051count],[idaho:stateid/2,944000count],[koolaupoko_hi:cityid/3,109373count],[spokane_wa:cityid/3,171300count],[minnesota:stateid/2,4076000count],[sioux city_ia:cityid/3,82003count],[indianapolis_in:cityid/3,700807count],[san diego_ca:cityid/3,875538count],[wisconsin:stateid/2,4700000count],[irvine_ca:cityid/3,62134count],[grand prairie_tx:cityid/3,71462count],[waterloo_ia:cityid/3,75985count],[jackson_ms:cityid/3,202895count],[kenosha_wi:cityid/3,77685count],[inglewood_ca:cityid/3,94162count],[alhambra_ca:cityid/3,64767count],[lawton_ok:cityid/3,80054count],[greenwich_ct:cityid/3,59578count],[decatur_il:cityid/3,93939count],[hampton_va:cityid/3,122617count],[garland_tx:cityid/3,138857count],[redford_mi:cityid/3,58441count],[newport beach_ca:cityid/3,63475count],[evanston_il:cityid/3,73706count],[honolulu_hi:cityid/3,762874count],[huntington_wv:cityid/3,63684count],[montana:stateid/2,786700count],[new rochelle_ny:cityid/3,70794count],[cranston_ri:cityid/3,71992count],[chicago_il:cityid/3,3005172count],[independence_mo:cityid/3,111797count],[berkeley_ca:cityid/3,103328count],[santa ana_ca:cityid/3,203713count],[salinas_ca:cityid/3,80479count],[bridgeport_ct:cityid/3,142546count],[tallahassee_fl:cityid/3,81548count],[syracuse_ny:cityid/3,170105count],[bellevue_wa:cityid/3,73903count],[oxnard_ca:cityid/3,108195count],[st. clair shores_mi:cityid/3,76210count],[virginia:stateid/2,5346800count],[west covina_ca:cityid/3,80292count],[gary_in:cityid/3,151968count],[simi valley_ca:cityid/3,77500count],[anaheim_ca:cityid/3,219311count],[arlington_tx:cityid/3,160123count],[bayonne_nj:cityid/3,65047count],[compton_ca:cityid/3,81230count],[oceanside_ca:cityid/3,76698count],[maryland:stateid/2,4217000count],[wichita falls_tx:cityid/3,94201count],[kansas city_ks:cityid/3,161148count],[north carolina:stateid/2,5882000count],[iowa:stateid/2,2913000count],[chula vista_ca:cityid/3,83927count],[rockford_il:cityid/3,139712count],[overland park_ks:cityid/3,81784count],[bristol_ct:cityid/3,57370count],[cherry hill_nj:cityid/3,68785count],[terre haute_in:cityid/3,61125count],[fullerton_ca:cityid/3,102246count],[wichita_ks:cityid/3,279212count],[waterbury_ct:cityid/3,103266count],[tulsa_ok:cityid/3,360919count],[midland_tx:cityid/3,70525count],[riverside_ca:cityid/3,170876count],[brockton_ma:cityid/3,95172count],[erie_pa:cityid/3,119123count],[newton_ma:cityid/3,83622count],[lynchburg_va:cityid/3,66743count],[euclid_oh:cityid/3,59999count],[camden_nj:cityid/3,84910count],[orange_ca:cityid/3,91450count],[norman_ok:cityid/3,68020count],[stamford_ct:cityid/3,102466count],[elgin_il:cityid/3,63668count],[utica_ny:cityid/3,75632count],[ontario_ca:cityid/3,88820count],[los angeles_ca:cityid/3,2966850count],[salt lake city_ut:cityid/3,163034count],[hollywood_fl:cityid/3,117188count],[albany_ny:cityid/3,101727count],[redondo beach_ca:cityid/3,57102count],[san bernardino_ca:cityid/3,118794count],[providence_ri:cityid/3,156804count],[south bend_in:cityid/3,109727count],[texas:stateid/2,14229000count],[fairfield_ca:cityid/3,58099count],[little rock_ar:cityid/3,158915count],[lawrence_ma:cityid/3,63175count],[bristol township_pa:cityid/3,58733count],[champaign_il:cityid/3,58267count],[lynn_ma:cityid/3,78471count],[santa monica_ca:cityid/3,88314count],[massachusetts:stateid/2,5737000count],[columbus_oh:cityid/3,564871count],[altoona_pa:cityid/3,57078count],[silver spring_md:cityid/3,72893count],[charleston_sc:cityid/3,69855count],[oklahoma city_ok:cityid/3,403213count],[new hampshire:stateid/2,920600count],[waltham_ma:cityid/3,58200count],[columbus_ga:cityid/3,169441count],[lakewood_ca:cityid/3,74654count],[houston_tx:cityid/3,1595138count],[westminster_ca:cityid/3,71133count],[beaumont_tx:cityid/3,118102count],[boise_id:cityid/3,102249count],[dayton_oh:cityid/3,203371count],[meriden_ct:cityid/3,57118count],[tucson_az:cityid/3,330537count],[long beach_ca:cityid/3,361334count],[vermont:stateid/2,511500count],[charleston_wv:cityid/3,63968count],[abilene_tx:cityid/3,98315count],[plano_tx:cityid/3,72331count],[wilmington_de:cityid/3,70195count],[memphis_tn:cityid/3,646356count],[flint_mi:cityid/3,159611count],[metairie_la:cityid/3,164160count],[odessa_tx:cityid/3,90027count],[bethesda_md:cityid/3,63022count],[muncie_in:cityid/3,77216count],[dearborn_mi:cityid/3,90660count],[trenton_nj:cityid/3,92124count],[clinton_mi:cityid/3,72400count],[chesapeake_va:cityid/3,114226count],[alameda_ca:cityid/3,63852count],[rochester_ny:cityid/3,241741count],[cleveland_oh:cityid/3,573822count],[austin_tx:cityid/3,345496count],[modesto_ca:cityid/3,106963count],[new haven_ct:cityid/3,126089count],[tacoma_wa:cityid/3,158501count],[anderson_in:cityid/3,64695count],[lakewood_oh:cityid/3,61963count],[fort collins_co:cityid/3,64632count],[farmington hills_mi:cityid/3,58056count],[clifton_nj:cityid/3,74388count],[pawtucket_ri:cityid/3,71204count],[cambridge_ma:cityid/3,95322count],[taylor_mi:cityid/3,77568count],[san jose_ca:cityid/3,629442count],[glendale_ca:cityid/3,139060count],[warwick_ri:cityid/3,87123count],[laredo_tx:cityid/3,91449count],[seattle_wa:cityid/3,493846count],[west valley_ut:cityid/3,72299count],[omaha_ne:cityid/3,314255count],[miami beach_fl:cityid/3,96298count],[reno_nv:cityid/3,100756count],[lincoln_ne:cityid/3,171932count],[dallas_tx:cityid/3,904078count],[tampa_fl:cityid/3,271523count],[chattanooga_tn:cityid/3,169728count],[waco_tx:cityid/3,101261count],[baltimore_md:cityid/3,786775count],[dubuque_ia:cityid/3,62321count],[ventura_ca:cityid/3,73774count],[st. paul_mn:cityid/3,270230count],[buffalo_ny:cityid/3,357870count],[green bay_wi:cityid/3,87899count],[lowell_ma:cityid/3,92418count],[atlanta_ga:cityid/3,425022count],[st. joseph_mo:cityid/3,76691count],[fort worth_tx:cityid/3,385164count],[sterling heights_mi:cityid/3,108999count],[salem_or:cityid/3,89233count],[huntsville_al:cityid/3,142513count],[middletown_nj:cityid/3,61615count],[allentown_pa:cityid/3,103758count],[san mateo_ca:cityid/3,77640count],[south gate_ca:cityid/3,66784count],[citrus heights_ca:cityid/3,85911count],[washington_dc:cityid/3,638333count],[north dakota:stateid/2,652700count],[usa:countryid/2,307890000count],[kalamazoo_mi:cityid/3,79722count],[newark_nj:cityid/3,329248count],[knoxville_tn:cityid/3,175030count],[pomona_ca:cityid/3,92742count],[east los angeles_ca:cityid/3,110017count],[detroit_mi:cityid/3,1203339count],[richmond_ca:cityid/3,74676count],[fayetteville_nc:cityid/3,59507count],[norfolk_va:cityid/3,266979count],[irving_tx:cityid/3,109943count],[danbury_ct:cityid/3,60470count],[mobile_al:cityid/3,200452count],[irvington_nj:cityid/3,61493count],[orlando_fl:cityid/3,128394count],[kenner_la:cityid/3,66382count],[westland_mi:cityid/3,84603count],[winston-salem_nc:cityid/3,131885count],[fort lauderdale_fl:cityid/3,153256count],[milwaukee_wi:cityid/3,636212count],[scranton_pa:cityid/3,88117count],[anchorage_ak:cityid/3,174431count],[rochester_mn:cityid/3,57906count],[illinois:stateid/2,11400000count],[hammond_in:cityid/3,93714count],[ogden_ut:cityid/3,64407count],[abingdon_pa:cityid/3,59084count],[madison_wi:cityid/3,170616count],[hamilton_oh:cityid/3,63189count],[sioux falls_sd:cityid/3,81343count],[vallejo_ca:cityid/3,80188count],[burbank_ca:cityid/3,84625count],[santa rosa_ca:cityid/3,83205count],[lexington_ky:cityid/3,204165count],[shreveport_la:cityid/3,205820count],[birmingham_al:cityid/3,284413count],[dearborn heights_mi:cityid/3,67706count],[billings_mt:cityid/3,66842count],[arizona:stateid/2,2718000count],[mesa_az:cityid/3,152453count],[el cajon_ca:cityid/3,73892count],[corpus christi_tx:cityid/3,231999count],[pasadena_ca:cityid/3,118072count],[canton_oh:cityid/3,93077count],[mount vernon_ny:cityid/3,66713count],[reading_pa:cityid/3,78686count],[bloomington_mn:cityid/3,81831count],[levittown_ny:cityid/3,57045count],[kendall_fl:cityid/3,73758count],[manchester_nh:cityid/3,90936count],[ann arbor_mi:cityid/3,107969count],[livonia_mi:cityid/3,104814count],[cicero_il:cityid/3,61232count],[el monte_ca:cityid/3,79494count],[kansas city_mo:cityid/3,448159count],[indiana:stateid/2,5490000count],[cincinnati_oh:cityid/3,385457count],[waukegan_il:cityid/3,67653count],[west virginia:stateid/2,1950000count],[grand rapids_mi:cityid/3,181843count],[colorado:stateid/2,2889000count],[elizabeth_nj:cityid/3,106201count],[phoenix_az:cityid/3,789704count],[pensacola_fl:cityid/3,57619count],[fremont_ca:cityid/3,131945count],[boulder_co:cityid/3,76685count],[louisville_ky:cityid/3,298451count],[new mexico:stateid/2,1303000count],[oklahoma:stateid/2,3025000count],[new britain_ct:cityid/3,73840count],[richardson_tx:cityid/3,72496count],[arlington_va:cityid/3,152599count],[warren_mi:cityid/3,161134count],[toledo_oh:cityid/3,354635count],[ohio:stateid/2,10800000count],[niagara falls_ny:cityid/3,71384count],[evansville_in:cityid/3,130496count],[philadelphia_pa:cityid/3,1688210count],[brownsville_tx:cityid/3,84997count],[yonkers_ny:cityid/3,195351count],[washington:stateid/2,4113200count],[waterford_mi:cityid/3,64250count],[delaware:stateid/2,594000count],[glendale_az:cityid/3,96988count],[monroe_la:cityid/3,57597count],[north charleston_sc:cityid/3,62504count],[hawaii:stateid/2,964000count],[tyler_tx:cityid/3,70508count],[costa mesa_ca:cityid/3,82291count],[norwalk_ct:cityid/3,77767count],[santa clara_ca:cityid/3,87700count],[saginaw_mi:cityid/3,77508count],[springfield_il:cityid/3,100054count],[nashua_nh:cityid/3,67865count],[des moines_ia:cityid/3,191003count],[nebraska:stateid/2,1569000count],[southfield_mi:cityid/3,75568count],[newport news_va:cityid/3,144903count],[new jersey:stateid/2,7365000count],[san leandro_ca:cityid/3,63952count],[arvada_co:cityid/3,84576count],[st. louis_mo:cityid/3,453085count],[new york:stateid/2,17558000count],[akron_oh:cityid/3,237177count],[maine:stateid/2,1125000count],[lafayette_la:cityid/3,80584count],[lorain_oh:cityid/3,75416count],[sunnyvale_ca:cityid/3,106618count],[st. petersburg_fl:cityid/3,238647count],[san francisco_ca:cityid/3,678974count],[charlotte_nc:cityid/3,314447count],[new bedford_ma:cityid/3,98478count],[east orange_nj:cityid/3,77878count],[parma_oh:cityid/3,92548count],[high point_nc:cityid/3,64107count],[thousand oaks_ca:cityid/3,77797count],[jersey city_nj:cityid/3,223532count],[savannah_ga:cityid/3,141654count],[mcallen_tx:cityid/3,67042count],[norwalk_ca:cityid/3,84901count],[utah:stateid/2,1461000count],[portsmouth_va:cityid/3,104577count],[macon_ga:cityid/3,116860count],[schenectady_ny:cityid/3,67972count],[great falls_mt:cityid/3,56725count],[west allis_wi:cityid/3,63982count],[fresno_ca:cityid/3,218202count],[georgia:stateid/2,5463000count],[ewa_hi:cityid/3,190037count],[davenport_ia:cityid/3,103254count],[miami_fl:cityid/3,346865count],[hartford_ct:cityid/3,136392count],[longview_tx:cityid/3,62762count],[scottsdale_az:cityid/3,88622count],[baton rouge_la:cityid/3,219419count],[fort smith_ar:cityid/3,71384count],[joliet_il:cityid/3,77956count],[greensboro_nc:cityid/3,155642count],[cheektowaga_ny:cityid/3,92145count],[scotts valley_ca:cityid/3,6037count],[greenville_sc:cityid/3,58242count],[garden grove_ca:cityid/3,123351count],[escondido_ca:cityid/3,62480count],[royal oak_mi:cityid/3,70893count],[west hartford_ct:cityid/3,61301count],[durham_nc:cityid/3,100538count],[louisiana:stateid/2,4206000count],[irondequoit_ny:cityid/3,57648count],[springfield_mo:cityid/3,133116count],[west palm beach_fl:cityid/3,62530count],[albany_ga:cityid/3,74425count],[columbia_mo:cityid/3,62061count],[boston_ma:cityid/3,562994count],[portland_me:cityid/3,61572count],[lakewood_co:cityid/3,113808count],[bakersfield_ca:cityid/3,105611count],[california:stateid/2,23670000count],[virginia beach_va:cityid/3,262199count],[somerville_ma:cityid/3,77372count],[denver_co:cityid/3,492365count],[torrance_ca:cityid/3,131497count],[aurora_il:cityid/3,81293count],[pasadena_tx:cityid/3,112560count],[new orleans_la:cityid/3,557515count],[springfield_oh:cityid/3,72563count],[albuquerque_nm:cityid/3,331767count],[tennessee:stateid/2,4591000count],[upper darby_pa:cityid/3,84054count],[pennsylvania:stateid/2,11863000count],[arlington heights_il:cityid/3,66116count],[raleigh_nc:cityid/3,149771count],[peoria_il:cityid/3,124160count],[woodbridge_nj:cityid/3,90074count],[missouri:stateid/2,4916000count],[largo_fl:cityid/3,58977count],[south carolina:stateid/2,3121800count],[appleton_wi:cityid/3,58913count],[mississippi:stateid/2,2520000count],[mesquite_tx:cityid/3,67053count],[kansas:stateid/2,2364000count],[tempe_az:cityid/3,106919count],[penn hills_pa:cityid/3,57632count],[paterson_nj:cityid/3,137970count],[amarillo_tx:cityid/3,149230count],[concord_ca:cityid/3,103763count],[roanoke_va:cityid/3,100427count],[connecticut:stateid/2,3107000count],[provo_ut:cityid/3,74111count],[lubbock_tx:cityid/3,173979count],[alexandria_va:cityid/3,103217count],[pittsburgh_pa:cityid/3,423938count],[elyria_oh:cityid/3,57504count],[alaska:stateid/2,401800count],[richmond_va:cityid/3,219214count],[gainesville_fl:cityid/3,81371count],[wyoming:stateid/2,469557count],[pueblo_co:cityid/3,101686count],[fall river_ma:cityid/3,92574count],[florida:stateid/2,9746000count],[downey_ca:cityid/3,82602count],[edison_nj:cityid/3,70193count],[arkansas:stateid/2,2286000count],[lower merion_pa:cityid/3,59651count],[minneapolis_mn:cityid/3,370951count],[nevada:stateid/2,800500count],[casper_wy:cityid/3,51016count],[oakland_ca:cityid/3,339337count],[quincy_ma:cityid/3,84743count],[mountain view_ca:cityid/3,58655count],[las vegas_nv:cityid/3,164674count],[youngstown_oh:cityid/3,115436count],[port arthur_tx:cityid/3,61195count],[south dakota:stateid/2,690767count],[medford_ma:cityid/3,58076count],[kentucky:stateid/2,2364000count],[framingham_ma:cityid/3,65113count],[buena park_ca:cityid/3,64165count],[worcester_ma:cityid/3,161799count],[troy_mi:cityid/3,67102count],[kettering_oh:cityid/3,61186count],[san antonio_tx:cityid/3,785880count],[el paso_tx:cityid/3,425259count],[huntington beach_ca:cityid/3,170505count],[oregon:stateid/2,2633000count],[portland_or:cityid/3,366383count],[montgomery_al:cityid/3,177857count],[racine_wi:cityid/3,85725count],[jacksonville_fl:cityid/3,540920count],[sacramento_ca:cityid/3,275741count],[daly city_ca:cityid/3,78519count],[cedar rapids_ia:cityid/3,110243count],[springfield_ma:cityid/3,152319count],[fargo_nd:cityid/3,61308count],[duluth_mn:cityid/3,92811count],[whittier_ca:cityid/3,68558count],[district of columbia:stateid/2,638000count],[bethlehem_pa:cityid/3,70419count],[alabama:stateid/2,3894000count],[oak lawn_il:cityid/3,60590count],[dundalk_md:cityid/3,71293count],[topeka_ks:cityid/3,118690count],[hayward_ca:cityid/3,93585count],[nashville_tn:cityid/3,455651count],[north little rock_ar:cityid/3,64388count],[stockton_ca:cityid/3,149779count],[san angelo_tx:cityid/3,73240count],[columbia_sc:cityid/3,101229count],[carson_ca:cityid/3,81221count],[tuscaloosa_al:cityid/3,75143count],[eugene_or:cityid/3,105664count],[santa barbara_ca:cityid/3,74542count],[lansing_mi:cityid/3,130414count],[rhode island:stateid/2,947200count],[aurora_co:cityid/3,158588count],[new york_ny:cityid/3,7071639count],[fort wayne_in:cityid/3,172196count]}:{[cityid/3,count],[countryid/2,count],[stateid/2,count]}[1] => {}:error]} | answer(A,largest(B,(state(B),population(A,B))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:671: query => {[1.78e+11length^2]} | answer(A,(size(B,A),const(B,stateid(florida))))
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:673: query => {[4076000count]} | answer(A,(population(B,A),const(B,stateid(minnesota))))
        Example tmpe6f2k58p.dlog:674: query => {[79722count]} | answer(A,(population(B,A),const(B,cityid(kalamazoo,_))))
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:676: query => {[district of columbia:stateid/2]} | answer(A,smallest(B,(state(A),area(A,B))))
        Example tmpe6f2k58p.dlog:677: query => {[montpelier_vt:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(vermont))))
        Example tmpe6f2k58p.dlog:678: query => {[2.15e+11length^2]} | answer(A,(area(B,A),const(B,stateid(idaho))))
        Example tmpe6f2k58p.dlog:679: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmpe6f2k58p.dlog:680: query => {[st. clair:lakeid/2]} | answer(A,(major(A),lake(A),loc(A,B),const(B,stateid(michigan))))
        Example tmpe6f2k58p.dlog:681: query => {[11400000count]} | answer(A,(population(B,A),const(B,stateid(illinois))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:682: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:683: query => {[944000count]} | answer(A,(population(B,A),const(B,stateid(idaho))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:684: query => {[alaska:stateid/2],[hawaii:stateid/2]} | answer(A,(state(A),\+(next_to(A,B),state(B))))
        Example tmpe6f2k58p.dlog:685: query => {[562994count]} | answer(A,(population(B,A),const(B,cityid(boston,_))))
        Example tmpe6f2k58p.dlog:686: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmpe6f2k58p.dlog:687: query => {[augusta_me:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(maine))))
        Example tmpe6f2k58p.dlog:688: query => {[new york_ny:cityid/3]} | answer(A,largest(B,(city(A),population(A,B))))
        Example tmpe6f2k58p.dlog:689: query => {[2718000count]} | answer(A,(population(B,A),const(B,stateid(arizona))))
        Example tmpe6f2k58p.dlog:690: query => {[columbia_sc:cityid/3],[phoenix_az:cityid/3],[baton rouge_la:cityid/3],[salt lake city_ut:cityid/3],[concord_nh:cityid/3],[boise_id:cityid/3],[richmond_va:cityid/3],[boston_ma:cityid/3],[cheyenne_wy:cityid/3],[madison_wi:cityid/3],[des moines_ia:cityid/3],[salem_or:cityid/3],[raleigh_nc:cityid/3],[indianapolis_in:cityid/3],[oklahoma city_ok:cityid/3],[jackson_ms:cityid/3],[nashville_tn:cityid/3],[hartford_ct:cityid/3],[washington_dc:cityid/3],[little rock_ar:cityid/3],[austin_tx:cityid/3],[juneau_ak:cityid/3],[providence_ri:cityid/3],[tallahassee_fl:cityid/3],[lincoln_ne:cityid/3],[bismarck_nd:cityid/3],[santa fe_nm:cityid/3],[charleston_wv:cityid/3],[sacramento_ca:cityid/3],[st. paul_mn:cityid/3],[lansing_mi:cityid/3],[trenton_nj:cityid/3],[columbus_oh:cityid/3],[honolulu_hi:cityid/3],[atlanta_ga:cityid/3],[montgomery_al:cityid/3],[topeka_ks:cityid/3],[denver_co:cityid/3],[springfield_il:cityid/3],[dover_de:cityid/3],[albany_ny:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,countryid(usa))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:691: query => {[23670000count]} | answer(A,(population(B,A),const(B,stateid(california))))
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:693: query => {[8.62e+10length^2]} | answer(A,(area(B,A),const(B,stateid(maine))))
        Example tmpe6f2k58p.dlog:694: query => {[2count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid(idaho))),A))
        Example tmpe6f2k58p.dlog:695: query => {[2.15e+11length^2]} | answer(A,(area(B,A),const(B,stateid(idaho))))
        Example tmpe6f2k58p.dlog:696: query => {[monroe_la:cityid/3],[pontchartrain:lakeid/2],[lake charles_la:cityid/3],[lafayette_la:cityid/3],[kenner_la:cityid/3]} | answer(A,(major(A),loc(A,B),const(B,stateid(louisiana))))
        Example tmpe6f2k58p.dlog:697: query => {[4113200count]} | answer(A,(population(B,A),const(B,stateid(washington))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:698: query => {[1125000count]} | answer(A,(population(B,A),const(B,stateid(maine))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:699: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:700: query => {[harrisburg_pa:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(pennsylvania))))
        Example tmpe6f2k58p.dlog:701: query => {[missouri:stateid/2],[tennessee:stateid/2]} | answer(A,most(A,B,(state(A),next_to(A,B),state(B))))
        Example tmpe6f2k58p.dlog:702: query => {[3778000length]} | answer(A,(len(B,A),const(B,riverid(mississippi))))
        Example tmpe6f2k58p.dlog:703: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmpe6f2k58p.dlog:704: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:705: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),state(B))))
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:707: query => {[oregon:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,cityid(salem,_))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:708: query => {[wabash:riverid/2],[ohio:riverid/2],[mississippi:riverid/2],[rock:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(illinois))))
        Example tmpe6f2k58p.dlog:709: query => {[mississippi:riverid/2],[st. francis:riverid/2],[white:riverid/2],[missouri:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(missouri))))
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:711: query => {[harrisburg_pa:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(pennsylvania))))
        Example tmpe6f2k58p.dlog:712: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmpe6f2k58p.dlog:713: query => {} | answer(A,(river(A),traverse(A,B),const(B,stateid(alaska))))
        Example tmpe6f2k58p.dlog:714: query => {[ohio:riverid/2],[delaware:riverid/2],[allegheny:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(pennsylvania))))
        Example tmpe6f2k58p.dlog:715: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,largest(B,(state(A),const(B,stateid(mississippi)))))
        Example tmpe6f2k58p.dlog:716: query => {[arkansas:riverid/2],[cimarron:riverid/2],[smoky hill:riverid/2],[republican:riverid/2],[neosho:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(kansas))))
        Example tmpe6f2k58p.dlog:717: query => {[3.15e+11length^2]} | answer(A,(size(B,A),const(B,stateid('new mexico'))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:718: query => {[sitka_ak:cityid/3],[fairbanks_ak:cityid/3],[anchorage_ak:cityid/3],[juneau_ak:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(alaska))))
        Example tmpe6f2k58p.dlog:719: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),const(B,stateid('new mexico'))))
        Example tmpe6f2k58p.dlog:720: query => {[mississippi:riverid/2],[missouri:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(iowa))))
        Example tmpe6f2k58p.dlog:721: query => {} | answer(A,(river(A),traverse(A,B),const(B,stateid(maine))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:722: query => {[cumberland:riverid/2],[mississippi:riverid/2],[tennessee:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(tennessee))))
        Example tmpe6f2k58p.dlog:723: query => {[177857count]} | answer(A,(population(B,A),const(B,cityid(montgomery,_))))
        Example tmpe6f2k58p.dlog:724: query => {} | answer(A,(state(A),next_to(A,B),const(B,stateid(hawaii))))
        Example tmpe6f2k58p.dlog:725: query => {[76685count]} | answer(A,(population(B,A),const(B,cityid(boulder,_))))
        Example tmpe6f2k58p.dlog:726: query => {[gila:riverid/2],[colorado:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(arizona))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:727: query => {[south platte:riverid/2],[arkansas:riverid/2],[colorado:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[republican:riverid/2],[north platte:riverid/2],[green:riverid/2],[san juan:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(colorado))))
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:729: query => {[delaware:riverid/2]} | answer(A,shortest(A,river(A)))
        Example tmpe6f2k58p.dlog:730: query => {} | answer(A,(state(A),next_to(A,B),const(B,stateid('rhode dakota'))))
        Example tmpe6f2k58p.dlog:731: query => {} | answer(A,(river(A),loc(A,B),const(B,stateid(alaska))))
        Example tmpe6f2k58p.dlog:732: query => {[3778000length]} | answer(A,(len(B,A),const(B,riverid(mississippi))))
        Example tmpe6f2k58p.dlog:733: query => {[lakewood_co:cityid/3],[pueblo_co:cityid/3],[arvada_co:cityid/3],[boulder_co:cityid/3],[fort collins_co:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(colorado))))
        Example tmpe6f2k58p.dlog:734: query => {[minnesota:stateid/2],[new york:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,cityid(rochester,_))))
        Example tmpe6f2k58p.dlog:735: query => {[minnesota:stateid/2],[new york:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,cityid(rochester,_))))
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:737: query => {[2.00e+11length^2]} | answer(A,(size(B,A),const(B,stateid('south dakota'))))
        Example tmpe6f2k58p.dlog:738: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,most(A,B,(state(A),next_to(B,B))))
        Example tmpe6f2k58p.dlog:739: query => {[potomac:riverid/2],[roanoke:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(virginia))))
        Example tmpe6f2k58p.dlog:740: query => {[colorado:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(nevada))))
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:742: query => {} | answer(A,(river(A),traverse(A,B),const(B,stateid(maine))))
        Example tmpe6f2k58p.dlog:743: query => {[potomac:riverid/2],[roanoke:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(virginia))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:744: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpe6f2k58p.dlog:745: query => {[76685count]} | answer(A,(population(B,A),const(B,cityid(boulder,_))))
        Example tmpe6f2k58p.dlog:746: query => {[south platte:riverid/2],[arkansas:riverid/2],[colorado:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[republican:riverid/2],[north platte:riverid/2],[green:riverid/2],[san juan:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(colorado))))
        Example tmpe6f2k58p.dlog:747: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:748: query => {[arkansas:riverid/2],[white:riverid/2],[mississippi:riverid/2],[red:riverid/2],[ouachita:riverid/2],[st. francis:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(arkansas))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:749: query => {[1.53e+12length^2]} | answer(A,(size(B,A),const(B,stateid(alaska))))
        Example tmpe6f2k58p.dlog:750: query => {[alaska:stateid/2]} | answer(A,(state(A),const(A,stateid(alaska))))
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:752: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:754: query => {[utah:stateid/2],[wyoming:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[kansas:stateid/2],[nebraska:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(colorado))))
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:757: query => {} | answer(A,(loc(B,A),const(B,cityid(', _',_))))
        Example tmpe6f2k58p.dlog:758: query => {[georgia:stateid/2],[tennessee:stateid/2],[florida:stateid/2],[mississippi:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))
        Example tmpe6f2k58p.dlog:759: query => {[georgia:stateid/2],[tennessee:stateid/2],[florida:stateid/2],[mississippi:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))
        Example tmpe6f2k58p.dlog:760: query => {[1.53e+12length^2]} | answer(A,(size(B,A),const(B,stateid(alaska))))
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:762: query => {[6.91e+11length^2]} | answer(A,(size(B,A),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:763: query => {[georgia:stateid/2],[tennessee:stateid/2],[florida:stateid/2],[mississippi:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))
        Example tmpe6f2k58p.dlog:764: query => {} | answer(A,(loc(B,A),const(B,stateid('new dakota'))))
        Example FAILED TO PARSE
        Example tmpe6f2k58p.dlog:765: query => {} | answer(A,(loc(B,A),const(B,cityid('scotts _',valley))))
        Example tmpe6f2k58p.dlog:766: query => {[georgia:stateid/2],[tennessee:stateid/2],[florida:stateid/2],[mississippi:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))
        Example tmpe6f2k58p.dlog:767: query => {[california:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,cityid('san jose',_))))
        Example tmpe6f2k58p.dlog:768: query => {[georgia:stateid/2],[tennessee:stateid/2],[florida:stateid/2],[mississippi:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))
        Example tmpe6f2k58p.dlog:769: query => {[georgia:stateid/2],[tennessee:stateid/2],[florida:stateid/2],[mississippi:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))
        Example tmpe6f2k58p.dlog:770: query => {[georgia:stateid/2],[tennessee:stateid/2],[florida:stateid/2],[mississippi:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))
        Example tmpe6f2k58p.dlog:771: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example tmpe6f2k58p.dlog:772: query => {} | answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))
        Example tmpe6f2k58p.dlog:773: query => {[mississippi:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[texas:stateid/2],[tennessee:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(arkansas))))
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:775: query => {} | answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))
        Example tmpe6f2k58p.dlog:776: query => {[california:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,placeid('mount whitney'))))
        Example tmpe6f2k58p.dlog:777: query => {[76685count]} | answer(A,(population(B,A),const(B,cityid(boulder,_))))
        Example FAILED TO EXECUTE
        Example tmpe6f2k58p.dlog:779: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,state(A))
        Example tmpe6f2k58p.dlog:780: query => {[76685count]} | answer(A,(population(B,A),const(B,cityid(boulder,_))))
        Example tmpe6f2k58p.dlog:781: query => {[usa:countryid/2],[massachusetts:stateid/2],[oregon:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[ohio:stateid/2]} | answer(A,(loc(B,A),const(B,cityid(springfield,_))))
      } [3.8s, cum. 5.9s]
    } [5.9s, cum. 5.9s]
    Randomly splitting 711 general examples
    498 training examples, 213 test examples
  } [5.9s, cum. 6.0s]
  Execution directory: /Users/ms75986/Desktop/Fall2019/NLP/Project2/hw2-distrib-2/state/execs/130.exec
} [6.0s]
