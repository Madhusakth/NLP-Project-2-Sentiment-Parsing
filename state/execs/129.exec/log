main() {
  Execution directory: /Users/ms75986/Desktop/Fall2019/NLP/Project2/hw2-distrib-2/state/execs/129.exec
  DataManager.loadExamples {
    Reading general {
      Path: evaluator/domains/dbquery/geoquery/1/geoquery.dlog {
        Parsing evaluator/domains/dbquery/geoquery/1/geoquery.dlog
        89 statements
        Parsing evaluator/domains/dbquery/geoquery/1/../../general/predicates.dlog
        49 statements
        Parsing evaluator/domains/dbquery/geoquery/1/geobase.dlog
        698 statements
      } [1.9s, cum. 1.9s]
      Path: evaluator/domains/dbquery/geoquery/1/lexicon.dlog {
        Parsing evaluator/domains/dbquery/geoquery/1/lexicon.dlog
        5 statements
        Parsing evaluator/domains/dbquery/geoquery/1/../../general/lexicon.dlog
        31 statements
        Parsing evaluator/domains/dbquery/geoquery/1/lexicon0.dlog
        5 statements
      }
      Path: /var/folders/jv/b55j3hps3_ldqm399ly0t81w0000gp/T/tmpmq8f_g1t.dlog {
        Parsing /var/folders/jv/b55j3hps3_ldqm399ly0t81w0000gp/T/tmpmq8f_g1t.dlog {
          DatalogParser.loadSafe(): start
          _parse([query], answer(A,longest(A,(river(A),traverse(A,B),state(B),next_to(B,C),most(C,D,(state(C),next_to(C,D),state(D))))))).
          _parse([query], answer(A,(population(B,A),capital(B),loc(B,C),largest(C,(state(C),const(D,riverid(mississippi)),traverse(D,C)))))).
          _parse([query], answer(A,largest(A,(state(A),next_to(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,countryid(usa)))))))).
          _parse([query], answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))).
          _parse([query], answer(A,(high_point(B,A),state(B),low_point(B,C),elevation(C,0.0)))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),state(C),loc(D,C),capital(D),const(D,cityid(atlanta,_))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),state(B),const(B,stateid(oregon)))))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,countryid(usa))))))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),largest(D,(state(C),population(C,D)))))).
          _parse([query], answer(A,longest(A,(river(A),traverse(A,B),state(B),next_to(B,C),const(C,stateid(tennessee)))))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,countryid(usa))))))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),state(B),next_to(B,C),largest(C,state(C)))))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)))).
          _parse([query], answer(A,largest(A,(state(A),next_to(A,B),largest(C,(state(B),population(B,C))))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),state(C),next_to(C,D),state(D),next_to(D,E),const(E,stateid(texas))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),state(B),loc(C,B),capital(C),const(C,cityid("des moines",_)))))).
          _parse([query], answer(A,(state(A),loc(B,A),capital(B),high_point(A,B)))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),smallest(B,(state(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(capital(A),city(A),loc(A,B),largest(B,(state(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(density(B,A),smallest(C,(state(B),population(B,C)))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),smallest(B,(state(B),loc(B,C),const(C,countryid(usa)))))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),smallest(B,(state(B),loc(B,C),const(C,countryid(usa)))))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),most(B,C,(state(B),traverse(C,B),river(C))))))).
          _parse([query], answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa)),shortest(D,river(D)),traverse(D,B)),A))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)))).
          _parse([query], answer(A,(population(B,A),largest(C,(state(B),density(B,C)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),state(B),loc(C,B),capital(C),const(C,cityid("des moines",_)))))).
          _parse([query], answer(A,count(B,(river(B),\+(traverse(B,C),state(C),loc(D,C),capital(D),const(D,cityid(albany,_)))),A))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),largest(C,(state(B),area(B,C))))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),smallest(C,(state(B),population(B,C))))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),state(B),loc(C,B),highest(C,place(C)))))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),largest(C,(state(B),area(B,C))))))).
          _parse([query], answer(A,(density(B,A),smallest(C,(state(B),area(B,C)))))).
          _parse([query], answer(A,(area(B,A),smallest(C,(state(B),density(B,C)))))).
          _parse([query], answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))).
          _parse([query], answer(A,(capital(A),loc(A,B),most(B,C,(state(B),next_to(B,C),state(C)))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,fewest(A,B,(state(A),next_to(A,B),state(B),\+const(A,stateid(alaska)),\+const(A,stateid(hawaii)))))).
          _parse([query], answer(A,(size(B,A),largest(B,(state(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(population(B,A),major(B),city(B),loc(B,C),const(C,stateid(montana))))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,countryid(usa)),loc(C,A),const(C,cityid(springfield,_))))).
          _parse([query], answer(A,sum(B,(state(B),next_to(C,B),const(C,stateid(texas))),population(B),A))).
          _parse([query], answer(A,(population(B,A),capital(B),loc(B,C),largest(C,state(C))))).
          _parse([query], answer(A,(capital(A),city(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,(area(B,A),state(B),loc(C,B),capital(C),const(C,cityid(albany,_))))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,largest(B,(state(A),const(C,riverid(mississippi)),traverse(C,A),population(A,B))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,(state(A),loc(B,A),lowest(B,place(B))))).
          _parse([query], answer(A,(capital(A),loc(A,B),state(B),loc(C,B),highest(C,place(C))))).
          _parse([query], answer(A,longest(A,(river(A),\+(traverse(A,B),const(B,stateid(texas))))))).
          _parse([query], answer(A,(capital(A),loc(A,B),highest(C,(state(B),loc(C,B),place(C)))))).
          _parse([query], answer(A,(density(B,A),state(B),loc(C,B),capital(C),const(C,cityid(austin,_))))).
          _parse([query], answer(A,(len(B,A),longest(B,(river(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(population(B,A),largest(B,(state(B),next_to(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(density(B,A),const(B,countryid(usa))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),most(C,D,(state(C),next_to(C,D),state(D)))),A))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),largest(D,(state(C),population(C,D)))),A))).
          _parse([query], answer(A,(state(A),traverse(B,A),largest(B,(river(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),state(C),loc(D,C),capital(D),const(D,cityid(boston,_))),A))).
          _parse([query], answer(A,count(B,(city(B),const(B,cityid(austin,_)),loc(B,C),const(C,countryid(usa))),A))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(colorado)),river(B),loc(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,(state(A),high_point(A,B),higher(B,C),high_point(D,C),const(D,stateid(colorado))))).
          _parse([query], answer(A,(population(B,A),major(B),city(B),loc(B,C),const(C,stateid(wisconsin))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(missouri))))).
          _parse([query], answer(A,(river(A),traverse(A,B),largest(C,(state(B),population(B,C)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(california)))))).
          _parse([query], answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(texas)),population(A,B))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(texas)),longer(B,D),const(D,riverid(red))),A))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),largest(C,state(C))))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),major(B),river(B),traverse(B,A))))).
          _parse([query], answer(A,largest(A,(state(A),traverse(B,A),const(B,riverid(mississippi)))))).
          _parse([query], answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(texas)),population(A,B))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(mountain(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(state(A),longest(B,(river(B),traverse(B,A)))))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B),loc(A,C),const(C,countryid(usa)))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),state(B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(loc(B,A),state(A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(density(B,A),const(B,countryid(usa))))).
          _parse([query], answer(A,longest(A,(river(A),traverse(A,B),const(B,stateid(colorado)))))).
          _parse([query], answer(A,(size(B,A),capital(B),loc(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(state(A),loc(B,A),highest(B,place(B))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(colorado)),next_to(B,D),const(D,stateid("new mexico"))),A))).
          _parse([query], answer(A,sum(B,state(B),area(B),A))).
          _parse([query], answer(A,highest(A,(mountain(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(len(B,A),shortest(B,(river(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(density(B,A),smallest(B,state(B))))).
          _parse([query], answer(A,largest(B,(state(A),next_to(A,C),const(C,stateid(texas)),population(A,B))))).
          _parse([query], answer(A,(state(A),next_to(A,B),longest(B,(river(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(maryland))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,(river(A),loc(A,B),state(B),const(B,stateid(texas))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(kentucky))),A))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(capital(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,count(B,(state(B),const(C,riverid(colorado)),river(C),traverse(C,B)),A))).
          _parse([query], answer(A,(state(A),loc(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,largest(B,(population(A,B),capital(A),loc(A,C),const(C,countryid(usa)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(nevada))))).
          _parse([query], answer(A,(state(A),largest(B,(city(B),loc(B,C),const(C,stateid(montana)))),loc(B,A)))).
          _parse([query], answer(A,count(B,(state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)),A))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),state(C),next_to(C,D),const(D,stateid(utah))),A))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,(population(B,A),capital(B),loc(B,C),const(C,stateid(georgia))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(mississippi)))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),state(C)),A))).
          _parse([query], answer(A,count(B,(state(B),loc(C,B),city(C),const(C,cityid(springfield,_))),A))).
          _parse([query], answer(A,count(B,(state(B),const(C,riverid(missouri)),river(C),traverse(C,B)),A))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(state(A),loc(B,A),largest(C,(city(B),population(B,C)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),smallest(B,state(B)))))).
          _parse([query], answer(A,count(B,(river(B),traverse(B,C),state(C),next_to(C,D),const(D,stateid(colorado))),A))).
          _parse([query], answer(A,(major(A),lake(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),river(B),traverse(B,A))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),river(B),traverse(B,A))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),largest(B,state(B))))).
          _parse([query], answer(A,largest(B,(population(A,B),state(A),loc(A,C),const(C,countryid(usa)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid("rhode island")))))).
          _parse([query], answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(alabama)),state(B)))).
          _parse([query], answer(A,(state(A),loc(B,A),lowest(B,place(B))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(ohio))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid("south carolina")))))).
          _parse([query], answer(A,(state(A),\+(next_to(A,B),state(B))))).
          _parse([query], answer(A,(state(A),shortest(B,river(B)),traverse(B,A)))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid("new york")))))).
          _parse([query], answer(A,count(B,(city(B),loc(B,C),const(C,countryid(usa))),A))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(size(B,A),const(B,cityid("new york",_))))).
          _parse([query], answer(A,(major(A),river(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(california)))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,smallest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(state(A),const(B,riverid(colorado)),traverse(B,A)))).
          _parse([query], answer(A,(capital(A),loc(A,B),state(B),const(B,stateid(texas))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,count(B,(state(B),loc(C,B),const(C,cityid(springfield,_))),A))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),const(C,stateid("new mexico"))))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),const(C,stateid(alabama)),next_to(C,B)))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid("new mexico")))))).
          _parse([query], answer(A,largest(B,(state(C),capital(C,A),population(A,B))))).
          _parse([query], answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa))),A))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(oregon))),A))).
          _parse([query], answer(A,smallest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(state(A),city(B),const(B,cityid(denver,_)),loc(B,A)))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))).
          _parse([query], answer(A,count(B,(state(B),const(C,riverid(mississippi)),traverse(C,B)),A))).
          _parse([query], answer(A,(area(B,A),largest(B,state(B))))).
          _parse([query], answer(A,largest(B,(population(A,B),state(A),next_to(A,C),const(C,stateid(oklahoma)))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(delaware))))))).
          _parse([query], answer(A,(size(B,A),largest(B,(city(B),loc(B,C),const(C,stateid(alaska))))))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(state(A),loc(B,A),major(B),city(B),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(state(A),const(B,riverid(colorado)),river(B),traverse(B,A)))).
          _parse([query], answer(A,(major(A),lake(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(florida))))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid("south dakota"))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid("new mexico")))))).
          _parse([query], answer(A,(area(B,A),smallest(B,state(B))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,(capital(A),loc(A,B),largest(B,state(B))))).
          _parse([query], answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa))),A))).
          _parse([query], answer(A,largest(A,(capital(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,largest(B,(population(A,B),city(A),loc(A,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(texas)),population(A,B))))).
          _parse([query], answer(A,smallest(A,(state(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(state(A),const(B,riverid(missouri)),traverse(B,A)))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new york"))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid("north carolina"))))).
          _parse([query], answer(A,(state(A),const(B,riverid(ohio)),river(B),traverse(B,A)))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid("rhode island"))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(pennsylvania)))))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(nebraska)))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(colorado))),A))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(california)))))).
          _parse([query], answer(A,largest(B,(const(C,stateid(texas)),city(A),loc(A,C),population(A,B))))).
          _parse([query], answer(A,(const(B,cityid(sacramento,_)),capital(B),loc(B,A),state(A)))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boston,ma))))).
          _parse([query], answer(A,(state(A),largest(B,(state(A),area(A,B)))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(california))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(washington)))))).
          _parse([query], answer(A,largest(A,(river(A),loc(A,B),const(B,stateid(illinois)))))).
          _parse([query], answer(A,(next_to(A,B),state(A),const(B,stateid(california))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(georgia)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(michigan)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new york"))))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(state(A),const(B,cityid(austin,_)),capital(B),loc(B,A)))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(portland,me))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(mississippi)))))).
          _parse([query], answer(A,count(B,(city(B),const(C,countryid(usa)),loc(B,C)),A))).
          _parse([query], answer(A,(state(A),const(B,riverid(colorado)),river(B),traverse(B,A)))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(spokane,wa))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(alaska)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new york"))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(pennsylvania)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(kansas))))).
          _parse([query], answer(A,(elevation(B,A),const(B,placeid("mount mckinley"))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),const(C,stateid(colorado))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(arkansas)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(wisconsin)))))).
          _parse([query], answer(A,(area(B,A),const(B,countryid(usa))))).
          _parse([query], answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))).
          _parse([query], answer(A,(state(A),longest(B,river(B)),traverse(B,A)))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(mississippi))))).
          _parse([query], answer(A,most(A,B,(river(A),traverse(A,B),state(B))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(missouri)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(springfield,mo))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,tx))))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(wyoming))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(washington,dc))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(delaware))))).
          _parse([query], answer(A,(state(A),const(B,cityid(columbus,_)),capital(B),loc(B,A)))).
          _parse([query], answer(A,(area(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,riverid(mississippi)),river(C)),A))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(wisconsin)))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(colorado)))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid("rio grande")),river(B)))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(alaska)))))).
          _parse([query], answer(A,highest(A,(mountain(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new hampshire"))))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(iowa)))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(seattle,wa))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(kansas)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(alabama)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(montana))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(area(B,A),state(B)))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),largest(C,state(C))),A))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(wyoming)))))).
          _parse([query], answer(A,count(B,(state(B),loc(C,B),city(C),const(C,cityid(austin,_))),A))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(florida))),A))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("south dakota"))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,tx))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(oregon)))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid("new hampshire"))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(washington,dc))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(idaho))),A))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(arizona)))))).
          _parse([query], answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,smallest(A,(state(A),next_to(A,B),const(B,stateid(ohio)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(colorado)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(florida)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(kansas)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(nebraska)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(oregon)))))).
          _parse([query], answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,smallest(B,(state(A),area(A,B))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(iowa)))))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(hawaii)))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(louisiana)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid("san francisco",_))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(wyoming)))))).
          _parse([query], answer(A,(river(A),traverse(A,B),largest(B,state(B))))).
          _parse([query], answer(A,(elevation(B,A),const(B,placeid("death valley"))))).
          _parse([query], answer(A,highest(A,(mountain(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(pennsylvania))),A))).
          _parse([query], answer(A,(river(A),\+(traverse(A,B),const(B,stateid(tennessee)))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(wyoming))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(ohio)))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("south dakota"))))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(arizona))),A))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(montana))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),loc(B,A),city(B),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(california))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,riverid(colorado))))).
          _parse([query], answer(A,count(B,(river(B),const(B,riverid(colorado))),A))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(riverside,_))))).
          _parse([query], answer(A,count(B,(city(B),const(C,stateid(texas)),loc(B,C)),A))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,largest(B,(state(A),loc(B,A),city(B))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(maryland))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(indiana))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),loc(B,A),city(B),const(B,cityid(flint,_))))).
          _parse([query], answer(A,largest(B,(city(A),population(A,B))))).
          _parse([query], answer(A,count(B,(state(B),const(C,stateid(iowa)),next_to(C,B)),A))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(california))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(denver,_))))).
          _parse([query], answer(A,count(B,(river(B),traverse(B,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,(lake(A),loc(A,B),const(B,stateid(california))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(michigan))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(atlanta,_))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(seattle,_))))).
          _parse([query], answer(A,count(B,(state(B),loc(C,B),major(C),river(C)),A))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(dallas,_))))).
          _parse([query], answer(A,(state(A),loc(B,A),smallest(B,capital(B))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(california))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,cityid(springfield,_))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(minnesota))))).
          _parse([query], answer(A,count(B,(state(B),const(C,stateid(missouri)),next_to(C,B)),A))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(kalamazoo,_))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(montana))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid("west virginia"))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,riverid(mississippi)),river(B)))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boston,_))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(state(A),\+(next_to(A,B),state(B))))).
          _parse([query], answer(A,(state(A),loc(B,A),shortest(B,river(B))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(vermont))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(oregon))))).
          _parse([query], answer(A,largest(B,(capital(A),population(A,B))))).
          _parse([query], answer(A,highest(B,(state(A),loc(B,A),place(B))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(florida))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(virginia))))).
          _parse([query], answer(A,(state(A),loc(B,A),capital(B),const(B,cityid(salem,_))))).
          _parse([query], answer(A,most(A,B,(river(A),traverse(A,B),state(B))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(arizona))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(chicago,_))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(major(A),river(A),traverse(A,B),const(B,stateid(illinois))))).
          _parse([query], answer(A,count(B,(city(B),loc(B,C),const(C,stateid(montana))),A))).
          _parse([query], answer(A,smallest(B,(state(A),area(A,B))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(maine))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(idaho))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(major(A),lake(A),loc(A,B),const(B,stateid(michigan))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(illinois))))).
          _parse([query], answer(A,count(B,(city(B),loc(B,C),const(C,stateid(louisiana))),A))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(idaho))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),city(B))))).
          _parse([query], answer(A,(capital(A),\+(major(A),city(A))))).
          _parse([query], answer(A,(state(A),\+(next_to(A,B),state(B))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(montgomery,_))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(washington))))).
          _parse([query], answer(A,smallest(B,(city(A),population(A,B))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(washington))))).
          _parse([query], answer(A,(lake(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(missouri)),river(B)))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(california))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,cityid(austin,tx))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(maine))))).
          _parse([query], answer(A,count(B,(major(B),river(B),traverse(B,C),const(C,stateid(ohio))),A))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(alaska))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(pennsylvania))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(kansas))))).
          _parse([query], answer(A,count(B,(river(B),const(C,stateid(alaska)),loc(B,C)),A))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(maine))))).
          _parse([query], answer(A,longest(B,(state(A),loc(B,A),river(B))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(pennsylvania))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),loc(B,A),highest(B,place(B))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(washington))),A))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(tennessee))),A))).
          _parse([query], answer(A,(state(A),const(B,cityid(dallas,_)),loc(B,A)))).
          _parse([query], answer(A,(state(A),\+(loc(B,A),river(B))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(kansas))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(missouri))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(hawaii))),A))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(iowa))))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(arkansas))))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(oregon))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),river(B))))).
          _parse([query], answer(A,(mountain(A),loc(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid("new hampshire"))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(nevada))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(maine))))).
          _parse([query], answer(A,shortest(A,river(A)))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(virginia))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boulder,_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid("rhode island"))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boulder,_))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(arizona))))).
          _parse([query], answer(A,largest(A,capital(A)))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(loc(B,A),state(A),const(B,cityid(rochester,_))))).
          _parse([query], answer(A,shortest(A,river(A)))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid("south dakota"))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(state(A),const(B,cityid(pittsburgh,_)),loc(B,A)))).
          _parse([query], answer(A,(state(A),const(B,cityid(kalamazoo,_)),loc(B,A)))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(alaska))),A))).
          _parse([query], answer(A,(state(A),const(B,cityid(boston,_)),loc(B,A)))).
          _parse([query], answer(A,(size(B,A),const(B,stateid("north dakota"))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(utah))))).
          _parse([query], answer(A,(loc(B,A),const(B,placeid("mount whitney"))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(louisiana))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(illinois))))).
          _parse([query], answer(A,(elevation(B,A),const(B,placeid("guadalupe peak"))))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boulder,_))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(alabama))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(arkansas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(ohio))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(massachusetts))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(michigan))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("scotts valley",_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(maine))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(arkansas))))).
          _parse([query], answer(A,state(A))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("san jose",_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(kentucky))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(alaska))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("san diego",_))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(loc(B,A),const(B,stateid("new hampshire"))))).
          _parse([query], answer(A,largest(A,capital(A)))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("baton rouge",_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(michigan))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("fort wayne",_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(georgia))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(missouri))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(hawaii))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(arizona))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(wisconsin))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(california))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(loc(B,A),const(B,placeid("mount whitney"))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boulder,_))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid(houston,_))))).
          _parse([query], answer(A,state(A))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boulder,_))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid(springfield,_))))).
          _parse([query], answer(A,most(A,(state(A),traverse(A,B),const(B))next_to(B,C),const(C)))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(hawaii))))).
          _parse([query], answer(A,((A,(state(A))loc(A,B),const(B)))(B,A))const(B)).
          _parse([query], answer(A,(state(B,A),const(B,C)Bstate(B),traverse(C,C),))).
          _parse([query], answer(A,(loc(B,A),const(B),loc(B,C),const(C,))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,,loc(B,C),const(C,,loc()))))).
          _parse([query], answer(A,((A,(place(A),loc(A,B),const(B),const(B,stateid(alaska))))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,,loc(B,A),const(B,Criver()))))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),))).
          _parse([query], answer(A,longest(A,(river(A),traverse(A,B),state(B,,)(B,C),state(C))))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B,,loc(B,A),state(B,Cplace()))))).
          _parse([query], answer(A,(river(B,A),state(B),traverse(B,riverid(mississippi)),traverse(B),traverse(B,)))).
          _parse([query], answer(A,largest(A,(state(A),next_to(A,B),state(B),next_to(B,C),state(C))))).
          _parse([query], answer(A,(population(B,A),state(B),next_to(B,C),state(C),))))).
          _parse([query], answer(A,largest(A,(state(A),next_to(A,B),state(B,Astate(A),population(A,B)))))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),state(C),loc()))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),state(C),next_to()))).
          _parse([query], answer(A,((A,(place(A),loc(A,B),state(B),loc(B,A),lowest(B)))))).
          _parse([query], answer(A,(state(A),loc(A,B),state(B))))))).
          _parse([query], answer(A,(major(A),loc(A),loc(A,B),state(B,countryidplace(B),loc(B,))))).
          _parse([query], answer(A,(population(B,A),largest(B,(city(B),loc(B,C),state(C),loc()))))).
          _parse([query], answer(A,(population(B,A),state(B),population(A),population(A),population(A),population(A)))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),state(B),loc(B,C),state(C))))).
          _parse([query], answer(A,((A,(city(A),loc(A,B),state(B,(state(B),loc(B,C)))))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),state(B,C)(state(C),loc(C)))))).
          _parse([query], answer(A,count(B,(river(B),next_to(C,D),const(D,riverid(usa)))river(D,riverid)))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi))mississippitraverse(C,riverid)mississippi))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi))))).
          _parse([query], answer(A,smallest(B,(state(B),smallest(C,smallest(C)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B),loc(B,A),capital(B))))).
          _parse([query], answer(A,count(B,(river(B),traverse(traverse(B,C),state(C),const(D,C),const))))).
          _parse([query], answer(A,largest(A,(place(A),traverse(A,B),smallest(B,Astate(A)))))).
          _parse([query], answer(A,smallest(A,(place(A),loc(A,B),smallest(B,smalleststate()))smallest))).
          _parse([query], answer(A,longest(A,(river(A),traverse(A,B),state(B),loc(C,B),smallest(C))))).
          _parse([query], answer(A,(population(B,A),const(B),const(C,riverid(mississippi)),traverse(C,)))).
          _parse([query], answer(A,highest(A,(place(A),loc(B,A),smallest(B,(state(B),)))))).
          _parse([query], answer(A,(density(B,A),smallest(B,(state(B),density(A,B)))))).
          _parse([query], answer(A,(density(B,A),smallest(B,(state(B),loc(C,B),smallest(C,)))))).
          _parse([query], answer(A,most(A,(river(A),traverse(A,B),most(B,C(,(state(B),river()))))))).
          _parse([query], answer(A,(state(A),loc(A,B),state(B,C)(state(B),next_to(C,C),)))).
          _parse([query], answer(A,highestpopulation(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa)))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(C,B),state(C))))).
          _parse([query], answer(A,(population(B,A),const(B,(state(B))loc())))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(alaska)))))).
          _parse([query], answer(A,((A,(city(A),loc(B,A),const(B,cityid(springfield,_))))))).
          _parse([query], answer(A,((B,(city(B),loc(B,A),const(B,stateid(texas)))))())).
          _parse([query], answer(A,(population(B,A),largest(B,(state(A))))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))))).
          _parse([query], answer(A,(population(B,A),capital(B),loc(C,B),capital(C),loc(D,cityid(albany))))).
          _parse([query], answer(A,(population(B,A),const(C,(state(B),loc(B,C))))))).
          _parse([query], answer(A,(population(B,A),largest(B,(state(A),loc(A,B))))))).
          _parse([query], answer(A,(((,(,A),(,A),(,A),(,A),(,A),(,A)))))).
          _parse([query], answer(A,(state(A),loc(B,A),highest(B,((B),))))).
          _parse([query], answer(A,(capital(A),loc(B,C,,state(B),loc(D,C),highest(D,((D))))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A(A,B),const(B,stateid(texas),,,,)))))).
          _parse([query], answer(A,(capital(A),loc(B,C),const(C,(place(B),loc(C,D),const()))))).
          _parse([query], answer(A,(population(B,A),state(B),loc(C,B),const(C,cityid(,cityid(D,cityid)))))).
          _parse([query], answer(A,(len(B,(state(B),loc(C,C),const(C,countryid(usa)))))))).
          _parse([query], answer(A,(population(B,A),state(B),next_to(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,(area(B,A),const(B,countryid(usa))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),state)))).
          _parse([query], answer(A,((B,(state(B),\+(B,C),state))))).
          _parse([query], answer(A,(state(A),\+(A),const(B,B),const(B,)))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid()))))).
          _parse([query], answer(A,count(B,(state(B),loc(C,B),const(C,countryid(usa)))))).
          _parse([query], answer(A,(len(B,A),const(B,B())))river)B)))(B)).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(()))))).
          _parse([query], answer(A,(population(B,A),major(B),loc(B),loc(B,C),const(C)stateid(())))).
          _parse([query], answer(A,(density(B,A),state(B))))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B,(state(A),)(A)B))))).
          _parse([query], answer(A,(state(A),next_to(A,B),,(state(B),next_to(B,C),const(C,stateid))))).
          _parse([query], answer(A,largest((,(,(,,,,,(,B),largest(B,))))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),,(,,,,,,,,,,,,,))))).
          _parse([query], answer(A,(capital(B,A),state(B,(place(B),loc(B,C),largest(C,,(C))))))).
          _parse([query], answer(A,((A,(,(state(@),river(A,@),river(A),river(A),traverse(A))))))).
          _parse([query], answer(A,(len(B,A),state(B),next_to(B,C),largest(C,D),largest(D,E)))).
          _parse([query], answer(A,((A,(state(A),loc(A,A),state(A,,((,,,loc(@,A))))))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(river(A),loc(A,@river(A),traverse(A,B))))).
          _parse([query], answer(A,(density(B,A),state(A),loc(A,B),loc(A,B))))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,C),const(C),)))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B))loc(B)stateid(texas)))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,D),))))).
          _parse([query], answer(A,(population(B,A),const(B,)))).
          _parse([query], answer(A,longest(A,(river(A),traverse(A),)))).
          _parse([query], answer(A,largestpopulation(B,A),const(B),loc(B,C),const(C)stateid(texas)))))).
          _parse([query], answer(A,highest(A,(mountain(A),loc(A,B),const(B,countryid(usa))))))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B)))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(texas)))@(B)C))).
          _parse([query], answer(A,((A,((A),const(A,,)))))).
          _parse([query], answer(A,((A,(mountain(A),loc(A,B),const(B,countryid(usa))))))).
          _parse([query], answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(density(B,A),state(B))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B)))))))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,,,(B),loc(B,C),const())))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(colorado)))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,riverid(colorado)))))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(colorado)),next_to(B,,))))).
          _parse([query], answer(A,((B,(state(A),density(A,B),))))).
          _parse([query], answer(A,(((,(city(A),next_to(A,B),const(B,stateid(B,stateid(texas))))))))).
          _parse([query], answer(A,(((,(,(,(,(,(,(,(,(,A),,(,,,))))))))))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,,(B),,traverse(B),traverse(B,C)))))).
          _parse([query], answer(A,(state(A),loc(A,@),highest(A,(place(A),loc(A,B),const()))))).
          _parse([query], answer(A,((B,(state(A,B),loc(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(population(B,A),const(B,,(()))))).
          _parse([query], answer(A,(((A),loc(B,(city(B),loc(B,C),const(C,,(())))))))).
          _parse([query], answer(A,count(B,(state(B),next_to(C,riverid(mississippi),,traverse(C))traverse(C,B))))).
          _parse([query], answer(A,count(B,(state(B),city(B),loc(B,C),const(C),loc(C,D))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B),const(C,riverid(mississippi)))traverse(C))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,C),const(C,stateid(D,riverid(mississippi)))))).
          _parse([query], answer(A,(population(B,A),const(B),const(B,C),const(C,stateid())))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B))const))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),state(C),)next_to))).
          _parse([query], answer(A,count(B,(state(B),loc(B,C),const(C,stateid(,,)))))).
          _parse([query], answer(A,count(B,(state(B),next_to(C,riverid(C),,river(C),traverse(C,B)))))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(population(B,A),state(A),population(A,B),population(A,B),population(A,A)))).
          _parse([query], answer(A,largest(A,(state(A),loc(A,B),state(B,))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),state(C),next_to(C,D),const(D))))).
          _parse([query], answer(A,(major(A),loc(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,most(A,B)(state(A),river(B,A))river(B),traverse(B,A)))).
          _parse([query], answer(A,most(A,(river(A),traverse(A,B),state(B),next_to(B,A))))).
          _parse([query], answer(A,(state(A),loc(A,B),state(B),next_to(B,C),state(C))))).
          _parse([query], answer(A,largest(A,(,(,))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),highest(B,stateid(B,,)))))).
          _parse([query], answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa))))))).
          _parse([query], answer(A,(state(A),loc(A,B),state(B,stateid(B))))(B))))).
          _parse([query], answer(A,(state(A),loc(A,@),highest(A,place(A),)))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),))))))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(", _stateid ("))))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),state(C),next_to()))).
          _parse([query], answer(A,(state(A),traverse(A,B),state(B),const(B,riverid(mississippi)))))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid("new mexico")))))).
          _parse([query], answer(A,count(B,(major(B),loc(B,C),const(C,countryid(usa))))A))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid("rhode island"))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(", mexico",stateid))))).
          _parse([query], answer(A,(major(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,largest(B,(state(B),next_to(B,C),const(C,stateid()))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa))))))).
          _parse([query], answer(A,largest(B,(state(A),loc(A,B),)))).
          _parse([query], answer(A,(state(A),traverse(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B),const(B,stateid(texas))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,count(B,(state(B),loc(C,B),const(C,cityid(springfield,_)))))).
          _parse([query], answer(A,(state(A),traverse(A,B),const(B),const(B,C),const(C,stateid())))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B),traverse(B,stateid())))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid("new york")))))).
          _parse([query], answer(A,largest(B,(state(B),largest(B))))).
          _parse([query], answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa))))))).
          _parse([query], answer(A,largest(A,(state(A),loc(A,B),largest)))).
          _parse([query], answer(A,count(B,(state(B),city(B),loc(B,C),const(C,stateid(alabama)))))).
          _parse([query], answer(A,smallest(A,(state(A),loc(A,B),smallest(B,stateid(texas)))))).
          _parse([query], answer(A,(state(A),loc(A,,const(A,cityid(springfield,_)))?(A,?)))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa))))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(state(A),next_to(B,riverid(mississippi)),traverse(B),traverse(B,A)))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa))))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi)),river(B),@))).
          _parse([query], answer(A,count(B,(state(B),const(C,riverid(mississippi)),traverse(C,B)))A))).
          _parse([query], answer(A,(area(B,A),const(B,)))).
          _parse([query], answer(A,((B,(state(C)B),state(B),next_to(C,C),const(C,stateid(alabama)))))).
          _parse([query], answer(A,(size(B,A),const(B,cityid(C,,const(C,stateid(texas))))))).
          _parse([query], answer(A,(size(B,A),const(B,(state(B),const(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa))))))).
          _parse([query], answer(A,(state(A),const(B,cityid(B,,(),const(B,cityid(springfield,_))))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,riverid(mississippi))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(size(B,A),const(B,(place(B),loc(B,C),const(C,stateid())))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("south dakota"))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa))))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid("new mexico")))))).
          _parse([query], answer(A,(area(B,A),smallest(B,((B),))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,largest(A,(state(A),loc(A,B),const(B,stateid(oregon)))))).
          _parse([query], answer(A,count(B,(state(B),const(C,riverid(C),loc(C,B)),A)))).
          _parse([query], answer(A,largest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,largest(B,(city(B),loc(B,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,largest(B,(state(A),city(A),loc(A,C),const(C,cityid(denver,_)))))).
          _parse([query], answer(A,((A,(place(A),loc(A,B),const(B,countryid(usa))))))).
          _parse([query], answer(A,(state(A),next_to(A,@),state(A),traverse(A,@))))).
          _parse([query], answer(A,(major(A),lake(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new mexico")))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid("new carolina"))))).
          _parse([query], answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid("south carolina"))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid()))))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(colorado))))A))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,largest(B,(city(C,((city),,population(C),population(C,B))population(B,B)))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid())))).
          _parse([query], answer(A,(population(B,A),const(B,stateid())))).
          _parse([query], answer(A,largestarea(A),loc(B,(state(A),)(A,B))))).
          _parse([query], answer(A,((A,(river(A),loc(A,B),const(B,stateid(texas))))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(california))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid()))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(california)))))).
          _parse([query], answer(A,(state(A),const(B,stateid(california))))))).
          _parse([query], answer(A,largest(B,(state(A),city(A),population(A,B)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(california)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(california)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new york")))))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B)))))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,stateid((),)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("north york"))))).
          _parse([query], answer(A,(major(A),loc(A,B),const(B,stateid(usa)))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(illinois))))))).
          _parse([query], answer(A,count(B,(state(B),loc(B,C),const(C,stateid(A)))))).
          _parse([query], answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(washington,ma))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(georgia)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid("new york"))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(pennsylvania)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(michigan))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid())))).
          _parse([query], answer(A,(state(A),const(A,B),const(B),const(B,C),const(C,stateid(colorado))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(georgia)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(wisconsin)))))).
          _parse([query], answer(A,(population(B,A),const(B,countryid(usa)))))).
          _parse([query], answer(A,(state(A),const(B,riverid(mississippi)))traverse(B,A)))).
          _parse([query], answer(A,(state(A),const(A,((A),)traverse(A,@))))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(mississippi)))))).
          _parse([query], answer(A,longest(A,(,(river(A),traverse(A,A))state(A)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(wisconsin)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boston)B))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boston,ma))))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(kansas))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid())))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(wisconsin))))).
          _parse([query], answer(A,(state(A),loc(B,cityid(austin,_)))capital(B),loc(B,A)))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new mckinley"))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,countryid(mississippi)))traverse(C),))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(wisconsin)))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(colorado)))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi))),river(B)))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(alaska))))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(state(A),const(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid("new mexico"))))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(arkansas))))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(washington,mo))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(washington)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(wisconsin)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(delaware))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(area(B,A),const(B),))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,D(D),))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(wyoming)))))).
          _parse([query], answer(A,count(B,(state(B),loc(C,B),city(C),loc(C,cityid(austin,tx)))))).
          _parse([query], answer(A,count(B,(city(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new hampshire"))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,tx))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(wyoming)))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid("new hampshire")))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(seattle,wa))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(alaska))))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,smallest(A,(state(A),next_to(A,B),const(B,stateid()))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(colorado)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(wyoming)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(wyoming)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(montana)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(oregon)))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,riverid(mississippi))))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,smallest(A,(state(A),loc(A,B),const(B,stateid()))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(iowa)))))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(arizona))))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(iowa)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austinnewdc))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(oregon)))))).
          _parse([query], answer(A,largest(A,(river(A),loc(A,B),const(B,stateid(oregon)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("south dakota"))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(florida)))))).
          _parse([query], answer(A,(river(A),traverse(traverse(A,B),const(B,stateid(ohio)))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(florida))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(wyoming)))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("south dakota"))))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid())))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(elevation(B,A),const(B,stateid("death valley")))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(colorado)))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,riverid(colorado)),,@)))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,count(B,(state(B),loc(C,B(texas)),A(C,A)))A))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,largest(B,(state(A),city(B,A))next_to(A))))).
          _parse([query], answer(A,(major(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(wyoming))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(wyoming))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),loc(B,A),city(B),loc(B,stateid(B,_))))).
          _parse([query], answer(A,largest(B,(city(B),loc(B,A))))).
          _parse([query], answer(A,count(B,(state(B),const(C,riverid(colorado)),const(C,B)))A))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(california))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(riverside,_))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(texas))))A))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(california))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(indiana))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(riverside,_))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(riverside,_))))).
          _parse([query], answer(A,count(B,(state(B),loc(C,B),const(C,stateid(colorado)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(denver,_))))).
          _parse([query], answer(A,(state(A),loc(B,A),capital(B,A(B))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(california))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,cityid(_,_))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,count(B,(state(B),next_to(C,stateid(iowa)),next_to(C,B)))A))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(dallas,_))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(california))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(texas)))))))).
          _parse([query], answer(A,(river(A),next_to(A,B),const(B,riverid(colorado)))traverse(B)))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(seattle,_))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(seattle,_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(california))))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(iowa)))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(michigan))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(minnesota))))).
          _parse([query], answer(A,largest(B,(state(B),population(A,B))))).
          _parse([query], answer(A,((A,(state(A),loc(A,@))loc(A))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid())))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(montana))))).
          _parse([query], answer(A,(state(A),loc(B,A),capital(B),loc(B,A),loc(B,A)))).
          _parse([query], answer(A,(state(A),\+(river(@),traverse(A,@))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(minnesota))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(kalamazoo,_))))).
          _parse([query], answer(A,((A,(river(A),loc(A,B),const(B,countryid(usa))))))).
          _parse([query], answer(A,(river(A),river(A),loc(A,B),const(B,stateid(virginia))))).
          _parse([query], answer(A,count(B,(city(B),loc(B,C),const(C,stateid(montana)))))).
          _parse([query], answer(A,(state(@),area(@,A))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(vermont))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(virginia))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(michigan))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(oregon))))).
          _parse([query], answer(A,count(B,(city(B),loc(B,C),const(C,stateid(montana))))A))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(idaho))))).
          _parse([query], answer(A,largest(B,(state(A),loc(A,B))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(montana))))).
          _parse([query], answer(A,(state(A),\+(state(A,B),state(B))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(chicago,_))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(chicago,_))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(michigan))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(chicago,_))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi)))river(B)))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(idaho))))).
          _parse([query], answer(A,(river(A),\+(traverse(A,B),const(B,stateid(illinois)))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(maine))))).
          _parse([query], answer(A,count(B,(major(B),river(B),loc(B,C),const(C,stateid(idaho)))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(idaho))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(louisiana))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(washington))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(idaho)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(maine))))).
          _parse([query], answer(A,longest(A,(river(A),traverse(A,@))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(maine))))).
          _parse([query], answer(A,most(B,most(B,C,B),most(C,)))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),)))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(pennsylvania))))A))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(missouri))))A))).
          _parse([query], answer(A,(state(A),loc(B,cityid(dallas,_)),loc(B,A))))).
          _parse([query], answer(A,(river(A),river(river(@,@),river(A))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(ohio))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(maine))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(alaska))),A))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(pennsylvania))))).
          _parse([query], answer(A,largest(B,((B),)))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(pennsylvania))))).
          _parse([query], answer(A,largest(A,((A),)))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(kansas))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,((A,B,(state(A),loc(B,C),river(C)))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alaskawestmexico))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(iowa))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(maine))))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid()))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(tennessee))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(washington))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(hawaiinew))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(washington,_))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(maine))))).
          _parse([query], answer(A,largest(A,(state(A))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,cityid(dallas,_))))).
          _parse([query], answer(A,shortest(A,((A))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid("rhode island"))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(alaska)))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi))))).
          _parse([query], answer(A,(city(A),city(A),loc(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(state(A),loc(A,cityid(dallas,_)))loc(A,@)))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,cityid(rochester,_))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid("new hampshire")))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid("new hampshire")))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,cityid(rochester,_))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid("south dakota"))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(B,A),)))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(virginia))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(nevada))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid("mount"))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(maine))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(virginia))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid("north dakota"))))).
          _parse([query], answer(A,largest(A,(state(A))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boulder,_))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(boulder))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(arkansas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid())))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid())))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),const(A,B),const(B,stateid(maine))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid())))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid(","))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(michigan))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid())))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("san jose")_))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))).
          _parse([query], answer(A,(loc(B,A),const(B,stateid())))).
          _parse([query], answer(A,largest(A,(state(A))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid())))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("san diego",_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(michigan))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(arkansas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(loc(B,A),const(B,placeid("mount whitney"))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boulder,_))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid())))).
          _parse([query], answer(A,(state(A),next_to))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boulder,_))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("baton rouge"))))).
          DatalogParser.loadSafe(): end
        } [2.5s, cum. 2.5s]
        960 statements
        Example tmpmq8f_g1t.dlog:0: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),traverse(A,B),state(B),next_to(B,C),most(C,D,(state(C),next_to(C,D),state(D))))))
        Example tmpmq8f_g1t.dlog:1: query => {[270230count]} | answer(A,(population(B,A),capital(B),loc(B,C),largest(C,(state(C),const(D,riverid(mississippi)),traverse(D,C)))))
        Example tmpmq8f_g1t.dlog:2: query => {[arizona:stateid/2]} | answer(A,largest(A,(state(A),next_to(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,countryid(usa)))))))
        Example tmpmq8f_g1t.dlog:3: query => {[3778000length]} | answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))
        Example tmpmq8f_g1t.dlog:4: query => {} | answer(A,(high_point(B,A),state(B),low_point(B,C),elevation(C,0.0)))
        Example tmpmq8f_g1t.dlog:5: query => {[tombigbee:riverid/2],[chattahoochee:riverid/2],[roanoke:riverid/2],[wateree catawba:riverid/2],[cumberland:riverid/2],[tennessee:riverid/2],[mississippi:riverid/2]} | answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),state(C),loc(D,C),capital(D),const(D,cityid(atlanta,_))))
        Example tmpmq8f_g1t.dlog:6: query => {[mount hood:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),state(B),const(B,stateid(oregon)))))
        Example tmpmq8f_g1t.dlog:7: query => {[colorado:riverid/2]} | answer(A,(river(A),traverse(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,countryid(usa))))))
        Example tmpmq8f_g1t.dlog:8: query => {[columbia:riverid/2],[gila:riverid/2],[snake:riverid/2],[colorado:riverid/2]} | answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),largest(D,(state(C),population(C,D)))))
        Example tmpmq8f_g1t.dlog:9: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),traverse(A,B),state(B),next_to(B,C),const(C,stateid(tennessee)))))
        Example tmpmq8f_g1t.dlog:10: query => {[colorado:riverid/2]} | answer(A,(river(A),traverse(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,countryid(usa))))))
        Example tmpmq8f_g1t.dlog:11: query => {[2364000count],[4206000count],[4916000count],[2286000count],[4700000count],[2913000count],[2520000count],[4076000count],[4591000count],[11400000count]} | answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)))
        Example tmpmq8f_g1t.dlog:12: query => {} | answer(A,largest(A,(city(A),loc(A,B),state(B),next_to(B,C),largest(C,state(C)))))
        Example tmpmq8f_g1t.dlog:13: query => {[2364000count],[4206000count],[4916000count],[2286000count],[4700000count],[2913000count],[2520000count],[4076000count],[4591000count],[11400000count]} | answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)))
        Example tmpmq8f_g1t.dlog:14: query => {[arizona:stateid/2]} | answer(A,largest(A,(state(A),next_to(A,B),largest(C,(state(B),population(B,C))))))
        Example tmpmq8f_g1t.dlog:15: query => {[new orleans:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B))))
        Example tmpmq8f_g1t.dlog:16: query => {[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[wyoming:stateid/2],[georgia:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[washington:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),state(C),next_to(C,D),state(D),next_to(D,E),const(E,stateid(texas))))
        Example tmpmq8f_g1t.dlog:17: query => {[ocheyedan mound:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),state(B),loc(C,B),capital(C),const(C,cityid('des moines',_)))))
        Example tmpmq8f_g1t.dlog:18: query => {} | answer(A,(state(A),loc(B,A),capital(B),high_point(A,B)))
        Example tmpmq8f_g1t.dlog:19: query => {} | answer(A,(major(A),city(A),loc(A,B),smallest(B,(state(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpmq8f_g1t.dlog:20: query => {[juneau_ak:cityid/3]} | answer(A,(capital(A),city(A),loc(A,B),largest(B,(state(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpmq8f_g1t.dlog:21: query => {[2.62e-07count/length^2]} | answer(A,(density(B,A),smallest(C,(state(B),population(B,C)))))
        Example tmpmq8f_g1t.dlog:22: query => {[potomac:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),smallest(B,(state(B),loc(B,C),const(C,countryid(usa)))))))
        Example tmpmq8f_g1t.dlog:23: query => {[washington_dc:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),smallest(B,(state(B),loc(B,C),const(C,countryid(usa)))))))
        Example tmpmq8f_g1t.dlog:24: query => {[mount elbert:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),most(B,C,(state(B),traverse(C,B),river(C))))))
        Example tmpmq8f_g1t.dlog:25: query => {[4count]} | answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa)),shortest(D,river(D)),traverse(D,B)),A))
        Example tmpmq8f_g1t.dlog:26: query => {[2364000count],[4206000count],[4916000count],[2286000count],[4700000count],[2913000count],[2520000count],[4076000count],[4591000count],[11400000count]} | answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example tmpmq8f_g1t.dlog:27: query => {[2364000count],[4206000count],[4916000count],[2286000count],[4700000count],[2913000count],[2520000count],[4076000count],[4591000count],[11400000count]} | answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)))
        Example tmpmq8f_g1t.dlog:28: query => {[7365000count]} | answer(A,(population(B,A),largest(C,(state(B),density(B,C)))))
        Example tmpmq8f_g1t.dlog:29: query => {[ocheyedan mound:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),state(B),loc(C,B),capital(C),const(C,cityid('des moines',_)))))
        Example tmpmq8f_g1t.dlog:30: query => {[43count]} | answer(A,count(B,(river(B),\+(traverse(B,C),state(C),loc(D,C),capital(D),const(D,cityid(albany,_)))),A))
        Example tmpmq8f_g1t.dlog:31: query => {[pacific ocean:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),largest(C,(state(B),area(B,C))))))
        Example tmpmq8f_g1t.dlog:32: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),smallest(C,(state(B),population(B,C))))))
        Example tmpmq8f_g1t.dlog:33: query => {} | answer(A,longest(A,(river(A),loc(A,B),state(B),loc(C,B),highest(C,place(C)))))
        Example tmpmq8f_g1t.dlog:34: query => {[2364000count],[4206000count],[4916000count],[2286000count],[4700000count],[2913000count],[2520000count],[4076000count],[4591000count],[11400000count]} | answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example tmpmq8f_g1t.dlog:35: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),largest(C,(state(B),area(B,C))))))
        Example tmpmq8f_g1t.dlog:36: query => {[2.24e-04count/length^2]} | answer(A,(density(B,A),smallest(C,(state(B),area(B,C)))))
        Example tmpmq8f_g1t.dlog:37: query => {[1.53e+12length^2]} | answer(A,(area(B,A),smallest(C,(state(B),density(B,C)))))
        Example tmpmq8f_g1t.dlog:38: query => {[3778000length]} | answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))
        Example tmpmq8f_g1t.dlog:39: query => {[jefferson city_mo:cityid/3],[nashville_tn:cityid/3]} | answer(A,(capital(A),loc(A,B),most(B,C,(state(B),next_to(B,C),state(C)))))
        Example tmpmq8f_g1t.dlog:40: query => {[6194length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpmq8f_g1t.dlog:41: query => {[alaska:stateid/2],[hawaii:stateid/2]} | answer(A,fewest(A,B,(state(A),next_to(A,B),state(B),\+const(A,stateid(alaska)),\+const(A,stateid(hawaii)))))
        Example tmpmq8f_g1t.dlog:42: query => {[1.53e+12length^2]} | answer(A,(size(B,A),largest(B,(state(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpmq8f_g1t.dlog:43: query => {[66842count],[56725count]} | answer(A,(population(B,A),major(B),city(B),loc(B,C),const(C,stateid(montana))))
        Example tmpmq8f_g1t.dlog:44: query => {[massachusetts:stateid/2],[oregon:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[ohio:stateid/2]} | answer(A,(state(A),loc(A,B),const(B,countryid(usa)),loc(C,A),const(C,cityid(springfield,_))))
        Example tmpmq8f_g1t.dlog:45: query => {[10820000count]} | answer(A,sum(B,(state(B),next_to(C,B),const(C,stateid(texas))),population(B),A))
        Example tmpmq8f_g1t.dlog:46: query => {} | answer(A,(population(B,A),capital(B),loc(B,C),largest(C,state(C))))
        Example tmpmq8f_g1t.dlog:47: query => {[baton rouge_la:cityid/3],[santa fe_nm:cityid/3],[oklahoma city_ok:cityid/3],[little rock_ar:cityid/3]} | answer(A,(capital(A),city(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))
        Example tmpmq8f_g1t.dlog:48: query => {[1.27e+11length^2]} | answer(A,(area(B,A),state(B),loc(C,B),capital(C),const(C,cityid(albany,_))))
        Example tmpmq8f_g1t.dlog:49: query => {[2364000count],[4206000count],[4916000count],[2286000count],[4700000count],[2913000count],[2520000count],[4076000count],[4591000count],[11400000count]} | answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example tmpmq8f_g1t.dlog:50: query => {[illinois:stateid/2]} | answer(A,largest(B,(state(A),const(C,riverid(mississippi)),traverse(C,A),population(A,B))))
        Example tmpmq8f_g1t.dlog:51: query => {[new orleans_la:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas)))))
        Example tmpmq8f_g1t.dlog:52: query => {[california:stateid/2]} | answer(A,(state(A),loc(B,A),lowest(B,place(B))))
        Example tmpmq8f_g1t.dlog:53: query => {[juneau_ak:cityid/3]} | answer(A,(capital(A),loc(A,B),state(B),loc(C,B),highest(C,place(C))))
        Example tmpmq8f_g1t.dlog:54: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),\+(traverse(A,B),const(B,stateid(texas))))))
        Example tmpmq8f_g1t.dlog:55: query => {[juneau_ak:cityid/3]} | answer(A,(capital(A),loc(A,B),highest(C,(state(B),loc(C,B),place(C)))))
        Example tmpmq8f_g1t.dlog:56: query => {[2.06e-05count/length^2]} | answer(A,(density(B,A),state(B),loc(C,B),capital(C),const(C,cityid(austin,_))))
        Example tmpmq8f_g1t.dlog:57: query => {[3968000length]} | answer(A,(len(B,A),longest(B,(river(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpmq8f_g1t.dlog:58: query => {[1303000count]} | answer(A,(population(B,A),largest(B,(state(B),next_to(B,C),const(C,stateid(texas))))))
        Example tmpmq8f_g1t.dlog:59: query => {[3.13e-05count/length^2]} | answer(A,(density(B,A),const(B,countryid(usa))))
        Example tmpmq8f_g1t.dlog:60: query => {[14count]} | answer(A,count(B,(state(B),next_to(B,C),most(C,D,(state(C),next_to(C,D),state(D)))),A))
        Example tmpmq8f_g1t.dlog:61: query => {[1count]} | answer(A,count(B,(river(B),loc(B,C),largest(D,(state(C),population(C,D)))),A))
        Example tmpmq8f_g1t.dlog:62: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),traverse(B,A),largest(B,(river(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpmq8f_g1t.dlog:63: query => {[5count]} | answer(A,count(B,(state(B),next_to(B,C),state(C),loc(D,C),capital(D),const(D,cityid(boston,_))),A))
        Example tmpmq8f_g1t.dlog:64: query => {[1count]} | answer(A,count(B,(city(B),const(B,cityid(austin,_)),loc(B,C),const(C,countryid(usa))),A))
        Example tmpmq8f_g1t.dlog:65: query => {} | answer(A,(len(B,A),const(B,riverid(colorado)),river(B),loc(B,C),const(C,stateid(texas))))
        Example tmpmq8f_g1t.dlog:66: query => {[alaska:stateid/2],[california:stateid/2]} | answer(A,(state(A),high_point(A,B),higher(B,C),high_point(D,C),const(D,stateid(colorado))))
        Example tmpmq8f_g1t.dlog:67: query => {[85725count],[58913count],[63982count],[77685count],[87899count]} | answer(A,(population(B,A),major(B),city(B),loc(B,C),const(C,stateid(wisconsin))))
        Example tmpmq8f_g1t.dlog:68: query => {[4916000count]} | answer(A,(population(B,A),const(B,stateid(missouri))))
        Example tmpmq8f_g1t.dlog:69: query => {[colorado:riverid/2]} | answer(A,(river(A),traverse(A,B),largest(C,(state(B),population(B,C)))))
        Example tmpmq8f_g1t.dlog:70: query => {[phoenix_az:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(california)))))
        Example tmpmq8f_g1t.dlog:71: query => {[houston_tx:cityid/3]} | answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(texas)),population(A,B))))
        Example tmpmq8f_g1t.dlog:72: query => {[1count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid(texas)),longer(B,D),const(D,riverid(red))),A))
        Example tmpmq8f_g1t.dlog:73: query => {[6194length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),largest(C,state(C))))))
        Example tmpmq8f_g1t.dlog:74: query => {[new york:stateid/2],[colorado:stateid/2],[wyoming:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),major(B),river(B),traverse(B,A))))
        Example tmpmq8f_g1t.dlog:75: query => {[minnesota:stateid/2]} | answer(A,largest(A,(state(A),traverse(B,A),const(B,riverid(mississippi)))))
        Example tmpmq8f_g1t.dlog:76: query => {[houston_tx:cityid/3]} | answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(texas)),population(A,B))))
        Example tmpmq8f_g1t.dlog:77: query => {} | answer(A,(elevation(B,A),highest(B,(mountain(B),loc(B,C),const(C,stateid(texas))))))
        Example tmpmq8f_g1t.dlog:78: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),longest(B,(river(B),traverse(B,A)))))
        Example tmpmq8f_g1t.dlog:79: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B),loc(A,C),const(C,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:80: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:81: query => {[gulf of mexico:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),state(B),const(B,stateid(texas)))))
        Example tmpmq8f_g1t.dlog:82: query => {[alaska:stateid/2]} | answer(A,(loc(B,A),state(A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpmq8f_g1t.dlog:83: query => {[3.13e-05count/length^2]} | answer(A,(density(B,A),const(B,countryid(usa))))
        Example tmpmq8f_g1t.dlog:84: query => {[rio grande:riverid/2]} | answer(A,longest(A,(river(A),traverse(A,B),const(B,stateid(colorado)))))
        Example tmpmq8f_g1t.dlog:85: query => {[345496count]} | answer(A,(size(B,A),capital(B),loc(B,C),const(C,stateid(texas))))
        Example tmpmq8f_g1t.dlog:86: query => {[death valley:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:87: query => {[alaska:stateid/2]} | answer(A,(state(A),loc(B,A),highest(B,place(B))))
        Example tmpmq8f_g1t.dlog:88: query => {[3count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(colorado)),next_to(B,D),const(D,stateid('new mexico'))),A))
        Example tmpmq8f_g1t.dlog:89: query => {[9.51e+12length^2]} | answer(A,sum(B,state(B),area(B),A))
        Example tmpmq8f_g1t.dlog:90: query => {[mckinley:mountainid/2]} | answer(A,highest(A,(mountain(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:91: query => {[451000length]} | answer(A,(len(B,A),shortest(B,(river(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpmq8f_g1t.dlog:92: query => {[2.24e-04count/length^2]} | answer(A,(density(B,A),smallest(B,state(B))))
        Example tmpmq8f_g1t.dlog:93: query => {[louisiana:stateid/2]} | answer(A,largest(B,(state(A),next_to(A,C),const(C,stateid(texas)),population(A,B))))
        Example tmpmq8f_g1t.dlog:94: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),next_to(A,B),longest(B,(river(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpmq8f_g1t.dlog:95: query => {[2.71e+10length^2]} | answer(A,(area(B,A),const(B,stateid(maryland))))
        Example tmpmq8f_g1t.dlog:96: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[kansas:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[west virginia:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example tmpmq8f_g1t.dlog:97: query => {[oxnard_ca:cityid/3],[bristol township_pa:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[fayetteville_nc:cityid/3],[orlando_fl:cityid/3],[san angelo_tx:cityid/3],[downey_ca:cityid/3],[greenville_sc:cityid/3],[concord_ca:cityid/3],[richardson_tx:cityid/3],[columbia_sc:cityid/3],[waukegan_il:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[lowell_ma:cityid/3],[charleston_sc:cityid/3],[largo_fl:cityid/3],[clearwater_fl:cityid/3],[bayonne_nj:cityid/3],[manchester_nh:cityid/3],[amarillo_tx:cityid/3],[vallejo_ca:cityid/3],[grand prairie_tx:cityid/3],[san bernardino_ca:cityid/3],[lakewood_oh:cityid/3],[bethesda_md:cityid/3],[evanston_il:cityid/3],[medford_ma:cityid/3],[san leandro_ca:cityid/3],[lakewood_co:cityid/3],[pueblo_co:cityid/3],[great falls_mt:cityid/3],[boise_id:cityid/3],[modesto_ca:cityid/3],[richmond_ca:cityid/3],[north charleston_sc:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[bellevue_wa:cityid/3],[reno_nv:cityid/3],[warwick_ri:cityid/3],[schenectady_ny:cityid/3],[sterling heights_mi:cityid/3],[peoria_il:cityid/3],[santa clara_ca:cityid/3],[bethlehem_pa:cityid/3],[utica_ny:cityid/3],[salem_or:cityid/3],[columbia_mo:cityid/3],[alexandria_va:cityid/3],[springfield_mo:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[livonia_mi:cityid/3],[lawton_ok:cityid/3],[fargo_nd:cityid/3],[citrus heights_ca:cityid/3],[waterford_mi:cityid/3],[independence_mo:cityid/3],[silver spring_md:cityid/3],[waco_tx:cityid/3],[carson_ca:cityid/3],[bristol_ct:cityid/3],[glendale_ca:cityid/3],[wyoming_mi:cityid/3],[rochester_mn:cityid/3],[beaumont_tx:cityid/3],[oceanside_ca:cityid/3],[oak lawn_il:cityid/3],[east orange_nj:cityid/3],[scranton_pa:cityid/3],[westland_mi:cityid/3],[south gate_ca:cityid/3],[bloomington_mn:cityid/3],[royal oak_mi:cityid/3],[terre haute_in:cityid/3],[ogden_ut:cityid/3],[longview_tx:cityid/3],[anderson_in:cityid/3],[springfield_oh:cityid/3],[waterloo_ia:cityid/3],[troy_mi:cityid/3],[rockford_il:cityid/3],[somerville_ma:cityid/3],[lynn_ma:cityid/3],[quincy_ma:cityid/3],[cicero_il:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[huntington_wv:cityid/3],[norwalk_ct:cityid/3],[bridgeport_ct:cityid/3],[ontario_ca:cityid/3],[alhambra_ca:cityid/3],[lorain_oh:cityid/3],[penn hills_pa:cityid/3],[macon_ga:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[billings_mt:cityid/3],[dearborn heights_mi:cityid/3],[wilmington_de:cityid/3],[hayward_ca:cityid/3],[irving_tx:cityid/3],[scottsdale_az:cityid/3],[cedar rapids_ia:cityid/3],[santa monica_ca:cityid/3],[kettering_oh:cityid/3],[santa rosa_ca:cityid/3],[gainesville_fl:cityid/3],[kendall_fl:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[arvada_co:cityid/3],[brownsville_tx:cityid/3],[sioux falls_sd:cityid/3],[kalamazoo_mi:cityid/3],[south bend_in:cityid/3],[clifton_nj:cityid/3],[chula vista_ca:cityid/3],[euclid_oh:cityid/3],[redondo beach_ca:cityid/3],[hartford_ct:cityid/3],[mesquite_tx:cityid/3],[clinton_mi:cityid/3],[burbank_ca:cityid/3],[farmington hills_mi:cityid/3],[middletown_nj:cityid/3],[pasadena_tx:cityid/3],[racine_wi:cityid/3],[youngstown_oh:cityid/3],[huntsville_al:cityid/3],[cheektowaga_ny:cityid/3],[framingham_ma:cityid/3],[monroe_la:cityid/3],[tallahassee_fl:cityid/3],[champaign_il:cityid/3],[tuscaloosa_al:cityid/3],[boulder_co:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[woodbridge_nj:cityid/3],[reading_pa:cityid/3],[newport news_va:cityid/3],[wichita falls_tx:cityid/3],[fort smith_ar:cityid/3],[danbury_ct:cityid/3],[mount vernon_ny:cityid/3],[fort collins_co:cityid/3],[ann arbor_mi:cityid/3],[waltham_ma:cityid/3],[nashua_nh:cityid/3],[alameda_ca:cityid/3],[stamford_ct:cityid/3],[arlington heights_il:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[laredo_tx:cityid/3],[high point_nc:cityid/3],[dubuque_ia:cityid/3],[sunnyvale_ca:cityid/3],[charleston_wv:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[dundalk_md:cityid/3],[meriden_ct:cityid/3],[west allis_wi:cityid/3],[lynchburg_va:cityid/3],[west hartford_ct:cityid/3],[southfield_mi:cityid/3],[paterson_nj:cityid/3],[altoona_pa:cityid/3],[lansing_mi:cityid/3],[hollywood_fl:cityid/3],[st. clair shores_mi:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[ventura_ca:cityid/3],[new bedford_ma:cityid/3],[tempe_az:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[pensacola_fl:cityid/3],[duluth_mn:cityid/3],[greenwich_ct:cityid/3],[skokie_il:cityid/3],[elyria_oh:cityid/3],[sioux city_ia:cityid/3],[bakersfield_ca:cityid/3],[niagara falls_ny:cityid/3],[thousand oaks_ca:cityid/3],[cranston_ri:cityid/3],[evansville_in:cityid/3],[trenton_nj:cityid/3],[redford_mi:cityid/3],[kenosha_wi:cityid/3],[durham_nc:cityid/3],[fremont_ca:cityid/3],[camden_nj:cityid/3],[miami beach_fl:cityid/3],[odessa_tx:cityid/3],[appleton_wi:cityid/3],[muncie_in:cityid/3],[overland park_ks:cityid/3],[green bay_wi:cityid/3],[topeka_ks:cityid/3],[edison_nj:cityid/3],[waterbury_ct:cityid/3],[hampton_va:cityid/3],[west valley_ut:cityid/3],[st. joseph_mo:cityid/3],[savannah_ga:cityid/3],[torrance_ca:cityid/3],[lakewood_ca:cityid/3],[casper_wy:cityid/3],[hammond_in:cityid/3],[irvington_nj:cityid/3],[abingdon_pa:cityid/3],[eugene_or:cityid/3],[joliet_il:cityid/3],[simi valley_ca:cityid/3],[west palm beach_fl:cityid/3],[dearborn_mi:cityid/3],[cherry hill_nj:cityid/3],[new haven_ct:cityid/3],[lawrence_ma:cityid/3],[chesapeake_va:cityid/3],[springfield_il:cityid/3],[erie_pa:cityid/3],[compton_ca:cityid/3],[levittown_ny:cityid/3],[aurora_il:cityid/3],[albany_ny:cityid/3],[elizabeth_nj:cityid/3],[pontiac_mi:cityid/3],[whittier_ca:cityid/3],[decatur_il:cityid/3],[pawtucket_ri:cityid/3],[koolaupoko_hi:cityid/3],[north little rock_ar:cityid/3],[lake charles_la:cityid/3],[fullerton_ca:cityid/3],[davenport_ia:cityid/3],[fall river_ma:cityid/3],[brockton_ma:cityid/3],[midland_tx:cityid/3],[new rochelle_ny:cityid/3],[lafayette_la:cityid/3],[parma_oh:cityid/3],[allentown_pa:cityid/3],[provo_ut:cityid/3],[upper darby_pa:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[roanoke_va:cityid/3],[pasadena_ca:cityid/3],[port arthur_tx:cityid/3],[newton_ma:cityid/3],[glendale_az:cityid/3],[tyler_tx:cityid/3],[new britain_ct:cityid/3],[escondido_ca:cityid/3],[elgin_il:cityid/3],[cambridge_ma:cityid/3],[lower merion_pa:cityid/3],[irondequoit_ny:cityid/3],[norman_ok:cityid/3],[portland_me:cityid/3],[taylor_mi:cityid/3],[albany_ga:cityid/3],[hamilton_oh:cityid/3],[saginaw_mi:cityid/3],[kenner_la:cityid/3],[canton_oh:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,countryid(usa))))
        Example tmpmq8f_g1t.dlog:98: query => {[washita:riverid/2],[pecos:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[red:riverid/2]} | answer(A,(river(A),loc(A,B),state(B),const(B,stateid(texas))))
        Example tmpmq8f_g1t.dlog:99: query => {[7count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(kentucky))),A))
        Example tmpmq8f_g1t.dlog:100: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example tmpmq8f_g1t.dlog:101: query => {[baton rouge_la:cityid/3],[santa fe_nm:cityid/3],[oklahoma city_ok:cityid/3],[little rock_ar:cityid/3]} | answer(A,(capital(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))
        Example tmpmq8f_g1t.dlog:102: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:103: query => {[5count]} | answer(A,count(B,(state(B),const(C,riverid(colorado)),river(C),traverse(C,B)),A))
        Example tmpmq8f_g1t.dlog:104: query => {[alaska:stateid/2]} | answer(A,(state(A),loc(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpmq8f_g1t.dlog:105: query => {[phoenix_az:cityid/3]} | answer(A,largest(B,(population(A,B),capital(A),loc(A,C),const(C,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:106: query => {[800500count]} | answer(A,(population(B,A),const(B,stateid(nevada))))
        Example tmpmq8f_g1t.dlog:107: query => {[montana:stateid/2]} | answer(A,(state(A),largest(B,(city(B),loc(B,C),const(C,stateid(montana)))),loc(B,A)))
        Example tmpmq8f_g1t.dlog:108: query => {[10count]} | answer(A,count(B,(state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)),A))
        Example tmpmq8f_g1t.dlog:109: query => {[11count]} | answer(A,count(B,(major(B),city(B),loc(B,C),state(C),next_to(C,D),const(D,stateid(utah))),A))
        Example tmpmq8f_g1t.dlog:110: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[kansas:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[west virginia:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example tmpmq8f_g1t.dlog:111: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[kansas:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[west virginia:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example tmpmq8f_g1t.dlog:112: query => {[425022count]} | answer(A,(population(B,A),capital(B),loc(B,C),const(C,stateid(georgia))))
        Example tmpmq8f_g1t.dlog:113: query => {[clingmans dome:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(mississippi)))))
        Example tmpmq8f_g1t.dlog:114: query => {[49count]} | answer(A,count(B,(state(B),next_to(B,C),state(C)),A))
        Example tmpmq8f_g1t.dlog:115: query => {[5count]} | answer(A,count(B,(state(B),loc(C,B),city(C),const(C,cityid(springfield,_))),A))
        Example tmpmq8f_g1t.dlog:116: query => {[6count]} | answer(A,count(B,(state(B),const(C,riverid(missouri)),river(C),traverse(C,B)),A))
        Example tmpmq8f_g1t.dlog:117: query => {[delaware:riverid/2]} | answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:118: query => {[new york:stateid/2]} | answer(A,(state(A),loc(B,A),largest(C,(city(B),population(B,C)))))
        Example tmpmq8f_g1t.dlog:119: query => {[washington_dc:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),smallest(B,state(B)))))
        Example tmpmq8f_g1t.dlog:120: query => {[24count]} | answer(A,count(B,(river(B),traverse(B,C),state(C),next_to(C,D),const(D,stateid(colorado))),A))
        Example tmpmq8f_g1t.dlog:121: query => {[naknek:lakeid/2],[salton sea:lakeid/2],[okeechobee:lakeid/2],[red:lakeid/2],[teshekpuk:lakeid/2],[flathead:lakeid/2],[tahoe:lakeid/2],[becharof:lakeid/2],[lake of the woods:lakeid/2],[iliamna:lakeid/2],[winnebago:lakeid/2],[rainy:lakeid/2],[pontchartrain:lakeid/2],[champlain:lakeid/2],[st. clair:lakeid/2],[mille lacs:lakeid/2]} | answer(A,(major(A),lake(A),loc(A,B),const(B,countryid(usa))))
        Example tmpmq8f_g1t.dlog:122: query => {[colorado:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),river(B),traverse(B,A))))
        Example tmpmq8f_g1t.dlog:123: query => {[colorado:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),river(B),traverse(B,A))))
        Example tmpmq8f_g1t.dlog:124: query => {} | answer(A,(major(A),city(A),loc(A,B),largest(B,state(B))))
        Example tmpmq8f_g1t.dlog:125: query => {[california:stateid/2]} | answer(A,largest(B,(population(A,B),state(A),loc(A,C),const(C,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:126: query => {[jerimoth hill:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid('rhode island')))))
        Example tmpmq8f_g1t.dlog:127: query => {[alaska:stateid/2]} | answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:128: query => {[montgomery_al:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(alabama)),state(B)))
        Example tmpmq8f_g1t.dlog:129: query => {[california:stateid/2]} | answer(A,(state(A),loc(B,A),lowest(B,place(B))))
        Example tmpmq8f_g1t.dlog:130: query => {[wabash:riverid/2],[ohio:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(ohio))))
        Example tmpmq8f_g1t.dlog:131: query => {[sassafras mountain:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid('south carolina')))))
        Example tmpmq8f_g1t.dlog:132: query => {[alaska:stateid/2],[hawaii:stateid/2]} | answer(A,(state(A),\+(next_to(A,B),state(B))))
        Example tmpmq8f_g1t.dlog:133: query => {[new york:stateid/2],[pennsylvania:stateid/2],[delaware:stateid/2],[new jersey:stateid/2]} | answer(A,(state(A),shortest(B,river(B)),traverse(B,A)))
        Example tmpmq8f_g1t.dlog:134: query => {[allegheny:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid('new york')))))
        Example tmpmq8f_g1t.dlog:135: query => {[435count]} | answer(A,count(B,(city(B),loc(B,C),const(C,countryid(usa))),A))
        Example tmpmq8f_g1t.dlog:136: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))
        Example tmpmq8f_g1t.dlog:137: query => {[7071639count]} | answer(A,(size(B,A),const(B,cityid('new york',_))))
        Example tmpmq8f_g1t.dlog:138: query => {[connecticut:riverid/2],[clark fork:riverid/2],[allegheny:riverid/2],[south platte:riverid/2],[hudson:riverid/2],[tombigbee:riverid/2],[chattahoochee:riverid/2],[roanoke:riverid/2],[delaware:riverid/2],[wateree catawba:riverid/2],[powder:riverid/2],[bighorn:riverid/2],[niobrara:riverid/2],[rock:riverid/2],[potomac:riverid/2],[republican:riverid/2],[neosho:riverid/2],[san juan:riverid/2],[st. francis:riverid/2]} | answer(A,(major(A),river(A),loc(A,B),const(B,countryid(usa))))
        Example tmpmq8f_g1t.dlog:139: query => {[arizona:stateid/2]} | answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(california)))))
        Example tmpmq8f_g1t.dlog:140: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:141: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),population(A,B))))
        Example tmpmq8f_g1t.dlog:142: query => {[nevada:stateid/2],[utah:stateid/2],[colorado:stateid/2],[california:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),const(B,riverid(colorado)),traverse(B,A)))
        Example tmpmq8f_g1t.dlog:143: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),loc(A,B),state(B),const(B,stateid(texas))))
        Example tmpmq8f_g1t.dlog:144: query => {[new york_ny:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:145: query => {[alaska:stateid/2]} | answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:146: query => {[5count]} | answer(A,count(B,(state(B),loc(C,B),const(C,cityid(springfield,_))),A))
        Example tmpmq8f_g1t.dlog:147: query => {[gila:riverid/2],[south platte:riverid/2],[washita:riverid/2],[pecos:riverid/2],[arkansas:riverid/2],[colorado:riverid/2],[cimarron:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[republican:riverid/2],[red:riverid/2],[neosho:riverid/2],[north platte:riverid/2],[green:riverid/2],[san juan:riverid/2]} | answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),const(C,stateid('new mexico'))))
        Example tmpmq8f_g1t.dlog:148: query => {[tombigbee:riverid/2],[chattahoochee:riverid/2],[cumberland:riverid/2],[tennessee:riverid/2],[mississippi:riverid/2]} | answer(A,(river(A),traverse(A,B),state(B),const(C,stateid(alabama)),next_to(C,B)))
        Example tmpmq8f_g1t.dlog:149: query => {[wheeler peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid('new mexico')))))
        Example tmpmq8f_g1t.dlog:150: query => {[phoenix_az:cityid/3]} | answer(A,largest(B,(state(C),capital(C,A),population(A,B))))
        Example tmpmq8f_g1t.dlog:151: query => {[51count]} | answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa))),A))
        Example tmpmq8f_g1t.dlog:152: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:153: query => {[new mexico:stateid/2]} | answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))
        Example tmpmq8f_g1t.dlog:154: query => {[2count]} | answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(oregon))),A))
        Example tmpmq8f_g1t.dlog:155: query => {[louisiana:stateid/2]} | answer(A,smallest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))
        Example tmpmq8f_g1t.dlog:156: query => {[colorado:stateid/2]} | answer(A,(state(A),city(B),const(B,cityid(denver,_)),loc(B,A)))
        Example tmpmq8f_g1t.dlog:157: query => {[delaware:riverid/2]} | answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:158: query => {[alaska:stateid/2]} | answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:159: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))
        Example tmpmq8f_g1t.dlog:160: query => {[death valley:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:161: query => {[3778000length]} | answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))
        Example tmpmq8f_g1t.dlog:162: query => {[10count]} | answer(A,count(B,(state(B),const(C,riverid(mississippi)),traverse(C,B)),A))
        Example tmpmq8f_g1t.dlog:163: query => {[1.53e+12length^2]} | answer(A,(area(B,A),largest(B,state(B))))
        Example tmpmq8f_g1t.dlog:164: query => {[texas:stateid/2]} | answer(A,largest(B,(population(A,B),state(A),next_to(A,C),const(C,stateid(oklahoma)))))
        Example tmpmq8f_g1t.dlog:165: query => {[135length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(delaware))))))
        Example tmpmq8f_g1t.dlog:166: query => {[174431count]} | answer(A,(size(B,A),largest(B,(city(B),loc(B,C),const(C,stateid(alaska))))))
        Example tmpmq8f_g1t.dlog:167: query => {[delaware:riverid/2]} | answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:168: query => {} | answer(A,(state(A),loc(B,A),major(B),city(B),const(B,cityid(austin,_))))
        Example tmpmq8f_g1t.dlog:169: query => {[nevada:stateid/2],[utah:stateid/2],[colorado:stateid/2],[california:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),const(B,riverid(colorado)),river(B),traverse(B,A)))
        Example tmpmq8f_g1t.dlog:170: query => {[naknek:lakeid/2],[salton sea:lakeid/2],[okeechobee:lakeid/2],[red:lakeid/2],[teshekpuk:lakeid/2],[flathead:lakeid/2],[tahoe:lakeid/2],[becharof:lakeid/2],[lake of the woods:lakeid/2],[iliamna:lakeid/2],[winnebago:lakeid/2],[rainy:lakeid/2],[pontchartrain:lakeid/2],[champlain:lakeid/2],[st. clair:lakeid/2],[mille lacs:lakeid/2]} | answer(A,(major(A),lake(A),loc(A,B),const(B,countryid(usa))))
        Example tmpmq8f_g1t.dlog:171: query => {[105length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(florida))))))
        Example tmpmq8f_g1t.dlog:172: query => {[3.46e-06count/length^2]} | answer(A,(density(B,A),const(B,stateid('south dakota'))))
        Example tmpmq8f_g1t.dlog:173: query => {[new york_ny:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:174: query => {[wheeler peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid('new mexico')))))
        Example tmpmq8f_g1t.dlog:175: query => {[2.85e+09length^2]} | answer(A,(area(B,A),smallest(B,state(B))))
        Example tmpmq8f_g1t.dlog:176: query => {} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid('new mexico'))))
        Example tmpmq8f_g1t.dlog:177: query => {[juneau_ak:cityid/3]} | answer(A,(capital(A),loc(A,B),largest(B,state(B))))
        Example tmpmq8f_g1t.dlog:178: query => {[51count]} | answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa))),A))
        Example tmpmq8f_g1t.dlog:179: query => {[phoenix_az:cityid/3]} | answer(A,largest(A,(capital(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:180: query => {[houston_tx:cityid/3]} | answer(A,largest(B,(population(A,B),city(A),loc(A,C),const(C,stateid(texas)))))
        Example tmpmq8f_g1t.dlog:181: query => {[houston_tx:cityid/3]} | answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(texas)),population(A,B))))
        Example tmpmq8f_g1t.dlog:182: query => {[district of columbia:stateid/2]} | answer(A,smallest(A,(state(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:183: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),const(B,riverid(missouri)),traverse(B,A)))
        Example tmpmq8f_g1t.dlog:184: query => {[oxnard_ca:cityid/3],[bristol township_pa:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[fayetteville_nc:cityid/3],[orlando_fl:cityid/3],[san angelo_tx:cityid/3],[downey_ca:cityid/3],[greenville_sc:cityid/3],[concord_ca:cityid/3],[richardson_tx:cityid/3],[columbia_sc:cityid/3],[waukegan_il:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[lowell_ma:cityid/3],[charleston_sc:cityid/3],[largo_fl:cityid/3],[clearwater_fl:cityid/3],[bayonne_nj:cityid/3],[manchester_nh:cityid/3],[amarillo_tx:cityid/3],[vallejo_ca:cityid/3],[grand prairie_tx:cityid/3],[san bernardino_ca:cityid/3],[lakewood_oh:cityid/3],[bethesda_md:cityid/3],[evanston_il:cityid/3],[medford_ma:cityid/3],[san leandro_ca:cityid/3],[lakewood_co:cityid/3],[pueblo_co:cityid/3],[great falls_mt:cityid/3],[boise_id:cityid/3],[modesto_ca:cityid/3],[richmond_ca:cityid/3],[north charleston_sc:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[bellevue_wa:cityid/3],[reno_nv:cityid/3],[warwick_ri:cityid/3],[schenectady_ny:cityid/3],[sterling heights_mi:cityid/3],[peoria_il:cityid/3],[santa clara_ca:cityid/3],[bethlehem_pa:cityid/3],[utica_ny:cityid/3],[salem_or:cityid/3],[columbia_mo:cityid/3],[alexandria_va:cityid/3],[springfield_mo:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[livonia_mi:cityid/3],[lawton_ok:cityid/3],[fargo_nd:cityid/3],[citrus heights_ca:cityid/3],[waterford_mi:cityid/3],[independence_mo:cityid/3],[silver spring_md:cityid/3],[waco_tx:cityid/3],[carson_ca:cityid/3],[bristol_ct:cityid/3],[glendale_ca:cityid/3],[wyoming_mi:cityid/3],[rochester_mn:cityid/3],[beaumont_tx:cityid/3],[oceanside_ca:cityid/3],[oak lawn_il:cityid/3],[east orange_nj:cityid/3],[scranton_pa:cityid/3],[westland_mi:cityid/3],[south gate_ca:cityid/3],[bloomington_mn:cityid/3],[royal oak_mi:cityid/3],[terre haute_in:cityid/3],[ogden_ut:cityid/3],[longview_tx:cityid/3],[anderson_in:cityid/3],[springfield_oh:cityid/3],[waterloo_ia:cityid/3],[troy_mi:cityid/3],[rockford_il:cityid/3],[somerville_ma:cityid/3],[lynn_ma:cityid/3],[quincy_ma:cityid/3],[cicero_il:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[huntington_wv:cityid/3],[norwalk_ct:cityid/3],[bridgeport_ct:cityid/3],[ontario_ca:cityid/3],[alhambra_ca:cityid/3],[lorain_oh:cityid/3],[penn hills_pa:cityid/3],[macon_ga:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[billings_mt:cityid/3],[dearborn heights_mi:cityid/3],[wilmington_de:cityid/3],[hayward_ca:cityid/3],[irving_tx:cityid/3],[scottsdale_az:cityid/3],[cedar rapids_ia:cityid/3],[santa monica_ca:cityid/3],[kettering_oh:cityid/3],[santa rosa_ca:cityid/3],[gainesville_fl:cityid/3],[kendall_fl:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[arvada_co:cityid/3],[brownsville_tx:cityid/3],[sioux falls_sd:cityid/3],[kalamazoo_mi:cityid/3],[south bend_in:cityid/3],[clifton_nj:cityid/3],[chula vista_ca:cityid/3],[euclid_oh:cityid/3],[redondo beach_ca:cityid/3],[hartford_ct:cityid/3],[mesquite_tx:cityid/3],[clinton_mi:cityid/3],[burbank_ca:cityid/3],[farmington hills_mi:cityid/3],[middletown_nj:cityid/3],[pasadena_tx:cityid/3],[racine_wi:cityid/3],[youngstown_oh:cityid/3],[huntsville_al:cityid/3],[cheektowaga_ny:cityid/3],[framingham_ma:cityid/3],[monroe_la:cityid/3],[tallahassee_fl:cityid/3],[champaign_il:cityid/3],[tuscaloosa_al:cityid/3],[boulder_co:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[woodbridge_nj:cityid/3],[reading_pa:cityid/3],[newport news_va:cityid/3],[wichita falls_tx:cityid/3],[fort smith_ar:cityid/3],[danbury_ct:cityid/3],[mount vernon_ny:cityid/3],[fort collins_co:cityid/3],[ann arbor_mi:cityid/3],[waltham_ma:cityid/3],[nashua_nh:cityid/3],[alameda_ca:cityid/3],[stamford_ct:cityid/3],[arlington heights_il:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[laredo_tx:cityid/3],[high point_nc:cityid/3],[dubuque_ia:cityid/3],[sunnyvale_ca:cityid/3],[charleston_wv:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[dundalk_md:cityid/3],[meriden_ct:cityid/3],[west allis_wi:cityid/3],[lynchburg_va:cityid/3],[west hartford_ct:cityid/3],[southfield_mi:cityid/3],[paterson_nj:cityid/3],[altoona_pa:cityid/3],[lansing_mi:cityid/3],[hollywood_fl:cityid/3],[st. clair shores_mi:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[ventura_ca:cityid/3],[new bedford_ma:cityid/3],[tempe_az:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[pensacola_fl:cityid/3],[duluth_mn:cityid/3],[greenwich_ct:cityid/3],[skokie_il:cityid/3],[elyria_oh:cityid/3],[sioux city_ia:cityid/3],[bakersfield_ca:cityid/3],[niagara falls_ny:cityid/3],[thousand oaks_ca:cityid/3],[cranston_ri:cityid/3],[evansville_in:cityid/3],[trenton_nj:cityid/3],[redford_mi:cityid/3],[kenosha_wi:cityid/3],[durham_nc:cityid/3],[fremont_ca:cityid/3],[camden_nj:cityid/3],[miami beach_fl:cityid/3],[odessa_tx:cityid/3],[appleton_wi:cityid/3],[muncie_in:cityid/3],[overland park_ks:cityid/3],[green bay_wi:cityid/3],[topeka_ks:cityid/3],[edison_nj:cityid/3],[waterbury_ct:cityid/3],[hampton_va:cityid/3],[west valley_ut:cityid/3],[st. joseph_mo:cityid/3],[savannah_ga:cityid/3],[torrance_ca:cityid/3],[lakewood_ca:cityid/3],[casper_wy:cityid/3],[hammond_in:cityid/3],[irvington_nj:cityid/3],[abingdon_pa:cityid/3],[eugene_or:cityid/3],[joliet_il:cityid/3],[simi valley_ca:cityid/3],[west palm beach_fl:cityid/3],[dearborn_mi:cityid/3],[cherry hill_nj:cityid/3],[new haven_ct:cityid/3],[lawrence_ma:cityid/3],[chesapeake_va:cityid/3],[springfield_il:cityid/3],[erie_pa:cityid/3],[compton_ca:cityid/3],[levittown_ny:cityid/3],[aurora_il:cityid/3],[albany_ny:cityid/3],[elizabeth_nj:cityid/3],[pontiac_mi:cityid/3],[whittier_ca:cityid/3],[decatur_il:cityid/3],[pawtucket_ri:cityid/3],[koolaupoko_hi:cityid/3],[north little rock_ar:cityid/3],[lake charles_la:cityid/3],[fullerton_ca:cityid/3],[davenport_ia:cityid/3],[fall river_ma:cityid/3],[brockton_ma:cityid/3],[midland_tx:cityid/3],[new rochelle_ny:cityid/3],[lafayette_la:cityid/3],[parma_oh:cityid/3],[allentown_pa:cityid/3],[provo_ut:cityid/3],[upper darby_pa:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[roanoke_va:cityid/3],[pasadena_ca:cityid/3],[port arthur_tx:cityid/3],[newton_ma:cityid/3],[glendale_az:cityid/3],[tyler_tx:cityid/3],[new britain_ct:cityid/3],[escondido_ca:cityid/3],[elgin_il:cityid/3],[cambridge_ma:cityid/3],[lower merion_pa:cityid/3],[irondequoit_ny:cityid/3],[norman_ok:cityid/3],[portland_me:cityid/3],[taylor_mi:cityid/3],[albany_ga:cityid/3],[hamilton_oh:cityid/3],[saginaw_mi:cityid/3],[kenner_la:cityid/3],[canton_oh:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,countryid(usa))))
        Example tmpmq8f_g1t.dlog:185: query => {[17558000count]} | answer(A,(population(B,A),const(B,stateid('new york'))))
        Example tmpmq8f_g1t.dlog:186: query => {[fayetteville_nc:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[high point_nc:cityid/3],[durham_nc:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid('north carolina'))))
        Example tmpmq8f_g1t.dlog:187: query => {[kentucky:stateid/2],[indiana:stateid/2],[pennsylvania:stateid/2],[illinois:stateid/2],[ohio:stateid/2],[west virginia:stateid/2]} | answer(A,(state(A),const(B,riverid(ohio)),river(B),traverse(B,A)))
        Example tmpmq8f_g1t.dlog:188: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[lubbock_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[fort worth_tx:cityid/3],[houston_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[corpus christi_tx:cityid/3],[longview_tx:cityid/3],[arlington_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[austin_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[el paso_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[dallas_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[san antonio_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(texas))))
        Example tmpmq8f_g1t.dlog:189: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))
        Example tmpmq8f_g1t.dlog:190: query => {[pawtucket_ri:cityid/3],[warwick_ri:cityid/3],[cranston_ri:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid('rhode island'))))
        Example tmpmq8f_g1t.dlog:191: query => {[ohio:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(pennsylvania)))))
        Example tmpmq8f_g1t.dlog:192: query => {[republican:riverid/2]} | answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(nebraska)))))
        Example tmpmq8f_g1t.dlog:193: query => {[10count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid(colorado))),A))
        Example tmpmq8f_g1t.dlog:194: query => {[colorado:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(california)))))
        Example tmpmq8f_g1t.dlog:195: query => {[houston_tx:cityid/3]} | answer(A,largest(B,(const(C,stateid(texas)),city(A),loc(A,C),population(A,B))))
        Example tmpmq8f_g1t.dlog:196: query => {[california:stateid/2]} | answer(A,(const(B,cityid(sacramento,_)),capital(B),loc(B,A),state(A)))
        Example tmpmq8f_g1t.dlog:197: query => {[562994count]} | answer(A,(population(B,A),const(B,cityid(boston,ma))))
        Example tmpmq8f_g1t.dlog:198: query => {[alaska:stateid/2]} | answer(A,(state(A),largest(B,(state(A),area(A,B)))))
        Example tmpmq8f_g1t.dlog:199: query => {[rio grande:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(texas)))))
        Example tmpmq8f_g1t.dlog:200: query => {[oxnard_ca:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[downey_ca:cityid/3],[concord_ca:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[vallejo_ca:cityid/3],[san bernardino_ca:cityid/3],[san leandro_ca:cityid/3],[modesto_ca:cityid/3],[richmond_ca:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[santa clara_ca:cityid/3],[citrus heights_ca:cityid/3],[carson_ca:cityid/3],[glendale_ca:cityid/3],[oceanside_ca:cityid/3],[south gate_ca:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[ontario_ca:cityid/3],[alhambra_ca:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[hayward_ca:cityid/3],[santa monica_ca:cityid/3],[santa rosa_ca:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[chula vista_ca:cityid/3],[redondo beach_ca:cityid/3],[burbank_ca:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[alameda_ca:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[sunnyvale_ca:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[ventura_ca:cityid/3],[bakersfield_ca:cityid/3],[thousand oaks_ca:cityid/3],[fremont_ca:cityid/3],[torrance_ca:cityid/3],[lakewood_ca:cityid/3],[simi valley_ca:cityid/3],[compton_ca:cityid/3],[whittier_ca:cityid/3],[fullerton_ca:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[pasadena_ca:cityid/3],[escondido_ca:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(california))))
        Example tmpmq8f_g1t.dlog:201: query => {[bellevue_wa:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(washington)))))
        Example tmpmq8f_g1t.dlog:202: query => {[mississippi:riverid/2]} | answer(A,largest(A,(river(A),loc(A,B),const(B,stateid(illinois)))))
        Example tmpmq8f_g1t.dlog:203: query => {[arizona:stateid/2],[nevada:stateid/2],[oregon:stateid/2]} | answer(A,(next_to(A,B),state(A),const(B,stateid(california))))
        Example tmpmq8f_g1t.dlog:204: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmpmq8f_g1t.dlog:205: query => {[atlanta_ga:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(georgia)))))
        Example tmpmq8f_g1t.dlog:206: query => {[detroit_mi:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(michigan)))))
        Example tmpmq8f_g1t.dlog:207: query => {[17558000count]} | answer(A,(population(B,A),const(B,stateid('new york'))))
        Example tmpmq8f_g1t.dlog:208: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example tmpmq8f_g1t.dlog:209: query => {[texas:stateid/2]} | answer(A,(state(A),const(B,cityid(austin,_)),capital(B),loc(B,A)))
        Example tmpmq8f_g1t.dlog:210: query => {[61572count]} | answer(A,(population(B,A),const(B,cityid(portland,me))))
        Example tmpmq8f_g1t.dlog:211: query => {[columbia_sc:cityid/3],[phoenix_az:cityid/3],[baton rouge_la:cityid/3],[salt lake city_ut:cityid/3],[concord_nh:cityid/3],[boise_id:cityid/3],[richmond_va:cityid/3],[boston_ma:cityid/3],[cheyenne_wy:cityid/3],[madison_wi:cityid/3],[des moines_ia:cityid/3],[salem_or:cityid/3],[raleigh_nc:cityid/3],[indianapolis_in:cityid/3],[oklahoma city_ok:cityid/3],[jackson_ms:cityid/3],[nashville_tn:cityid/3],[hartford_ct:cityid/3],[washington_dc:cityid/3],[little rock_ar:cityid/3],[austin_tx:cityid/3],[juneau_ak:cityid/3],[providence_ri:cityid/3],[tallahassee_fl:cityid/3],[lincoln_ne:cityid/3],[bismarck_nd:cityid/3],[santa fe_nm:cityid/3],[charleston_wv:cityid/3],[sacramento_ca:cityid/3],[st. paul_mn:cityid/3],[lansing_mi:cityid/3],[trenton_nj:cityid/3],[columbus_oh:cityid/3],[honolulu_hi:cityid/3],[atlanta_ga:cityid/3],[montgomery_al:cityid/3],[topeka_ks:cityid/3],[denver_co:cityid/3],[springfield_il:cityid/3],[dover_de:cityid/3],[albany_ny:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,countryid(usa))))
        Example tmpmq8f_g1t.dlog:212: query => {[mississippi:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(mississippi)))))
        Example tmpmq8f_g1t.dlog:213: query => {[435count]} | answer(A,count(B,(city(B),const(C,countryid(usa)),loc(B,C)),A))
        Example tmpmq8f_g1t.dlog:214: query => {[nevada:stateid/2],[utah:stateid/2],[colorado:stateid/2],[california:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),const(B,riverid(colorado)),river(B),traverse(B,A)))
        Example tmpmq8f_g1t.dlog:215: query => {[171300count]} | answer(A,(population(B,A),const(B,cityid(spokane,wa))))
        Example tmpmq8f_g1t.dlog:216: query => {[rio grande:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(texas)))))
        Example tmpmq8f_g1t.dlog:217: query => {[anchorage_ak:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(alaska)))))
        Example tmpmq8f_g1t.dlog:218: query => {[17558000count]} | answer(A,(population(B,A),const(B,stateid('new york'))))
        Example tmpmq8f_g1t.dlog:219: query => {[delaware river:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(pennsylvania)))))
        Example tmpmq8f_g1t.dlog:220: query => {[overland park_ks:cityid/3],[topeka_ks:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(kansas))))
        Example tmpmq8f_g1t.dlog:221: query => {[6194length]} | answer(A,(elevation(B,A),const(B,placeid('mount mckinley'))))
        Example tmpmq8f_g1t.dlog:222: query => {[iowa:stateid/2],[nevada:stateid/2],[utah:stateid/2],[south dakota:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[wyoming:stateid/2],[missouri:stateid/2],[texas:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[montana:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),const(C,stateid(colorado))))
        Example tmpmq8f_g1t.dlog:223: query => {[north little rock_ar:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(arkansas)))))
        Example tmpmq8f_g1t.dlog:224: query => {[milwaukee_wi:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(wisconsin)))))
        Example tmpmq8f_g1t.dlog:225: query => {[9.83e+12length^2]} | answer(A,(area(B,A),const(B,countryid(usa))))
        Example tmpmq8f_g1t.dlog:226: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))
        Example tmpmq8f_g1t.dlog:227: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),longest(B,river(B)),traverse(B,A)))
        Example tmpmq8f_g1t.dlog:228: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example tmpmq8f_g1t.dlog:229: query => {[arkansas:stateid/2],[louisiana:stateid/2],[tennessee:stateid/2],[alabama:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(mississippi))))
        Example tmpmq8f_g1t.dlog:230: query => {[mississippi:riverid/2]} | answer(A,most(A,B,(river(A),traverse(A,B),state(B))))
        Example tmpmq8f_g1t.dlog:231: query => {[st. louis_mo:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(missouri)))))
        Example tmpmq8f_g1t.dlog:232: query => {[133116count]} | answer(A,(population(B,A),const(B,cityid(springfield,mo))))
        Example tmpmq8f_g1t.dlog:233: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,tx))))
        Example tmpmq8f_g1t.dlog:234: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example tmpmq8f_g1t.dlog:235: query => {[new york_ny:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:236: query => {[casper_wy:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(wyoming))))
        Example tmpmq8f_g1t.dlog:237: query => {[638333count]} | answer(A,(population(B,A),const(B,cityid(washington,dc))))
        Example tmpmq8f_g1t.dlog:238: query => {[wilmington_de:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(delaware))))
        Example tmpmq8f_g1t.dlog:239: query => {[ohio:stateid/2]} | answer(A,(state(A),const(B,cityid(columbus,_)),capital(B),loc(B,A)))
        Example tmpmq8f_g1t.dlog:240: query => {[3.15e+11length^2]} | answer(A,(area(B,A),const(B,stateid('new mexico'))))
        Example tmpmq8f_g1t.dlog:241: query => {[10count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,riverid(mississippi)),river(C)),A))
        Example tmpmq8f_g1t.dlog:242: query => {[lake michigan:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(wisconsin)))))
        Example tmpmq8f_g1t.dlog:243: query => {[arkansas river:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(colorado)))))
        Example tmpmq8f_g1t.dlog:244: query => {[3033000length]} | answer(A,(len(B,A),const(B,riverid('rio grande')),river(B)))
        Example tmpmq8f_g1t.dlog:245: query => {} | answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(alaska)))))
        Example tmpmq8f_g1t.dlog:246: query => {} | answer(A,highest(A,(mountain(A),loc(A,B),const(B,stateid(texas)))))
        Example tmpmq8f_g1t.dlog:247: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),loc(A,B),const(B,countryid(usa))))
        Example tmpmq8f_g1t.dlog:248: query => {[920600count]} | answer(A,(population(B,A),const(B,stateid('new hampshire'))))
        Example tmpmq8f_g1t.dlog:249: query => {[mississippi:riverid/2]} | answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(iowa)))))
        Example tmpmq8f_g1t.dlog:250: query => {[5count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid(texas))),A))
        Example tmpmq8f_g1t.dlog:251: query => {[493846count]} | answer(A,(population(B,A),const(B,cityid(seattle,wa))))
        Example tmpmq8f_g1t.dlog:252: query => {[wichita_ks:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(kansas)))))
        Example tmpmq8f_g1t.dlog:253: query => {[birmingham_al:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(alabama)))))
        Example tmpmq8f_g1t.dlog:254: query => {[great falls_mt:cityid/3],[billings_mt:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(montana))))
        Example tmpmq8f_g1t.dlog:255: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[longview_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))
        Example tmpmq8f_g1t.dlog:256: query => {[1.81e+11length^2],[1.06e+11length^2],[1.38e+11length^2],[1.76e+11length^2],[2.20e+11length^2],[1.07e+11length^2],[2.85e+09length^2],[2.00e+11length^2],[2.15e+10length^2],[9.38e+10length^2],[1.53e+12length^2],[2.51e+11length^2],[2.71e+10length^2],[5.29e+09length^2],[8.06e+10length^2],[2.02e+10length^2],[1.34e+11length^2],[1.68e+10length^2],[2.15e+11length^2],[1.78e+11length^2],[2.49e+10length^2],[1.83e+11length^2],[1.24e+11length^2],[1.17e+11length^2],[6.91e+11length^2],[6.27e+10length^2],[1.53e+11length^2],[1.46e+11length^2],[2.95e+11length^2],[3.81e+11length^2],[1.52e+11length^2],[3.15e+11length^2],[2.40e+10length^2],[1.09e+11length^2],[2.19e+11length^2],[1.30e+10length^2],[1.45e+11length^2],[3.14e+09length^2],[2.53e+11length^2],[8.62e+10length^2],[2.86e+11length^2],[2.13e+11length^2],[1.27e+11length^2],[4.09e+11length^2],[1.36e+11length^2],[2.69e+11length^2]} | answer(A,(area(B,A),state(B)))
        Example tmpmq8f_g1t.dlog:257: query => {[0count]} | answer(A,count(B,(state(B),next_to(B,C),largest(C,state(C))),A))
        Example tmpmq8f_g1t.dlog:258: query => {[gannett peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(wyoming)))))
        Example tmpmq8f_g1t.dlog:259: query => {[1count]} | answer(A,count(B,(state(B),loc(C,B),city(C),const(C,cityid(austin,_))),A))
        Example tmpmq8f_g1t.dlog:260: query => {[10count]} | answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(florida))),A))
        Example tmpmq8f_g1t.dlog:261: query => {[690767count]} | answer(A,(population(B,A),const(B,stateid('south dakota'))))
        Example tmpmq8f_g1t.dlog:262: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,tx))))
        Example tmpmq8f_g1t.dlog:263: query => {[pacific ocean:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(oregon)))))
        Example tmpmq8f_g1t.dlog:264: query => {[2.06e-05count/length^2]} | answer(A,(density(B,A),const(B,stateid(texas))))
        Example tmpmq8f_g1t.dlog:265: query => {[concord_nh:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid('new hampshire'))))
        Example tmpmq8f_g1t.dlog:266: query => {[638333count]} | answer(A,(population(B,A),const(B,cityid(washington,dc))))
        Example tmpmq8f_g1t.dlog:267: query => {[2count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid(idaho))),A))
        Example tmpmq8f_g1t.dlog:268: query => {[phoenix_az:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(arizona)))))
        Example tmpmq8f_g1t.dlog:269: query => {[alaska:stateid/2]} | answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:270: query => {[west virginia:stateid/2]} | answer(A,smallest(A,(state(A),next_to(A,B),const(B,stateid(ohio)))))
        Example tmpmq8f_g1t.dlog:271: query => {[mount elbert:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(colorado)))))
        Example tmpmq8f_g1t.dlog:272: query => {[walton county:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(florida)))))
        Example tmpmq8f_g1t.dlog:273: query => {[mount sunflower:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(kansas)))))
        Example tmpmq8f_g1t.dlog:274: query => {[omaha_ne:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(nebraska)))))
        Example tmpmq8f_g1t.dlog:275: query => {[portland_or:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(oregon)))))
        Example tmpmq8f_g1t.dlog:276: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))
        Example tmpmq8f_g1t.dlog:277: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B))))
        Example tmpmq8f_g1t.dlog:278: query => {[houston_tx:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))
        Example tmpmq8f_g1t.dlog:279: query => {[district of columbia:stateid/2]} | answer(A,smallest(B,(state(A),area(A,B))))
        Example tmpmq8f_g1t.dlog:280: query => {[mississippi river:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(iowa)))))
        Example tmpmq8f_g1t.dlog:281: query => {[21count]} | answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(texas))),A))
        Example tmpmq8f_g1t.dlog:282: query => {[koolaupoko_hi:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(hawaii)))))
        Example tmpmq8f_g1t.dlog:283: query => {[new orleans:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(louisiana)))))
        Example tmpmq8f_g1t.dlog:284: query => {[houston_tx:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))
        Example tmpmq8f_g1t.dlog:285: query => {[678974count]} | answer(A,(population(B,A),const(B,cityid('san francisco',_))))
        Example tmpmq8f_g1t.dlog:286: query => {[casper_wy:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(wyoming)))))
        Example tmpmq8f_g1t.dlog:287: query => {} | answer(A,(river(A),traverse(A,B),largest(B,state(B))))
        Example tmpmq8f_g1t.dlog:288: query => {[-85length]} | answer(A,(elevation(B,A),const(B,placeid('death valley'))))
        Example tmpmq8f_g1t.dlog:289: query => {[mckinley:mountainid/2]} | answer(A,highest(A,(mountain(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:290: query => {[11count]} | answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(pennsylvania))),A))
        Example tmpmq8f_g1t.dlog:291: query => {[dakota:riverid/2],[wabash:riverid/2],[gila:riverid/2],[connecticut:riverid/2],[clark fork:riverid/2],[allegheny:riverid/2],[south platte:riverid/2],[washita:riverid/2],[hudson:riverid/2],[snake:riverid/2],[tombigbee:riverid/2],[chattahoochee:riverid/2],[pecos:riverid/2],[ohio:riverid/2],[arkansas:riverid/2],[roanoke:riverid/2],[colorado:riverid/2],[little missouri:riverid/2],[delaware:riverid/2],[wateree catawba:riverid/2],[cimarron:riverid/2],[white:riverid/2],[powder:riverid/2],[bighorn:riverid/2],[niobrara:riverid/2],[rock:riverid/2],[columbia:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[pearl:riverid/2],[potomac:riverid/2],[canadian:riverid/2],[republican:riverid/2],[red:riverid/2],[neosho:riverid/2],[north platte:riverid/2],[ouachita:riverid/2],[yellowstone:riverid/2],[cheyenne:riverid/2],[green:riverid/2],[san juan:riverid/2],[missouri:riverid/2],[st. francis:riverid/2]} | answer(A,(river(A),\+(traverse(A,B),const(B,stateid(tennessee)))))
        Example tmpmq8f_g1t.dlog:292: query => {[1.85e-06count/length^2]} | answer(A,(density(B,A),const(B,stateid(wyoming))))
        Example tmpmq8f_g1t.dlog:293: query => {[1303000count]} | answer(A,(population(B,A),const(B,stateid('new mexico'))))
        Example tmpmq8f_g1t.dlog:294: query => {[campbell hill:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(ohio)))))
        Example tmpmq8f_g1t.dlog:295: query => {[gulf of mexico:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmpmq8f_g1t.dlog:296: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example tmpmq8f_g1t.dlog:297: query => {[texas:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))
        Example tmpmq8f_g1t.dlog:298: query => {[690767count]} | answer(A,(population(B,A),const(B,stateid('south dakota'))))
        Example tmpmq8f_g1t.dlog:299: query => {[3count]} | answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(arizona))),A))
        Example tmpmq8f_g1t.dlog:300: query => {[clark fork:riverid/2],[little missouri:riverid/2],[powder:riverid/2],[bighorn:riverid/2],[yellowstone:riverid/2],[missouri:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(montana))))
        Example tmpmq8f_g1t.dlog:301: query => {[2.06e-05count/length^2]} | answer(A,(density(B,A),const(B,stateid(texas))))
        Example tmpmq8f_g1t.dlog:302: query => {[texas:stateid/2]} | answer(A,(state(A),loc(B,A),city(B),const(B,cityid(austin,_))))
        Example tmpmq8f_g1t.dlog:303: query => {[4.09e+11length^2]} | answer(A,(size(B,A),const(B,stateid(california))))
        Example tmpmq8f_g1t.dlog:304: query => {[nevada:stateid/2],[utah:stateid/2],[colorado:stateid/2],[california:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,riverid(colorado))))
        Example tmpmq8f_g1t.dlog:305: query => {[1count]} | answer(A,count(B,(river(B),const(B,riverid(colorado))),A))
        Example tmpmq8f_g1t.dlog:306: query => {[170876count]} | answer(A,(population(B,A),const(B,cityid(riverside,_))))
        Example tmpmq8f_g1t.dlog:307: query => {[30count]} | answer(A,count(B,(city(B),const(C,stateid(texas)),loc(B,C)),A))
        Example tmpmq8f_g1t.dlog:308: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B))))
        Example tmpmq8f_g1t.dlog:309: query => {[new york:stateid/2]} | answer(A,largest(B,(state(A),loc(B,A),city(B))))
        Example tmpmq8f_g1t.dlog:310: query => {[oxnard_ca:cityid/3],[dayton_oh:cityid/3],[bristol township_pa:cityid/3],[duval circle_dc:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[fayetteville_nc:cityid/3],[orlando_fl:cityid/3],[san angelo_tx:cityid/3],[downey_ca:cityid/3],[greenville_sc:cityid/3],[concord_ca:cityid/3],[richardson_tx:cityid/3],[grand island_ne:cityid/3],[columbia_sc:cityid/3],[waukegan_il:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[lubbock_tx:cityid/3],[lowell_ma:cityid/3],[phoenix_az:cityid/3],[charleston_sc:cityid/3],[largo_fl:cityid/3],[clearwater_fl:cityid/3],[bayonne_nj:cityid/3],[idaho falls_id:cityid/3],[baton rouge_la:cityid/3],[san jose_ca:cityid/3],[salt lake city_ut:cityid/3],[manchester_nh:cityid/3],[amarillo_tx:cityid/3],[georgetown_dc:cityid/3],[vallejo_ca:cityid/3],[grand prairie_tx:cityid/3],[covington_ky:cityid/3],[new york_ny:cityid/3],[concord_nh:cityid/3],[san bernardino_ca:cityid/3],[portsmouth_nh:cityid/3],[warren_mi:cityid/3],[lakewood_oh:cityid/3],[bethesda_md:cityid/3],[louisville_ky:cityid/3],[yonkers_ny:cityid/3],[evanston_il:cityid/3],[fort worth_tx:cityid/3],[omaha_ne:cityid/3],[medford_ma:cityid/3],[san leandro_ca:cityid/3],[lakewood_co:cityid/3],[long beach_ca:cityid/3],[biloxi_ms:cityid/3],[mobile_al:cityid/3],[pueblo_co:cityid/3],[las vegas_nv:cityid/3],[great falls_mt:cityid/3],[boise_id:cityid/3],[richmond_va:cityid/3],[modesto_ca:cityid/3],[boston_ma:cityid/3],[cleveland_oh:cityid/3],[houston_tx:cityid/3],[cheyenne_wy:cityid/3],[richmond_ca:cityid/3],[north charleston_sc:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[madison_wi:cityid/3],[des moines_ia:cityid/3],[bellevue_wa:cityid/3],[reno_nv:cityid/3],[warwick_ri:cityid/3],[schenectady_ny:cityid/3],[sterling heights_mi:cityid/3],[birmingham_al:cityid/3],[norfolk_va:cityid/3],[peoria_il:cityid/3],[santa clara_ca:cityid/3],[newark_nj:cityid/3],[bethlehem_pa:cityid/3],[aurora_co:cityid/3],[utica_ny:cityid/3],[salem_or:cityid/3],[milwaukee_wi:cityid/3],[fort lauderdale_fl:cityid/3],[columbia_mo:cityid/3],[alexandria_va:cityid/3],[springfield_mo:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[livonia_mi:cityid/3],[lawton_ok:cityid/3],[fargo_nd:cityid/3],[citrus heights_ca:cityid/3],[waterford_mi:cityid/3],[independence_mo:cityid/3],[silver spring_md:cityid/3],[waco_tx:cityid/3],[st. louis_mo:cityid/3],[oakland_ca:cityid/3],[worcester_ma:cityid/3],[carson_ca:cityid/3],[bennington_vt:cityid/3],[bristol_ct:cityid/3],[glendale_ca:cityid/3],[indianapolis_in:cityid/3],[wyoming_mi:cityid/3],[rochester_mn:cityid/3],[san diego_ca:cityid/3],[beaumont_tx:cityid/3],[charlotte_nc:cityid/3],[los angeles_ca:cityid/3],[watertown_sd:cityid/3],[oceanside_ca:cityid/3],[bangor_me:cityid/3],[oak lawn_il:cityid/3],[east orange_nj:cityid/3],[oklahoma city_ok:cityid/3],[scranton_pa:cityid/3],[westland_mi:cityid/3],[south gate_ca:cityid/3],[bloomington_mn:cityid/3],[royal oak_mi:cityid/3],[corpus christi_tx:cityid/3],[terre haute_in:cityid/3],[ogden_ut:cityid/3],[longview_tx:cityid/3],[missoula_mt:cityid/3],[anderson_in:cityid/3],[springfield_oh:cityid/3],[tulsa_ok:cityid/3],[san francisco_ca:cityid/3],[waterloo_ia:cityid/3],[troy_mi:cityid/3],[riverside_ca:cityid/3],[rockford_il:cityid/3],[somerville_ma:cityid/3],[lynn_ma:cityid/3],[minneapolis_mn:cityid/3],[quincy_ma:cityid/3],[cicero_il:cityid/3],[fresno_ca:cityid/3],[jackson_ms:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[huntington_wv:cityid/3],[norwalk_ct:cityid/3],[bridgeport_ct:cityid/3],[ontario_ca:cityid/3],[arlington_tx:cityid/3],[alhambra_ca:cityid/3],[lorain_oh:cityid/3],[penn hills_pa:cityid/3],[macon_ga:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[memphis_tn:cityid/3],[billings_mt:cityid/3],[dearborn heights_mi:cityid/3],[wilmington_de:cityid/3],[hayward_ca:cityid/3],[irving_tx:cityid/3],[scottsdale_az:cityid/3],[cedar rapids_ia:cityid/3],[santa monica_ca:cityid/3],[kettering_oh:cityid/3],[santa rosa_ca:cityid/3],[rapid city_sd:cityid/3],[gainesville_fl:cityid/3],[hattiesburg_ms:cityid/3],[gary_in:cityid/3],[kendall_fl:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[sitka_ak:cityid/3],[arvada_co:cityid/3],[brownsville_tx:cityid/3],[sioux falls_sd:cityid/3],[flint_mi:cityid/3],[anchorage_ak:cityid/3],[kalamazoo_mi:cityid/3],[south bend_in:cityid/3],[clifton_nj:cityid/3],[chula vista_ca:cityid/3],[euclid_oh:cityid/3],[redondo beach_ca:cityid/3],[chattanooga_tn:cityid/3],[nashville_tn:cityid/3],[hartford_ct:cityid/3],[springfield_or:cityid/3],[washington_dc:cityid/3],[mesquite_tx:cityid/3],[clinton_mi:cityid/3],[burbank_ca:cityid/3],[farmington hills_mi:cityid/3],[middletown_nj:cityid/3],[las cruces_nm:cityid/3],[pasadena_tx:cityid/3],[little rock_ar:cityid/3],[pine bluff_ar:cityid/3],[racine_wi:cityid/3],[lexington_ky:cityid/3],[youngstown_oh:cityid/3],[tampa_fl:cityid/3],[austin_tx:cityid/3],[new orleans_la:cityid/3],[juneau_ak:cityid/3],[huntsville_al:cityid/3],[cheektowaga_ny:cityid/3],[framingham_ma:cityid/3],[cincinnati_oh:cityid/3],[providence_ri:cityid/3],[monroe_la:cityid/3],[tallahassee_fl:cityid/3],[lewiston_me:cityid/3],[kansas city_ks:cityid/3],[champaign_il:cityid/3],[tuscaloosa_al:cityid/3],[boulder_co:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[minot_nd:cityid/3],[woodbridge_nj:cityid/3],[reading_pa:cityid/3],[newport news_va:cityid/3],[wichita falls_tx:cityid/3],[fort smith_ar:cityid/3],[miami_fl:cityid/3],[danbury_ct:cityid/3],[lincoln_ne:cityid/3],[mount vernon_ny:cityid/3],[rock springs_wy:cityid/3],[fort collins_co:cityid/3],[ann arbor_mi:cityid/3],[waltham_ma:cityid/3],[bismarck_nd:cityid/3],[santa fe_nm:cityid/3],[akron_oh:cityid/3],[nashua_nh:cityid/3],[buffalo_ny:cityid/3],[alameda_ca:cityid/3],[stamford_ct:cityid/3],[arlington heights_il:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[laredo_tx:cityid/3],[high point_nc:cityid/3],[albuquerque_nm:cityid/3],[springfield_ma:cityid/3],[dubuque_ia:cityid/3],[auburn_me:cityid/3],[sunnyvale_ca:cityid/3],[charleston_wv:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[sacramento_ca:cityid/3],[dundalk_md:cityid/3],[meriden_ct:cityid/3],[tenleytown_dc:cityid/3],[ewa_hi:cityid/3],[mesa_az:cityid/3],[west allis_wi:cityid/3],[st. paul_mn:cityid/3],[lynchburg_va:cityid/3],[west hartford_ct:cityid/3],[southfield_mi:cityid/3],[paterson_nj:cityid/3],[st. petersburg_fl:cityid/3],[tucson_az:cityid/3],[el paso_tx:cityid/3],[seattle_wa:cityid/3],[altoona_pa:cityid/3],[lansing_mi:cityid/3],[sparks_nv:cityid/3],[rutland_vt:cityid/3],[hollywood_fl:cityid/3],[st. clair shores_mi:cityid/3],[mcallen_tx:cityid/3],[newark_de:cityid/3],[meridian_ms:cityid/3],[pocatello_id:cityid/3],[abilene_tx:cityid/3],[grand forks_nd:cityid/3],[ventura_ca:cityid/3],[new bedford_ma:cityid/3],[tempe_az:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[pensacola_fl:cityid/3],[lewiston_id:cityid/3],[duluth_mn:cityid/3],[greenwich_ct:cityid/3],[skokie_il:cityid/3],[elyria_oh:cityid/3],[sioux city_ia:cityid/3],[bakersfield_ca:cityid/3],[niagara falls_ny:cityid/3],[thousand oaks_ca:cityid/3],[cranston_ri:cityid/3],[evansville_in:cityid/3],[columbus_ga:cityid/3],[trenton_nj:cityid/3],[redford_mi:cityid/3],[kenosha_wi:cityid/3],[durham_nc:cityid/3],[fremont_ca:cityid/3],[camden_nj:cityid/3],[miami beach_fl:cityid/3],[columbus_oh:cityid/3],[odessa_tx:cityid/3],[appleton_wi:cityid/3],[wichita_ks:cityid/3],[muncie_in:cityid/3],[overland park_ks:cityid/3],[anaheim_ca:cityid/3],[fort wayne_in:cityid/3],[honolulu_hi:cityid/3],[aberdeen_sd:cityid/3],[atlanta_ga:cityid/3],[butte_mt:cityid/3],[jersey city_nj:cityid/3],[montgomery_al:cityid/3],[green bay_wi:cityid/3],[topeka_ks:cityid/3],[edison_nj:cityid/3],[grand rapids_mi:cityid/3],[jacksonville_fl:cityid/3],[dallas_tx:cityid/3],[waterbury_ct:cityid/3],[hampton_va:cityid/3],[west valley_ut:cityid/3],[roswell_nm:cityid/3],[north platte_ne:cityid/3],[st. joseph_mo:cityid/3],[chicago_il:cityid/3],[savannah_ga:cityid/3],[torrance_ca:cityid/3],[colorado springs_co:cityid/3],[denver_co:cityid/3],[lakewood_ca:cityid/3],[owensboro_ky:cityid/3],[casper_wy:cityid/3],[hammond_in:cityid/3],[virginia beach_va:cityid/3],[baltimore_md:cityid/3],[laramie_wy:cityid/3],[irvington_nj:cityid/3],[abingdon_pa:cityid/3],[eugene_or:cityid/3],[joliet_il:cityid/3],[simi valley_ca:cityid/3],[knoxville_tn:cityid/3],[wheeling_wv:cityid/3],[west palm beach_fl:cityid/3],[dearborn_mi:cityid/3],[cherry hill_nj:cityid/3],[santa ana_ca:cityid/3],[new haven_ct:cityid/3],[lawrence_ma:cityid/3],[chesapeake_va:cityid/3],[springfield_il:cityid/3],[sunrise manor_nv:cityid/3],[erie_pa:cityid/3],[compton_ca:cityid/3],[levittown_ny:cityid/3],[aurora_il:cityid/3],[metairie_la:cityid/3],[detroit_mi:cityid/3],[dover_de:cityid/3],[albany_ny:cityid/3],[elizabeth_nj:cityid/3],[pontiac_mi:cityid/3],[philadelphia_pa:cityid/3],[whittier_ca:cityid/3],[decatur_il:cityid/3],[pawtucket_ri:cityid/3],[koolaupoko_hi:cityid/3],[north little rock_ar:cityid/3],[essex_vt:cityid/3],[portland_or:cityid/3],[lake charles_la:cityid/3],[fullerton_ca:cityid/3],[davenport_ia:cityid/3],[kansas city_mo:cityid/3],[fall river_ma:cityid/3],[brockton_ma:cityid/3],[midland_tx:cityid/3],[new rochelle_ny:cityid/3],[lafayette_la:cityid/3],[greensboro_nc:cityid/3],[tacoma_wa:cityid/3],[parma_oh:cityid/3],[allentown_pa:cityid/3],[provo_ut:cityid/3],[upper darby_pa:cityid/3],[spokane_wa:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[roanoke_va:cityid/3],[arlington_va:cityid/3],[pasadena_ca:cityid/3],[port arthur_tx:cityid/3],[brookside_de:cityid/3],[newton_ma:cityid/3],[glendale_az:cityid/3],[san antonio_tx:cityid/3],[syracuse_ny:cityid/3],[tyler_tx:cityid/3],[rochester_ny:cityid/3],[new britain_ct:cityid/3],[escondido_ca:cityid/3],[toledo_oh:cityid/3],[elgin_il:cityid/3],[cambridge_ma:cityid/3],[lower merion_pa:cityid/3],[irondequoit_ny:cityid/3],[norman_ok:cityid/3],[pittsburgh_pa:cityid/3],[portland_me:cityid/3],[wahiawa_hi:cityid/3],[shreveport_la:cityid/3],[burlington_vt:cityid/3],[taylor_mi:cityid/3],[albany_ga:cityid/3],[hamilton_oh:cityid/3],[huntington beach_ca:cityid/3],[saginaw_mi:cityid/3],[fairbanks_ak:cityid/3],[kenner_la:cityid/3],[parkersburg_wv:cityid/3],[canton_oh:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,countryid(usa))))
        Example tmpmq8f_g1t.dlog:311: query => {[annapolis_md:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(maryland))))
        Example tmpmq8f_g1t.dlog:312: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example tmpmq8f_g1t.dlog:313: query => {[indianapolis_in:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(indiana))))
        Example tmpmq8f_g1t.dlog:314: query => {[6.91e+11length^2]} | answer(A,(area(B,A),const(B,stateid(texas))))
        Example tmpmq8f_g1t.dlog:315: query => {[michigan:stateid/2]} | answer(A,(state(A),loc(B,A),city(B),const(B,cityid(flint,_))))
        Example tmpmq8f_g1t.dlog:316: query => {[new york_ny:cityid/3]} | answer(A,largest(B,(city(A),population(A,B))))
        Example tmpmq8f_g1t.dlog:317: query => {[6count]} | answer(A,count(B,(state(B),const(C,stateid(iowa)),next_to(C,B)),A))
        Example tmpmq8f_g1t.dlog:318: query => {[23670000count]} | answer(A,(population(B,A),const(B,stateid(california))))
        Example tmpmq8f_g1t.dlog:319: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmpmq8f_g1t.dlog:320: query => {[492365count]} | answer(A,(population(B,A),const(B,cityid(denver,_))))
        Example tmpmq8f_g1t.dlog:321: query => {[5count]} | answer(A,count(B,(river(B),traverse(B,C),const(C,stateid(texas))),A))
        Example tmpmq8f_g1t.dlog:322: query => {[tahoe:lakeid/2],[salton sea:lakeid/2]} | answer(A,(lake(A),loc(A,B),const(B,stateid(california))))
        Example tmpmq8f_g1t.dlog:323: query => {[lansing_mi:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(michigan))))
        Example tmpmq8f_g1t.dlog:324: query => {[425022count]} | answer(A,(population(B,A),const(B,cityid(atlanta,_))))
        Example tmpmq8f_g1t.dlog:325: query => {[493846count]} | answer(A,(population(B,A),const(B,cityid(seattle,_))))
        Example tmpmq8f_g1t.dlog:326: query => {[31count]} | answer(A,count(B,(state(B),loc(C,B),major(C),river(C)),A))
        Example tmpmq8f_g1t.dlog:327: query => {[904078count]} | answer(A,(population(B,A),const(B,cityid(dallas,_))))
        Example tmpmq8f_g1t.dlog:328: query => {[west virginia:stateid/2]} | answer(A,(state(A),loc(B,A),smallest(B,capital(B))))
        Example tmpmq8f_g1t.dlog:329: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[lubbock_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[fort worth_tx:cityid/3],[houston_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[corpus christi_tx:cityid/3],[longview_tx:cityid/3],[arlington_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[austin_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[el paso_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[dallas_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[san antonio_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(texas))))
        Example tmpmq8f_g1t.dlog:330: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmpmq8f_g1t.dlog:331: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B))))
        Example tmpmq8f_g1t.dlog:332: query => {[4.09e+11length^2]} | answer(A,(area(B,A),const(B,stateid(california))))
        Example tmpmq8f_g1t.dlog:333: query => {[south platte:riverid/2],[arkansas:riverid/2],[colorado:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[republican:riverid/2],[north platte:riverid/2],[green:riverid/2],[san juan:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(colorado))))
        Example tmpmq8f_g1t.dlog:334: query => {[massachusetts:stateid/2],[oregon:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[ohio:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,cityid(springfield,_))))
        Example tmpmq8f_g1t.dlog:335: query => {[4076000count]} | answer(A,(population(B,A),const(B,stateid(minnesota))))
        Example tmpmq8f_g1t.dlog:336: query => {[8count]} | answer(A,count(B,(state(B),const(C,stateid(missouri)),next_to(C,B)),A))
        Example tmpmq8f_g1t.dlog:337: query => {[79722count]} | answer(A,(population(B,A),const(B,cityid(kalamazoo,_))))
        Example tmpmq8f_g1t.dlog:338: query => {[786700count]} | answer(A,(population(B,A),const(B,stateid(montana))))
        Example tmpmq8f_g1t.dlog:339: query => {[ohio:riverid/2],[potomac:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid('west virginia'))))
        Example tmpmq8f_g1t.dlog:340: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,riverid(mississippi)),river(B)))
        Example tmpmq8f_g1t.dlog:341: query => {[562994count]} | answer(A,(population(B,A),const(B,cityid(boston,_))))
        Example tmpmq8f_g1t.dlog:342: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmpmq8f_g1t.dlog:343: query => {[alaska:stateid/2],[hawaii:stateid/2]} | answer(A,(state(A),\+(next_to(A,B),state(B))))
        Example tmpmq8f_g1t.dlog:344: query => {[new york:stateid/2],[pennsylvania:stateid/2],[delaware:stateid/2],[new jersey:stateid/2]} | answer(A,(state(A),loc(B,A),shortest(B,river(B))))
        Example tmpmq8f_g1t.dlog:345: query => {[montpelier_vt:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(vermont))))
        Example tmpmq8f_g1t.dlog:346: query => {[2633000count]} | answer(A,(population(B,A),const(B,stateid(oregon))))
        Example tmpmq8f_g1t.dlog:347: query => {[phoenix_az:cityid/3]} | answer(A,largest(B,(capital(A),population(A,B))))
        Example tmpmq8f_g1t.dlog:348: query => {[alaska:stateid/2]} | answer(A,highest(B,(state(A),loc(B,A),place(B))))
        Example tmpmq8f_g1t.dlog:349: query => {[1.78e+11length^2]} | answer(A,(size(B,A),const(B,stateid(florida))))
        Example tmpmq8f_g1t.dlog:350: query => {[richmond_va:cityid/3],[norfolk_va:cityid/3],[alexandria_va:cityid/3],[portsmouth_va:cityid/3],[newport news_va:cityid/3],[lynchburg_va:cityid/3],[hampton_va:cityid/3],[virginia beach_va:cityid/3],[chesapeake_va:cityid/3],[roanoke_va:cityid/3],[arlington_va:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(virginia))))
        Example tmpmq8f_g1t.dlog:351: query => {[oregon:stateid/2]} | answer(A,(state(A),loc(B,A),capital(B),const(B,cityid(salem,_))))
        Example tmpmq8f_g1t.dlog:352: query => {[mississippi:riverid/2]} | answer(A,most(A,B,(river(A),traverse(A,B),state(B))))
        Example tmpmq8f_g1t.dlog:353: query => {[2718000count]} | answer(A,(population(B,A),const(B,stateid(arizona))))
        Example tmpmq8f_g1t.dlog:354: query => {[3005172count]} | answer(A,(population(B,A),const(B,cityid(chicago,_))))
        Example tmpmq8f_g1t.dlog:355: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:356: query => {[rock:riverid/2]} | answer(A,(major(A),river(A),traverse(A,B),const(B,stateid(illinois))))
        Example tmpmq8f_g1t.dlog:357: query => {[4count]} | answer(A,count(B,(city(B),loc(B,C),const(C,stateid(montana))),A))
        Example tmpmq8f_g1t.dlog:358: query => {[district of columbia:stateid/2]} | answer(A,smallest(B,(state(A),area(A,B))))
        Example tmpmq8f_g1t.dlog:359: query => {[augusta_me:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(maine))))
        Example tmpmq8f_g1t.dlog:360: query => {[2.15e+11length^2]} | answer(A,(area(B,A),const(B,stateid(idaho))))
        Example tmpmq8f_g1t.dlog:361: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmpmq8f_g1t.dlog:362: query => {[st. clair:lakeid/2]} | answer(A,(major(A),lake(A),loc(A,B),const(B,stateid(michigan))))
        Example tmpmq8f_g1t.dlog:363: query => {[11400000count]} | answer(A,(population(B,A),const(B,stateid(illinois))))
        Example tmpmq8f_g1t.dlog:364: query => {[8count]} | answer(A,count(B,(city(B),loc(B,C),const(C,stateid(louisiana))),A))
        Example tmpmq8f_g1t.dlog:365: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example tmpmq8f_g1t.dlog:366: query => {[944000count]} | answer(A,(population(B,A),const(B,stateid(idaho))))
        Example tmpmq8f_g1t.dlog:367: query => {[california:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),city(B))))
        Example tmpmq8f_g1t.dlog:368: query => {[jefferson city_mo:cityid/3],[frankfort_ky:cityid/3],[phoenix_az:cityid/3],[baton rouge_la:cityid/3],[salt lake city_ut:cityid/3],[concord_nh:cityid/3],[harrisburg_pa:cityid/3],[richmond_va:cityid/3],[boston_ma:cityid/3],[cheyenne_wy:cityid/3],[madison_wi:cityid/3],[des moines_ia:cityid/3],[carson city_nv:cityid/3],[indianapolis_in:cityid/3],[oklahoma city_ok:cityid/3],[olympia_wa:cityid/3],[jackson_ms:cityid/3],[augusta_me:cityid/3],[nashville_tn:cityid/3],[washington_dc:cityid/3],[little rock_ar:cityid/3],[austin_tx:cityid/3],[juneau_ak:cityid/3],[providence_ri:cityid/3],[lincoln_ne:cityid/3],[bismarck_nd:cityid/3],[santa fe_nm:cityid/3],[sacramento_ca:cityid/3],[montpelier_vt:cityid/3],[st. paul_mn:cityid/3],[columbus_oh:cityid/3],[honolulu_hi:cityid/3],[annapolis_md:cityid/3],[atlanta_ga:cityid/3],[montgomery_al:cityid/3],[denver_co:cityid/3],[helena_mt:cityid/3],[dover_de:cityid/3],[pierre_sd:cityid/3]} | answer(A,(capital(A),\+(major(A),city(A))))
        Example tmpmq8f_g1t.dlog:369: query => {[alaska:stateid/2],[hawaii:stateid/2]} | answer(A,(state(A),\+(next_to(A,B),state(B))))
        Example tmpmq8f_g1t.dlog:370: query => {[177857count]} | answer(A,(population(B,A),const(B,cityid(montgomery,_))))
        Example tmpmq8f_g1t.dlog:371: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmpmq8f_g1t.dlog:372: query => {[olympia_wa:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(washington))))
        Example tmpmq8f_g1t.dlog:373: query => {[scotts valley_ca:cityid/3]} | answer(A,smallest(B,(city(A),population(A,B))))
        Example tmpmq8f_g1t.dlog:374: query => {[4113200count]} | answer(A,(population(B,A),const(B,stateid(washington))))
        Example tmpmq8f_g1t.dlog:375: query => {[naknek:lakeid/2],[salton sea:lakeid/2],[okeechobee:lakeid/2],[red:lakeid/2],[teshekpuk:lakeid/2],[flathead:lakeid/2],[tahoe:lakeid/2],[michigan:lakeid/2],[becharof:lakeid/2],[erie:lakeid/2],[ontario:lakeid/2],[lake of the woods:lakeid/2],[iliamna:lakeid/2],[winnebago:lakeid/2],[great salt lake:lakeid/2],[superior:lakeid/2],[rainy:lakeid/2],[pontchartrain:lakeid/2],[champlain:lakeid/2],[huron:lakeid/2],[st. clair:lakeid/2],[mille lacs:lakeid/2]} | answer(A,(lake(A),loc(A,B),const(B,countryid(usa))))
        Example tmpmq8f_g1t.dlog:376: query => {[3968000length]} | answer(A,(len(B,A),const(B,riverid(missouri)),river(B)))
        Example tmpmq8f_g1t.dlog:377: query => {[23670000count]} | answer(A,(population(B,A),const(B,stateid(california))))
        Example tmpmq8f_g1t.dlog:378: query => {[colorado:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,cityid(austin,tx))))
        Example tmpmq8f_g1t.dlog:379: query => {[8.62e+10length^2]} | answer(A,(area(B,A),const(B,stateid(maine))))
        Example tmpmq8f_g1t.dlog:380: query => {[0count]} | answer(A,count(B,(major(B),river(B),traverse(B,C),const(C,stateid(ohio))),A))
        Example tmpmq8f_g1t.dlog:381: query => {[1.53e+12length^2]} | answer(A,(area(B,A),const(B,stateid(alaska))))
        Example tmpmq8f_g1t.dlog:382: query => {[bristol township_pa:cityid/3],[bethlehem_pa:cityid/3],[scranton_pa:cityid/3],[penn hills_pa:cityid/3],[reading_pa:cityid/3],[altoona_pa:cityid/3],[abingdon_pa:cityid/3],[erie_pa:cityid/3],[philadelphia_pa:cityid/3],[allentown_pa:cityid/3],[upper darby_pa:cityid/3],[lower merion_pa:cityid/3],[pittsburgh_pa:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(pennsylvania))))
        Example tmpmq8f_g1t.dlog:383: query => {[2364000count]} | answer(A,(population(B,A),const(B,stateid(kansas))))
        Example tmpmq8f_g1t.dlog:384: query => {[0count]} | answer(A,count(B,(river(B),const(C,stateid(alaska)),loc(B,C)),A))
        Example tmpmq8f_g1t.dlog:385: query => {[1125000count]} | answer(A,(population(B,A),const(B,stateid(maine))))
        Example tmpmq8f_g1t.dlog:386: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,longest(B,(state(A),loc(B,A),river(B))))
        Example tmpmq8f_g1t.dlog:387: query => {[6.91e+11length^2]} | answer(A,(size(B,A),const(B,stateid(texas))))
        Example tmpmq8f_g1t.dlog:388: query => {[harrisburg_pa:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(pennsylvania))))
        Example tmpmq8f_g1t.dlog:389: query => {[missouri:stateid/2],[tennessee:stateid/2]} | answer(A,most(A,B,(state(A),next_to(A,B),state(B))))
        Example tmpmq8f_g1t.dlog:390: query => {[3778000length]} | answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))
        Example tmpmq8f_g1t.dlog:391: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmpmq8f_g1t.dlog:392: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example tmpmq8f_g1t.dlog:393: query => {[alaska:stateid/2]} | answer(A,(state(A),loc(B,A),highest(B,place(B))))
        Example tmpmq8f_g1t.dlog:394: query => {[2count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid(washington))),A))
        Example tmpmq8f_g1t.dlog:395: query => {[8count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(tennessee))),A))
        Example tmpmq8f_g1t.dlog:396: query => {[texas:stateid/2]} | answer(A,(state(A),const(B,cityid(dallas,_)),loc(B,A)))
        Example tmpmq8f_g1t.dlog:397: query => {[rhode island:stateid/2],[alaska:stateid/2],[hawaii:stateid/2],[maine:stateid/2]} | answer(A,(state(A),\+(loc(B,A),river(B))))
        Example tmpmq8f_g1t.dlog:398: query => {[arkansas:riverid/2],[cimarron:riverid/2],[smoky hill:riverid/2],[republican:riverid/2],[neosho:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(kansas))))
        Example tmpmq8f_g1t.dlog:399: query => {[mississippi:riverid/2],[st. francis:riverid/2],[white:riverid/2],[missouri:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(missouri))))
        Example tmpmq8f_g1t.dlog:400: query => {[0count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(hawaii))),A))
        Example tmpmq8f_g1t.dlog:401: query => {[des moines_ia:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(iowa))))
        Example tmpmq8f_g1t.dlog:402: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpmq8f_g1t.dlog:403: query => {} | answer(A,(river(A),traverse(A,B),const(B,stateid(alaska))))
        Example tmpmq8f_g1t.dlog:404: query => {[arkansas:riverid/2],[white:riverid/2],[mississippi:riverid/2],[red:riverid/2],[ouachita:riverid/2],[st. francis:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(arkansas))))
        Example tmpmq8f_g1t.dlog:405: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpmq8f_g1t.dlog:406: query => {[columbia:riverid/2],[snake:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(oregon))))
        Example tmpmq8f_g1t.dlog:407: query => {[3.15e+11length^2]} | answer(A,(size(B,A),const(B,stateid('new mexico'))))
        Example tmpmq8f_g1t.dlog:408: query => {[colorado:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),river(B))))
        Example tmpmq8f_g1t.dlog:409: query => {[browne tower:mountainid/2],[st. elias:mountainid/2],[wrangell:mountainid/2],[blackburn:mountainid/2],[kennedy:mountainid/2],[alverstone:mountainid/2],[fairweather:mountainid/2],[south buttress:mountainid/2],[bona:mountainid/2],[east buttress:mountainid/2],[foraker:mountainid/2],[hubbard:mountainid/2],[mckinley:mountainid/2],[sanford:mountainid/2],[churchill:mountainid/2],[hunter:mountainid/2],[vancouver:mountainid/2],[bear:mountainid/2]} | answer(A,(mountain(A),loc(A,B),const(B,stateid(alaska))))
        Example tmpmq8f_g1t.dlog:410: query => {[massachusetts:stateid/2],[maine:stateid/2],[vermont:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid('new hampshire'))))
        Example tmpmq8f_g1t.dlog:411: query => {[colorado:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(nevada))))
        Example tmpmq8f_g1t.dlog:412: query => {} | answer(A,(river(A),traverse(A,B),const(B,stateid(maine))))
        Example tmpmq8f_g1t.dlog:413: query => {[delaware:riverid/2]} | answer(A,shortest(A,river(A)))
        Example tmpmq8f_g1t.dlog:414: query => {[potomac:riverid/2],[roanoke:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(virginia))))
        Example tmpmq8f_g1t.dlog:415: query => {[76685count]} | answer(A,(population(B,A),const(B,cityid(boulder,_))))
        Example tmpmq8f_g1t.dlog:416: query => {[massachusetts:stateid/2],[connecticut:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid('rhode island'))))
        Example tmpmq8f_g1t.dlog:417: query => {[76685count]} | answer(A,(population(B,A),const(B,cityid(boulder,_))))
        Example tmpmq8f_g1t.dlog:418: query => {[gila:riverid/2],[colorado:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(arizona))))
        Example tmpmq8f_g1t.dlog:419: query => {[phoenix_az:cityid/3]} | answer(A,largest(A,capital(A)))
        Example tmpmq8f_g1t.dlog:420: query => {[south platte:riverid/2],[arkansas:riverid/2],[colorado:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[republican:riverid/2],[north platte:riverid/2],[green:riverid/2],[san juan:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(colorado))))
        Example tmpmq8f_g1t.dlog:421: query => {[minnesota:stateid/2],[new york:stateid/2]} | answer(A,(loc(B,A),state(A),const(B,cityid(rochester,_))))
        Example tmpmq8f_g1t.dlog:422: query => {[delaware:riverid/2]} | answer(A,shortest(A,river(A)))
        Example tmpmq8f_g1t.dlog:423: query => {[iowa:stateid/2],[minnesota:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid('south dakota'))))
        Example tmpmq8f_g1t.dlog:424: query => {} | answer(A,(river(A),loc(A,B),const(B,stateid(alaska))))
        Example tmpmq8f_g1t.dlog:425: query => {[3778000length]} | answer(A,(len(B,A),const(B,riverid(mississippi))))
        Example tmpmq8f_g1t.dlog:426: query => {[lakewood_co:cityid/3],[pueblo_co:cityid/3],[arvada_co:cityid/3],[boulder_co:cityid/3],[fort collins_co:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(colorado))))
        Example tmpmq8f_g1t.dlog:427: query => {[pennsylvania:stateid/2]} | answer(A,(state(A),const(B,cityid(pittsburgh,_)),loc(B,A)))
        Example tmpmq8f_g1t.dlog:428: query => {[michigan:stateid/2]} | answer(A,(state(A),const(B,cityid(kalamazoo,_)),loc(B,A)))
        Example tmpmq8f_g1t.dlog:429: query => {[4count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(texas))),A))
        Example tmpmq8f_g1t.dlog:430: query => {[0count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(alaska))),A))
        Example tmpmq8f_g1t.dlog:431: query => {[massachusetts:stateid/2]} | answer(A,(state(A),const(B,cityid(boston,_)),loc(B,A)))
        Example tmpmq8f_g1t.dlog:432: query => {[1.83e+11length^2]} | answer(A,(size(B,A),const(B,stateid('north dakota'))))
        Example tmpmq8f_g1t.dlog:433: query => {[missouri:stateid/2],[tennessee:stateid/2]} | answer(A,most(A,B,(state(A),next_to(A,B),state(B))))
        Example tmpmq8f_g1t.dlog:434: query => {[washita:riverid/2],[pecos:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[red:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(texas))))
        Example tmpmq8f_g1t.dlog:435: query => {[san juan:riverid/2],[colorado:riverid/2],[green:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(utah))))
        Example tmpmq8f_g1t.dlog:436: query => {[california:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,placeid('mount whitney'))))
        Example tmpmq8f_g1t.dlog:437: query => {[ouachita:riverid/2],[mississippi:riverid/2],[red:riverid/2],[pearl:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(louisiana))))
        Example tmpmq8f_g1t.dlog:438: query => {[wabash:riverid/2],[ohio:riverid/2],[mississippi:riverid/2],[rock:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(illinois))))
        Example tmpmq8f_g1t.dlog:439: query => {[2667length]} | answer(A,(elevation(B,A),const(B,placeid('guadalupe peak'))))
        Example tmpmq8f_g1t.dlog:440: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpmq8f_g1t.dlog:441: query => {[76685count]} | answer(A,(population(B,A),const(B,cityid(boulder,_))))
        Example tmpmq8f_g1t.dlog:442: query => {[south platte:riverid/2],[arkansas:riverid/2],[colorado:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[republican:riverid/2],[north platte:riverid/2],[green:riverid/2],[san juan:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(colorado))))
        Example tmpmq8f_g1t.dlog:443: query => {[3894000count]} | answer(A,(population(B,A),const(B,stateid(alabama))))
        Example tmpmq8f_g1t.dlog:444: query => {[arkansas:riverid/2],[white:riverid/2],[mississippi:riverid/2],[red:riverid/2],[ouachita:riverid/2],[st. francis:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(arkansas))))
        Example tmpmq8f_g1t.dlog:445: query => {[kentucky:stateid/2],[indiana:stateid/2],[pennsylvania:stateid/2],[michigan:stateid/2],[west virginia:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(ohio))))
        Example tmpmq8f_g1t.dlog:446: query => {[2.15e+10length^2]} | answer(A,(size(B,A),const(B,stateid(massachusetts))))
        Example tmpmq8f_g1t.dlog:447: query => {[ohio:stateid/2],[indiana:stateid/2],[wisconsin:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(michigan))))
        Example tmpmq8f_g1t.dlog:448: query => {[california:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,cityid('scotts valley',_))))
        Example tmpmq8f_g1t.dlog:449: query => {[georgia:stateid/2],[tennessee:stateid/2],[florida:stateid/2],[mississippi:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))
        Example tmpmq8f_g1t.dlog:450: query => {[new hampshire:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(maine))))
        Example tmpmq8f_g1t.dlog:451: query => {[utah:stateid/2],[wyoming:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[kansas:stateid/2],[nebraska:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(colorado))))
        Example tmpmq8f_g1t.dlog:452: query => {[mississippi:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[texas:stateid/2],[tennessee:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(arkansas))))
        Example tmpmq8f_g1t.dlog:453: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,state(A))
        Example tmpmq8f_g1t.dlog:454: query => {[california:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,cityid('san jose',_))))
        Example tmpmq8f_g1t.dlog:455: query => {[georgia:stateid/2],[tennessee:stateid/2],[florida:stateid/2],[mississippi:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))
        Example tmpmq8f_g1t.dlog:456: query => {[virginia:stateid/2],[indiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[ohio:stateid/2],[west virginia:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(kentucky))))
        Example tmpmq8f_g1t.dlog:457: query => {[1.53e+12length^2]} | answer(A,(size(B,A),const(B,stateid(alaska))))
        Example tmpmq8f_g1t.dlog:458: query => {[california:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,cityid('san diego',_))))
        Example tmpmq8f_g1t.dlog:459: query => {[6.91e+11length^2]} | answer(A,(size(B,A),const(B,stateid(texas))))
        Example tmpmq8f_g1t.dlog:460: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example tmpmq8f_g1t.dlog:461: query => {[usa:countryid/2]} | answer(A,(loc(B,A),const(B,stateid('new hampshire'))))
        Example tmpmq8f_g1t.dlog:462: query => {[phoenix_az:cityid/3]} | answer(A,largest(A,capital(A)))
        Example tmpmq8f_g1t.dlog:463: query => {[louisiana:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,cityid('baton rouge',_))))
        Example tmpmq8f_g1t.dlog:464: query => {[ohio:stateid/2],[indiana:stateid/2],[wisconsin:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(michigan))))
        Example tmpmq8f_g1t.dlog:465: query => {[indiana:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,cityid('fort wayne',_))))
        Example tmpmq8f_g1t.dlog:466: query => {[alabama:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[north carolina:stateid/2],[florida:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(georgia))))
        Example tmpmq8f_g1t.dlog:467: query => {[iowa:stateid/2],[kentucky:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[kansas:stateid/2],[nebraska:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(missouri))))
        Example tmpmq8f_g1t.dlog:468: query => {} | answer(A,(state(A),next_to(A,B),const(B,stateid(hawaii))))
        Example tmpmq8f_g1t.dlog:469: query => {[nevada:stateid/2],[utah:stateid/2],[colorado:stateid/2],[new mexico:stateid/2],[california:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(arizona))))
        Example tmpmq8f_g1t.dlog:470: query => {} | answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))
        Example tmpmq8f_g1t.dlog:471: query => {[michigan:stateid/2],[minnesota:stateid/2],[iowa:stateid/2],[illinois:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(wisconsin))))
        Example tmpmq8f_g1t.dlog:472: query => {[oxnard_ca:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[downey_ca:cityid/3],[concord_ca:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[san jose_ca:cityid/3],[vallejo_ca:cityid/3],[san bernardino_ca:cityid/3],[san leandro_ca:cityid/3],[long beach_ca:cityid/3],[modesto_ca:cityid/3],[richmond_ca:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[santa clara_ca:cityid/3],[citrus heights_ca:cityid/3],[oakland_ca:cityid/3],[carson_ca:cityid/3],[glendale_ca:cityid/3],[san diego_ca:cityid/3],[los angeles_ca:cityid/3],[oceanside_ca:cityid/3],[south gate_ca:cityid/3],[san francisco_ca:cityid/3],[riverside_ca:cityid/3],[fresno_ca:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[ontario_ca:cityid/3],[alhambra_ca:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[hayward_ca:cityid/3],[santa monica_ca:cityid/3],[santa rosa_ca:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[chula vista_ca:cityid/3],[redondo beach_ca:cityid/3],[burbank_ca:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[alameda_ca:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[sunnyvale_ca:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[sacramento_ca:cityid/3],[ventura_ca:cityid/3],[bakersfield_ca:cityid/3],[thousand oaks_ca:cityid/3],[fremont_ca:cityid/3],[anaheim_ca:cityid/3],[torrance_ca:cityid/3],[lakewood_ca:cityid/3],[simi valley_ca:cityid/3],[santa ana_ca:cityid/3],[compton_ca:cityid/3],[whittier_ca:cityid/3],[fullerton_ca:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[pasadena_ca:cityid/3],[escondido_ca:cityid/3],[huntington beach_ca:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(california))))
        Example tmpmq8f_g1t.dlog:473: query => {} | answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))
        Example tmpmq8f_g1t.dlog:474: query => {[california:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,placeid('mount whitney'))))
        Example tmpmq8f_g1t.dlog:475: query => {[76685count]} | answer(A,(population(B,A),const(B,cityid(boulder,_))))
        Example tmpmq8f_g1t.dlog:476: query => {[usa:countryid/2],[texas:stateid/2]} | answer(A,(loc(B,A),const(B,cityid(houston,_))))
        Example tmpmq8f_g1t.dlog:477: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,state(A))
        Example tmpmq8f_g1t.dlog:478: query => {[76685count]} | answer(A,(population(B,A),const(B,cityid(boulder,_))))
        Example tmpmq8f_g1t.dlog:479: query => {[usa:countryid/2],[massachusetts:stateid/2],[oregon:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[ohio:stateid/2]} | answer(A,(loc(B,A),const(B,cityid(springfield,_))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:480: query => {} | answer(A,(state(A),next_to(A,B),const(B,stateid(hawaii))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:481: query => {[Cost 127748.0 exceeds maximum of 100000:error]} | answer(A,largest(A,(state(A),next_to(A,B),state(B),next_to(B,C),state(C))))
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:487: query => {[Join failed syntactically: {[dakota:riverid/2,south dakota:stateid/2,usa:countryid/2],[connecticut:riverid/2,vermont:stateid/2,usa:countryid/2],[colorado:riverid/2,colorado:stateid/2,usa:countryid/2],[yellowstone:riverid/2,north dakota:stateid/2,usa:countryid/2],[mississippi:riverid/2,arkansas:stateid/2,usa:countryid/2],[north platte:riverid/2,colorado:stateid/2,usa:countryid/2],[connecticut:riverid/2,connecticut:stateid/2,usa:countryid/2],[tennessee:riverid/2,tennessee:stateid/2,usa:countryid/2],[neosho:riverid/2,kansas:stateid/2,usa:countryid/2],[delaware:riverid/2,pennsylvania:stateid/2,usa:countryid/2],[north platte:riverid/2,nebraska:stateid/2,usa:countryid/2],[snake:riverid/2,idaho:stateid/2,usa:countryid/2],[rio grande:riverid/2,texas:stateid/2,usa:countryid/2],[ohio:riverid/2,pennsylvania:stateid/2,usa:countryid/2],[powder:riverid/2,montana:stateid/2,usa:countryid/2],[st. francis:riverid/2,missouri:stateid/2,usa:countryid/2],[pearl:riverid/2,louisiana:stateid/2,usa:countryid/2],[red:riverid/2,new mexico:stateid/2,usa:countryid/2],[delaware:riverid/2,new jersey:stateid/2,usa:countryid/2],[cheyenne:riverid/2,north dakota:stateid/2,usa:countryid/2],[ohio:riverid/2,west virginia:stateid/2,usa:countryid/2],[ouachita:riverid/2,arkansas:stateid/2,usa:countryid/2],[rock:riverid/2,wisconsin:stateid/2,usa:countryid/2],[delaware:riverid/2,delaware:stateid/2,usa:countryid/2],[smoky hill:riverid/2,kansas:stateid/2,usa:countryid/2],[potomac:riverid/2,district of columbia:stateid/2,usa:countryid/2],[washita:riverid/2,oklahoma:stateid/2,usa:countryid/2],[republican:riverid/2,colorado:stateid/2,usa:countryid/2],[colorado:riverid/2,california:stateid/2,usa:countryid/2],[north platte:riverid/2,wyoming:stateid/2,usa:countryid/2],[arkansas:riverid/2,colorado:stateid/2,usa:countryid/2],[arkansas:riverid/2,kansas:stateid/2,usa:countryid/2],[pecos:riverid/2,new mexico:stateid/2,usa:countryid/2],[delaware:riverid/2,new york:stateid/2,usa:countryid/2],[potomac:riverid/2,maryland:stateid/2,usa:countryid/2],[mississippi:riverid/2,kentucky:stateid/2,usa:countryid/2],[san juan:riverid/2,new mexico:stateid/2,usa:countryid/2],[rio grande:riverid/2,new mexico:stateid/2,usa:countryid/2],[little missouri:riverid/2,north dakota:stateid/2,usa:countryid/2],[tennessee:riverid/2,alabama:stateid/2,usa:countryid/2],[niobrara:riverid/2,nebraska:stateid/2,usa:countryid/2],[red:riverid/2,louisiana:stateid/2,usa:countryid/2],[roanoke:riverid/2,virginia:stateid/2,usa:countryid/2],[allegheny:riverid/2,new york:stateid/2,usa:countryid/2],[powder:riverid/2,wyoming:stateid/2,usa:countryid/2],[mississippi:riverid/2,louisiana:stateid/2,usa:countryid/2],[green:riverid/2,utah:stateid/2,usa:countryid/2],[connecticut:riverid/2,new hampshire:stateid/2,usa:countryid/2],[pearl:riverid/2,michigan:stateid/2,usa:countryid/2],[hudson:riverid/2,new york:stateid/2,usa:countryid/2],[rock:riverid/2,illinois:stateid/2,usa:countryid/2],[cimarron:riverid/2,kansas:stateid/2,usa:countryid/2],[south platte:riverid/2,nebraska:stateid/2,usa:countryid/2],[snake:riverid/2,wyoming:stateid/2,usa:countryid/2],[canadian:riverid/2,colorado:stateid/2,usa:countryid/2],[mississippi:riverid/2,wisconsin:stateid/2,usa:countryid/2],[roanoke:riverid/2,north carolina:stateid/2,usa:countryid/2],[wabash:riverid/2,ohio:stateid/2,usa:countryid/2],[tombigbee:riverid/2,alabama:stateid/2,usa:countryid/2],[san juan:riverid/2,colorado:stateid/2,usa:countryid/2],[mississippi:riverid/2,iowa:stateid/2,usa:countryid/2],[yellowstone:riverid/2,montana:stateid/2,usa:countryid/2],[green:riverid/2,wyoming:stateid/2,usa:countryid/2],[mississippi:riverid/2,mississippi:stateid/2,usa:countryid/2],[ohio:riverid/2,illinois:stateid/2,usa:countryid/2],[bighorn:riverid/2,montana:stateid/2,usa:countryid/2],[pecos:riverid/2,texas:stateid/2,usa:countryid/2],[green:riverid/2,colorado:stateid/2,usa:countryid/2],[clark fork:riverid/2,montana:stateid/2,usa:countryid/2],[ouachita:riverid/2,louisiana:stateid/2,usa:countryid/2],[cimarron:riverid/2,oklahoma:stateid/2,usa:countryid/2],[yellowstone:riverid/2,wyoming:stateid/2,usa:countryid/2],[cheyenne:riverid/2,wyoming:stateid/2,usa:countryid/2],[wateree catawba:riverid/2,south carolina:stateid/2,usa:countryid/2],[smoky hill:riverid/2,colorado:stateid/2,usa:countryid/2],[arkansas:riverid/2,arkansas:stateid/2,usa:countryid/2],[clark fork:riverid/2,idaho:stateid/2,usa:countryid/2],[missouri:riverid/2,missouri:stateid/2,usa:countryid/2],[gila:riverid/2,new mexico:stateid/2,usa:countryid/2],[colorado:riverid/2,arizona:stateid/2,usa:countryid/2],[red:riverid/2,oklahoma:stateid/2,usa:countryid/2],[columbia:riverid/2,oregon:stateid/2,usa:countryid/2],[allegheny:riverid/2,pennsylvania:stateid/2,usa:countryid/2],[mississippi:riverid/2,minnesota:stateid/2,usa:countryid/2],[missouri:riverid/2,montana:stateid/2,usa:countryid/2],[potomac:riverid/2,virginia:stateid/2,usa:countryid/2],[white:riverid/2,arkansas:stateid/2,usa:countryid/2],[potomac:riverid/2,west virginia:stateid/2,usa:countryid/2],[st. francis:riverid/2,arkansas:stateid/2,usa:countryid/2],[ohio:riverid/2,ohio:stateid/2,usa:countryid/2],[missouri:riverid/2,north dakota:stateid/2,usa:countryid/2],[chattahoochee:riverid/2,georgia:stateid/2,usa:countryid/2],[cumberland:riverid/2,kentucky:stateid/2,usa:countryid/2],[red:riverid/2,texas:stateid/2,usa:countryid/2],[south platte:riverid/2,colorado:stateid/2,usa:countryid/2],[little missouri:riverid/2,south dakota:stateid/2,usa:countryid/2],[snake:riverid/2,washington:stateid/2,usa:countryid/2],[connecticut:riverid/2,massachusetts:stateid/2,usa:countryid/2],[snake:riverid/2,oregon:stateid/2,usa:countryid/2],[chattahoochee:riverid/2,florida:stateid/2,usa:countryid/2],[missouri:riverid/2,iowa:stateid/2,usa:countryid/2],[arkansas:riverid/2,oklahoma:stateid/2,usa:countryid/2],[little missouri:riverid/2,montana:stateid/2,usa:countryid/2],[neosho:riverid/2,oklahoma:stateid/2,usa:countryid/2],[republican:riverid/2,nebraska:stateid/2,usa:countryid/2],[little missouri:riverid/2,wyoming:stateid/2,usa:countryid/2],[colorado:riverid/2,nevada:stateid/2,usa:countryid/2],[ohio:riverid/2,kentucky:stateid/2,usa:countryid/2],[colorado:riverid/2,utah:stateid/2,usa:countryid/2],[mississippi:riverid/2,tennessee:stateid/2,usa:countryid/2],[mississippi:riverid/2,illinois:stateid/2,usa:countryid/2],[missouri:riverid/2,south dakota:stateid/2,usa:countryid/2],[san juan:riverid/2,utah:stateid/2,usa:countryid/2],[wateree catawba:riverid/2,north carolina:stateid/2,usa:countryid/2],[bighorn:riverid/2,wyoming:stateid/2,usa:countryid/2],[missouri:riverid/2,nebraska:stateid/2,usa:countryid/2],[wabash:riverid/2,illinois:stateid/2,usa:countryid/2],[canadian:riverid/2,new mexico:stateid/2,usa:countryid/2],[mississippi:riverid/2,missouri:stateid/2,usa:countryid/2],[canadian:riverid/2,texas:stateid/2,usa:countryid/2],[dakota:riverid/2,north dakota:stateid/2,usa:countryid/2],[tombigbee:riverid/2,mississippi:stateid/2,usa:countryid/2],[wabash:riverid/2,indiana:stateid/2,usa:countryid/2],[canadian:riverid/2,oklahoma:stateid/2,usa:countryid/2],[columbia:riverid/2,washington:stateid/2,usa:countryid/2],[cimarron:riverid/2,new mexico:stateid/2,usa:countryid/2],[red:riverid/2,arkansas:stateid/2,usa:countryid/2],[republican:riverid/2,kansas:stateid/2,usa:countryid/2],[washita:riverid/2,texas:stateid/2,usa:countryid/2],[tennessee:riverid/2,kentucky:stateid/2,usa:countryid/2],[rio grande:riverid/2,colorado:stateid/2,usa:countryid/2],[hudson:riverid/2,new jersey:stateid/2,usa:countryid/2],[niobrara:riverid/2,wyoming:stateid/2,usa:countryid/2],[gila:riverid/2,arizona:stateid/2,usa:countryid/2],[cumberland:riverid/2,tennessee:stateid/2,usa:countryid/2],[ohio:riverid/2,indiana:stateid/2,usa:countryid/2],[white:riverid/2,missouri:stateid/2,usa:countryid/2]}:{[riverid/2,stateid/2,countryid/2]}[2] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,longest(A,(river(A),loc(A,B),state(B),loc(B,C),state(C))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:488: query => {[2364000count],[638000count],[23670000count],[4217000count],[4206000count],[3107000count],[4916000count],[2889000count],[10800000count],[3025000count],[2286000count],[594000count],[1303000count],[5346800count],[9746000count],[1569000count],[5737000count],[786700count],[9262000count],[7365000count],[1461000count],[4113200count],[1125000count],[2718000count],[469557count],[4700000count],[5882000count],[920600count],[944000count],[5490000count],[1950000count],[401800count],[11863000count],[800500count],[690767count],[17558000count],[652700count],[511500count],[2913000count],[2520000count],[3894000count],[5463000count],[4076000count],[2633000count],[14229000count],[947200count],[3121800count],[4591000count],[964000count],[11400000count]} | answer(A,(population(B,A),state(B),const(C,riverid(mississippi))))
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:494: query => {[Join failed syntactically: {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] and {[montana:stateid/2,2.07e-06count/length^2],[california:stateid/2,5.78e-05count/length^2],[texas:stateid/2,2.06e-05count/length^2],[hawaii:stateid/2,5.75e-05count/length^2],[idaho:stateid/2,4.39e-06count/length^2],[indiana:stateid/2,5.86e-05count/length^2],[alabama:stateid/2,2.91e-05count/length^2],[west virginia:stateid/2,3.11e-05count/length^2],[south carolina:stateid/2,3.87e-05count/length^2],[north dakota:stateid/2,3.56e-06count/length^2],[vermont:stateid/2,2.05e-05count/length^2],[utah:stateid/2,6.64e-06count/length^2],[rhode island:stateid/2,3.02e-04count/length^2],[nebraska:stateid/2,7.84e-06count/length^2],[new jersey:stateid/2,3.65e-04count/length^2],[district of columbia:stateid/2,2.24e-04count/length^2],[seattle_wa:cityid/3,0.001count/length^2],[georgia:stateid/2,3.58e-05count/length^2],[pennsylvania:stateid/2,1.01e-04count/length^2],[louisiana:stateid/2,3.40e-05count/length^2],[iowa:stateid/2,2.00e-05count/length^2],[kentucky:stateid/2,1.11e-05count/length^2],[illinois:stateid/2,7.82e-05count/length^2],[oregon:stateid/2,1.05e-05count/length^2],[maryland:stateid/2,1.56e-04count/length^2],[virginia:stateid/2,5.06e-05count/length^2],[kansas:stateid/2,1.11e-05count/length^2],[north carolina:stateid/2,4.31e-05count/length^2],[colorado:stateid/2,1.07e-05count/length^2],[tennessee:stateid/2,4.21e-05count/length^2],[massachusetts:stateid/2,2.67e-04count/length^2],[wisconsin:stateid/2,3.23e-05count/length^2],[missouri:stateid/2,2.72e-05count/length^2],[michigan:stateid/2,6.11e-05count/length^2],[washington:stateid/2,2.33e-05count/length^2],[ohio:stateid/2,1.01e-04count/length^2],[nevada:stateid/2,2.80e-06count/length^2],[florida:stateid/2,5.48e-05count/length^2],[maine:stateid/2,1.31e-05count/length^2],[minnesota:stateid/2,1.86e-05count/length^2],[wyoming:stateid/2,1.85e-06count/length^2],[new york:stateid/2,1.38e-04count/length^2],[delaware:stateid/2,1.12e-04count/length^2],[south dakota:stateid/2,3.46e-06count/length^2],[alaska:stateid/2,2.62e-07count/length^2],[mississippi:stateid/2,2.04e-05count/length^2],[new hampshire:stateid/2,3.83e-05count/length^2],[arkansas:stateid/2,1.66e-05count/length^2],[connecticut:stateid/2,2.39e-04count/length^2],[usa:countryid/2,3.13e-05count/length^2],[oklahoma:stateid/2,1.67e-05count/length^2],[arizona:stateid/2,9.21e-06count/length^2],[new mexico:stateid/2,4.14e-06count/length^2]}:{[stateid/2,count/length^2],[countryid/2,count/length^2],[cityid/3,count/length^2]}[1] => {}:error]} | answer(A,(density(B,A),smallest(B,(state(B),density(A,B)))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:498: query => {[2286000count],[4206000count],[3025000count],[1303000count]} | answer(A,(population(B,A),state(B),next_to(B,C),const(C,stateid(texas))))
        Example tmpmq8f_g1t.dlog:499: query => {[9.83e+12length^2]} | answer(A,(area(B,A),const(B,countryid(usa))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:503: query => {[2667length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:505: query => {[washita:riverid/2],[pecos:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[red:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(texas))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:509: query => {[delaware:riverid/2]} | answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:510: query => {[Join failed syntactically: {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] and {[michigan:stateid/2,9262000count],[colorado springs_co:cityid/3,215150count],[skokie_il:cityid/3,60278count],[pontiac_mi:cityid/3,76715count],[wyoming_mi:cityid/3,59616count],[clearwater_fl:cityid/3,85450count],[lake charles_la:cityid/3,75051count],[idaho:stateid/2,944000count],[koolaupoko_hi:cityid/3,109373count],[spokane_wa:cityid/3,171300count],[minnesota:stateid/2,4076000count],[sioux city_ia:cityid/3,82003count],[indianapolis_in:cityid/3,700807count],[san diego_ca:cityid/3,875538count],[wisconsin:stateid/2,4700000count],[irvine_ca:cityid/3,62134count],[grand prairie_tx:cityid/3,71462count],[waterloo_ia:cityid/3,75985count],[jackson_ms:cityid/3,202895count],[kenosha_wi:cityid/3,77685count],[inglewood_ca:cityid/3,94162count],[alhambra_ca:cityid/3,64767count],[lawton_ok:cityid/3,80054count],[greenwich_ct:cityid/3,59578count],[decatur_il:cityid/3,93939count],[hampton_va:cityid/3,122617count],[garland_tx:cityid/3,138857count],[redford_mi:cityid/3,58441count],[newport beach_ca:cityid/3,63475count],[evanston_il:cityid/3,73706count],[honolulu_hi:cityid/3,762874count],[huntington_wv:cityid/3,63684count],[montana:stateid/2,786700count],[new rochelle_ny:cityid/3,70794count],[cranston_ri:cityid/3,71992count],[chicago_il:cityid/3,3005172count],[independence_mo:cityid/3,111797count],[berkeley_ca:cityid/3,103328count],[santa ana_ca:cityid/3,203713count],[salinas_ca:cityid/3,80479count],[bridgeport_ct:cityid/3,142546count],[tallahassee_fl:cityid/3,81548count],[syracuse_ny:cityid/3,170105count],[bellevue_wa:cityid/3,73903count],[oxnard_ca:cityid/3,108195count],[st. clair shores_mi:cityid/3,76210count],[virginia:stateid/2,5346800count],[west covina_ca:cityid/3,80292count],[gary_in:cityid/3,151968count],[simi valley_ca:cityid/3,77500count],[anaheim_ca:cityid/3,219311count],[arlington_tx:cityid/3,160123count],[bayonne_nj:cityid/3,65047count],[compton_ca:cityid/3,81230count],[oceanside_ca:cityid/3,76698count],[maryland:stateid/2,4217000count],[wichita falls_tx:cityid/3,94201count],[kansas city_ks:cityid/3,161148count],[north carolina:stateid/2,5882000count],[iowa:stateid/2,2913000count],[chula vista_ca:cityid/3,83927count],[rockford_il:cityid/3,139712count],[overland park_ks:cityid/3,81784count],[bristol_ct:cityid/3,57370count],[cherry hill_nj:cityid/3,68785count],[terre haute_in:cityid/3,61125count],[fullerton_ca:cityid/3,102246count],[wichita_ks:cityid/3,279212count],[waterbury_ct:cityid/3,103266count],[tulsa_ok:cityid/3,360919count],[midland_tx:cityid/3,70525count],[riverside_ca:cityid/3,170876count],[brockton_ma:cityid/3,95172count],[erie_pa:cityid/3,119123count],[newton_ma:cityid/3,83622count],[lynchburg_va:cityid/3,66743count],[euclid_oh:cityid/3,59999count],[camden_nj:cityid/3,84910count],[orange_ca:cityid/3,91450count],[norman_ok:cityid/3,68020count],[stamford_ct:cityid/3,102466count],[elgin_il:cityid/3,63668count],[utica_ny:cityid/3,75632count],[ontario_ca:cityid/3,88820count],[los angeles_ca:cityid/3,2966850count],[salt lake city_ut:cityid/3,163034count],[hollywood_fl:cityid/3,117188count],[albany_ny:cityid/3,101727count],[redondo beach_ca:cityid/3,57102count],[san bernardino_ca:cityid/3,118794count],[providence_ri:cityid/3,156804count],[south bend_in:cityid/3,109727count],[texas:stateid/2,14229000count],[fairfield_ca:cityid/3,58099count],[little rock_ar:cityid/3,158915count],[lawrence_ma:cityid/3,63175count],[bristol township_pa:cityid/3,58733count],[champaign_il:cityid/3,58267count],[lynn_ma:cityid/3,78471count],[santa monica_ca:cityid/3,88314count],[massachusetts:stateid/2,5737000count],[columbus_oh:cityid/3,564871count],[altoona_pa:cityid/3,57078count],[silver spring_md:cityid/3,72893count],[charleston_sc:cityid/3,69855count],[oklahoma city_ok:cityid/3,403213count],[new hampshire:stateid/2,920600count],[waltham_ma:cityid/3,58200count],[columbus_ga:cityid/3,169441count],[lakewood_ca:cityid/3,74654count],[houston_tx:cityid/3,1595138count],[westminster_ca:cityid/3,71133count],[beaumont_tx:cityid/3,118102count],[boise_id:cityid/3,102249count],[dayton_oh:cityid/3,203371count],[meriden_ct:cityid/3,57118count],[tucson_az:cityid/3,330537count],[long beach_ca:cityid/3,361334count],[vermont:stateid/2,511500count],[charleston_wv:cityid/3,63968count],[abilene_tx:cityid/3,98315count],[plano_tx:cityid/3,72331count],[wilmington_de:cityid/3,70195count],[memphis_tn:cityid/3,646356count],[flint_mi:cityid/3,159611count],[metairie_la:cityid/3,164160count],[odessa_tx:cityid/3,90027count],[bethesda_md:cityid/3,63022count],[muncie_in:cityid/3,77216count],[dearborn_mi:cityid/3,90660count],[trenton_nj:cityid/3,92124count],[clinton_mi:cityid/3,72400count],[chesapeake_va:cityid/3,114226count],[alameda_ca:cityid/3,63852count],[rochester_ny:cityid/3,241741count],[cleveland_oh:cityid/3,573822count],[austin_tx:cityid/3,345496count],[modesto_ca:cityid/3,106963count],[new haven_ct:cityid/3,126089count],[tacoma_wa:cityid/3,158501count],[anderson_in:cityid/3,64695count],[lakewood_oh:cityid/3,61963count],[fort collins_co:cityid/3,64632count],[farmington hills_mi:cityid/3,58056count],[clifton_nj:cityid/3,74388count],[pawtucket_ri:cityid/3,71204count],[cambridge_ma:cityid/3,95322count],[taylor_mi:cityid/3,77568count],[san jose_ca:cityid/3,629442count],[glendale_ca:cityid/3,139060count],[warwick_ri:cityid/3,87123count],[laredo_tx:cityid/3,91449count],[seattle_wa:cityid/3,493846count],[west valley_ut:cityid/3,72299count],[omaha_ne:cityid/3,314255count],[miami beach_fl:cityid/3,96298count],[reno_nv:cityid/3,100756count],[lincoln_ne:cityid/3,171932count],[dallas_tx:cityid/3,904078count],[tampa_fl:cityid/3,271523count],[chattanooga_tn:cityid/3,169728count],[waco_tx:cityid/3,101261count],[baltimore_md:cityid/3,786775count],[dubuque_ia:cityid/3,62321count],[ventura_ca:cityid/3,73774count],[st. paul_mn:cityid/3,270230count],[buffalo_ny:cityid/3,357870count],[green bay_wi:cityid/3,87899count],[lowell_ma:cityid/3,92418count],[atlanta_ga:cityid/3,425022count],[st. joseph_mo:cityid/3,76691count],[fort worth_tx:cityid/3,385164count],[sterling heights_mi:cityid/3,108999count],[salem_or:cityid/3,89233count],[huntsville_al:cityid/3,142513count],[middletown_nj:cityid/3,61615count],[allentown_pa:cityid/3,103758count],[san mateo_ca:cityid/3,77640count],[south gate_ca:cityid/3,66784count],[citrus heights_ca:cityid/3,85911count],[washington_dc:cityid/3,638333count],[north dakota:stateid/2,652700count],[usa:countryid/2,307890000count],[kalamazoo_mi:cityid/3,79722count],[newark_nj:cityid/3,329248count],[knoxville_tn:cityid/3,175030count],[pomona_ca:cityid/3,92742count],[east los angeles_ca:cityid/3,110017count],[detroit_mi:cityid/3,1203339count],[richmond_ca:cityid/3,74676count],[fayetteville_nc:cityid/3,59507count],[norfolk_va:cityid/3,266979count],[irving_tx:cityid/3,109943count],[danbury_ct:cityid/3,60470count],[mobile_al:cityid/3,200452count],[irvington_nj:cityid/3,61493count],[orlando_fl:cityid/3,128394count],[kenner_la:cityid/3,66382count],[westland_mi:cityid/3,84603count],[winston-salem_nc:cityid/3,131885count],[fort lauderdale_fl:cityid/3,153256count],[milwaukee_wi:cityid/3,636212count],[scranton_pa:cityid/3,88117count],[anchorage_ak:cityid/3,174431count],[rochester_mn:cityid/3,57906count],[illinois:stateid/2,11400000count],[hammond_in:cityid/3,93714count],[ogden_ut:cityid/3,64407count],[abingdon_pa:cityid/3,59084count],[madison_wi:cityid/3,170616count],[hamilton_oh:cityid/3,63189count],[sioux falls_sd:cityid/3,81343count],[vallejo_ca:cityid/3,80188count],[burbank_ca:cityid/3,84625count],[santa rosa_ca:cityid/3,83205count],[lexington_ky:cityid/3,204165count],[shreveport_la:cityid/3,205820count],[birmingham_al:cityid/3,284413count],[dearborn heights_mi:cityid/3,67706count],[billings_mt:cityid/3,66842count],[arizona:stateid/2,2718000count],[mesa_az:cityid/3,152453count],[el cajon_ca:cityid/3,73892count],[corpus christi_tx:cityid/3,231999count],[pasadena_ca:cityid/3,118072count],[canton_oh:cityid/3,93077count],[mount vernon_ny:cityid/3,66713count],[reading_pa:cityid/3,78686count],[bloomington_mn:cityid/3,81831count],[levittown_ny:cityid/3,57045count],[kendall_fl:cityid/3,73758count],[manchester_nh:cityid/3,90936count],[ann arbor_mi:cityid/3,107969count],[livonia_mi:cityid/3,104814count],[cicero_il:cityid/3,61232count],[el monte_ca:cityid/3,79494count],[kansas city_mo:cityid/3,448159count],[indiana:stateid/2,5490000count],[cincinnati_oh:cityid/3,385457count],[waukegan_il:cityid/3,67653count],[west virginia:stateid/2,1950000count],[grand rapids_mi:cityid/3,181843count],[colorado:stateid/2,2889000count],[elizabeth_nj:cityid/3,106201count],[phoenix_az:cityid/3,789704count],[pensacola_fl:cityid/3,57619count],[fremont_ca:cityid/3,131945count],[boulder_co:cityid/3,76685count],[louisville_ky:cityid/3,298451count],[new mexico:stateid/2,1303000count],[oklahoma:stateid/2,3025000count],[new britain_ct:cityid/3,73840count],[richardson_tx:cityid/3,72496count],[arlington_va:cityid/3,152599count],[warren_mi:cityid/3,161134count],[toledo_oh:cityid/3,354635count],[ohio:stateid/2,10800000count],[niagara falls_ny:cityid/3,71384count],[evansville_in:cityid/3,130496count],[philadelphia_pa:cityid/3,1688210count],[brownsville_tx:cityid/3,84997count],[yonkers_ny:cityid/3,195351count],[washington:stateid/2,4113200count],[waterford_mi:cityid/3,64250count],[delaware:stateid/2,594000count],[glendale_az:cityid/3,96988count],[monroe_la:cityid/3,57597count],[north charleston_sc:cityid/3,62504count],[hawaii:stateid/2,964000count],[tyler_tx:cityid/3,70508count],[costa mesa_ca:cityid/3,82291count],[norwalk_ct:cityid/3,77767count],[santa clara_ca:cityid/3,87700count],[saginaw_mi:cityid/3,77508count],[springfield_il:cityid/3,100054count],[nashua_nh:cityid/3,67865count],[des moines_ia:cityid/3,191003count],[nebraska:stateid/2,1569000count],[southfield_mi:cityid/3,75568count],[newport news_va:cityid/3,144903count],[new jersey:stateid/2,7365000count],[san leandro_ca:cityid/3,63952count],[arvada_co:cityid/3,84576count],[st. louis_mo:cityid/3,453085count],[new york:stateid/2,17558000count],[akron_oh:cityid/3,237177count],[maine:stateid/2,1125000count],[lafayette_la:cityid/3,80584count],[lorain_oh:cityid/3,75416count],[sunnyvale_ca:cityid/3,106618count],[st. petersburg_fl:cityid/3,238647count],[san francisco_ca:cityid/3,678974count],[charlotte_nc:cityid/3,314447count],[new bedford_ma:cityid/3,98478count],[east orange_nj:cityid/3,77878count],[parma_oh:cityid/3,92548count],[high point_nc:cityid/3,64107count],[thousand oaks_ca:cityid/3,77797count],[jersey city_nj:cityid/3,223532count],[savannah_ga:cityid/3,141654count],[mcallen_tx:cityid/3,67042count],[norwalk_ca:cityid/3,84901count],[utah:stateid/2,1461000count],[portsmouth_va:cityid/3,104577count],[macon_ga:cityid/3,116860count],[schenectady_ny:cityid/3,67972count],[great falls_mt:cityid/3,56725count],[west allis_wi:cityid/3,63982count],[fresno_ca:cityid/3,218202count],[georgia:stateid/2,5463000count],[ewa_hi:cityid/3,190037count],[davenport_ia:cityid/3,103254count],[miami_fl:cityid/3,346865count],[hartford_ct:cityid/3,136392count],[longview_tx:cityid/3,62762count],[scottsdale_az:cityid/3,88622count],[baton rouge_la:cityid/3,219419count],[fort smith_ar:cityid/3,71384count],[joliet_il:cityid/3,77956count],[greensboro_nc:cityid/3,155642count],[cheektowaga_ny:cityid/3,92145count],[scotts valley_ca:cityid/3,6037count],[greenville_sc:cityid/3,58242count],[garden grove_ca:cityid/3,123351count],[escondido_ca:cityid/3,62480count],[royal oak_mi:cityid/3,70893count],[west hartford_ct:cityid/3,61301count],[durham_nc:cityid/3,100538count],[louisiana:stateid/2,4206000count],[irondequoit_ny:cityid/3,57648count],[springfield_mo:cityid/3,133116count],[west palm beach_fl:cityid/3,62530count],[albany_ga:cityid/3,74425count],[columbia_mo:cityid/3,62061count],[boston_ma:cityid/3,562994count],[portland_me:cityid/3,61572count],[lakewood_co:cityid/3,113808count],[bakersfield_ca:cityid/3,105611count],[california:stateid/2,23670000count],[virginia beach_va:cityid/3,262199count],[somerville_ma:cityid/3,77372count],[denver_co:cityid/3,492365count],[torrance_ca:cityid/3,131497count],[aurora_il:cityid/3,81293count],[pasadena_tx:cityid/3,112560count],[new orleans_la:cityid/3,557515count],[springfield_oh:cityid/3,72563count],[albuquerque_nm:cityid/3,331767count],[tennessee:stateid/2,4591000count],[upper darby_pa:cityid/3,84054count],[pennsylvania:stateid/2,11863000count],[arlington heights_il:cityid/3,66116count],[raleigh_nc:cityid/3,149771count],[peoria_il:cityid/3,124160count],[woodbridge_nj:cityid/3,90074count],[missouri:stateid/2,4916000count],[largo_fl:cityid/3,58977count],[south carolina:stateid/2,3121800count],[appleton_wi:cityid/3,58913count],[mississippi:stateid/2,2520000count],[mesquite_tx:cityid/3,67053count],[kansas:stateid/2,2364000count],[tempe_az:cityid/3,106919count],[penn hills_pa:cityid/3,57632count],[paterson_nj:cityid/3,137970count],[amarillo_tx:cityid/3,149230count],[concord_ca:cityid/3,103763count],[roanoke_va:cityid/3,100427count],[connecticut:stateid/2,3107000count],[provo_ut:cityid/3,74111count],[lubbock_tx:cityid/3,173979count],[alexandria_va:cityid/3,103217count],[pittsburgh_pa:cityid/3,423938count],[elyria_oh:cityid/3,57504count],[alaska:stateid/2,401800count],[richmond_va:cityid/3,219214count],[gainesville_fl:cityid/3,81371count],[wyoming:stateid/2,469557count],[pueblo_co:cityid/3,101686count],[fall river_ma:cityid/3,92574count],[florida:stateid/2,9746000count],[downey_ca:cityid/3,82602count],[edison_nj:cityid/3,70193count],[arkansas:stateid/2,2286000count],[lower merion_pa:cityid/3,59651count],[minneapolis_mn:cityid/3,370951count],[nevada:stateid/2,800500count],[casper_wy:cityid/3,51016count],[oakland_ca:cityid/3,339337count],[quincy_ma:cityid/3,84743count],[mountain view_ca:cityid/3,58655count],[las vegas_nv:cityid/3,164674count],[youngstown_oh:cityid/3,115436count],[port arthur_tx:cityid/3,61195count],[south dakota:stateid/2,690767count],[medford_ma:cityid/3,58076count],[kentucky:stateid/2,2364000count],[framingham_ma:cityid/3,65113count],[buena park_ca:cityid/3,64165count],[worcester_ma:cityid/3,161799count],[troy_mi:cityid/3,67102count],[kettering_oh:cityid/3,61186count],[san antonio_tx:cityid/3,785880count],[el paso_tx:cityid/3,425259count],[huntington beach_ca:cityid/3,170505count],[oregon:stateid/2,2633000count],[portland_or:cityid/3,366383count],[montgomery_al:cityid/3,177857count],[racine_wi:cityid/3,85725count],[jacksonville_fl:cityid/3,540920count],[sacramento_ca:cityid/3,275741count],[daly city_ca:cityid/3,78519count],[cedar rapids_ia:cityid/3,110243count],[springfield_ma:cityid/3,152319count],[fargo_nd:cityid/3,61308count],[duluth_mn:cityid/3,92811count],[whittier_ca:cityid/3,68558count],[district of columbia:stateid/2,638000count],[bethlehem_pa:cityid/3,70419count],[alabama:stateid/2,3894000count],[oak lawn_il:cityid/3,60590count],[dundalk_md:cityid/3,71293count],[topeka_ks:cityid/3,118690count],[hayward_ca:cityid/3,93585count],[nashville_tn:cityid/3,455651count],[north little rock_ar:cityid/3,64388count],[stockton_ca:cityid/3,149779count],[san angelo_tx:cityid/3,73240count],[columbia_sc:cityid/3,101229count],[carson_ca:cityid/3,81221count],[tuscaloosa_al:cityid/3,75143count],[eugene_or:cityid/3,105664count],[santa barbara_ca:cityid/3,74542count],[lansing_mi:cityid/3,130414count],[rhode island:stateid/2,947200count],[aurora_co:cityid/3,158588count],[new york_ny:cityid/3,7071639count],[fort wayne_in:cityid/3,172196count]}:{[cityid/3,count],[countryid/2,count],[stateid/2,count]}[1] => {}:error]} | answer(A,(population(B,A),state(A),population(A,B),population(A,B),population(A,A)))
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:512: query => {[oxnard_ca:cityid/3],[bristol township_pa:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[fayetteville_nc:cityid/3],[orlando_fl:cityid/3],[san angelo_tx:cityid/3],[downey_ca:cityid/3],[greenville_sc:cityid/3],[concord_ca:cityid/3],[richardson_tx:cityid/3],[columbia_sc:cityid/3],[waukegan_il:cityid/3],[connecticut:riverid/2],[naknek:lakeid/2],[orange_ca:cityid/3],[clark fork:riverid/2],[pomona_ca:cityid/3],[lowell_ma:cityid/3],[charleston_sc:cityid/3],[largo_fl:cityid/3],[allegheny:riverid/2],[clearwater_fl:cityid/3],[bayonne_nj:cityid/3],[manchester_nh:cityid/3],[amarillo_tx:cityid/3],[vallejo_ca:cityid/3],[south platte:riverid/2],[grand prairie_tx:cityid/3],[hudson:riverid/2],[san bernardino_ca:cityid/3],[lakewood_oh:cityid/3],[bethesda_md:cityid/3],[evanston_il:cityid/3],[medford_ma:cityid/3],[san leandro_ca:cityid/3],[lakewood_co:cityid/3],[pueblo_co:cityid/3],[great falls_mt:cityid/3],[boise_id:cityid/3],[modesto_ca:cityid/3],[richmond_ca:cityid/3],[north charleston_sc:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[bellevue_wa:cityid/3],[reno_nv:cityid/3],[warwick_ri:cityid/3],[schenectady_ny:cityid/3],[sterling heights_mi:cityid/3],[peoria_il:cityid/3],[santa clara_ca:cityid/3],[bethlehem_pa:cityid/3],[utica_ny:cityid/3],[salem_or:cityid/3],[columbia_mo:cityid/3],[alexandria_va:cityid/3],[springfield_mo:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[livonia_mi:cityid/3],[salton sea:lakeid/2],[lawton_ok:cityid/3],[okeechobee:lakeid/2],[fargo_nd:cityid/3],[citrus heights_ca:cityid/3],[waterford_mi:cityid/3],[independence_mo:cityid/3],[silver spring_md:cityid/3],[waco_tx:cityid/3],[red:lakeid/2],[carson_ca:cityid/3],[tombigbee:riverid/2],[bristol_ct:cityid/3],[glendale_ca:cityid/3],[wyoming_mi:cityid/3],[rochester_mn:cityid/3],[beaumont_tx:cityid/3],[chattahoochee:riverid/2],[oceanside_ca:cityid/3],[oak lawn_il:cityid/3],[east orange_nj:cityid/3],[scranton_pa:cityid/3],[westland_mi:cityid/3],[south gate_ca:cityid/3],[bloomington_mn:cityid/3],[royal oak_mi:cityid/3],[terre haute_in:cityid/3],[ogden_ut:cityid/3],[longview_tx:cityid/3],[anderson_in:cityid/3],[springfield_oh:cityid/3],[waterloo_ia:cityid/3],[troy_mi:cityid/3],[rockford_il:cityid/3],[somerville_ma:cityid/3],[lynn_ma:cityid/3],[quincy_ma:cityid/3],[cicero_il:cityid/3],[roanoke:riverid/2],[stockton_ca:cityid/3],[teshekpuk:lakeid/2],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[huntington_wv:cityid/3],[norwalk_ct:cityid/3],[bridgeport_ct:cityid/3],[delaware:riverid/2],[ontario_ca:cityid/3],[alhambra_ca:cityid/3],[lorain_oh:cityid/3],[penn hills_pa:cityid/3],[wateree catawba:riverid/2],[macon_ga:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[billings_mt:cityid/3],[dearborn heights_mi:cityid/3],[wilmington_de:cityid/3],[hayward_ca:cityid/3],[irving_tx:cityid/3],[scottsdale_az:cityid/3],[cedar rapids_ia:cityid/3],[santa monica_ca:cityid/3],[kettering_oh:cityid/3],[santa rosa_ca:cityid/3],[gainesville_fl:cityid/3],[kendall_fl:cityid/3],[powder:riverid/2],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[arvada_co:cityid/3],[brownsville_tx:cityid/3],[sioux falls_sd:cityid/3],[kalamazoo_mi:cityid/3],[south bend_in:cityid/3],[clifton_nj:cityid/3],[chula vista_ca:cityid/3],[flathead:lakeid/2],[euclid_oh:cityid/3],[redondo beach_ca:cityid/3],[tahoe:lakeid/2],[hartford_ct:cityid/3],[mesquite_tx:cityid/3],[clinton_mi:cityid/3],[burbank_ca:cityid/3],[bighorn:riverid/2],[farmington hills_mi:cityid/3],[middletown_nj:cityid/3],[pasadena_tx:cityid/3],[racine_wi:cityid/3],[youngstown_oh:cityid/3],[huntsville_al:cityid/3],[cheektowaga_ny:cityid/3],[framingham_ma:cityid/3],[monroe_la:cityid/3],[tallahassee_fl:cityid/3],[champaign_il:cityid/3],[tuscaloosa_al:cityid/3],[boulder_co:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[woodbridge_nj:cityid/3],[reading_pa:cityid/3],[newport news_va:cityid/3],[wichita falls_tx:cityid/3],[fort smith_ar:cityid/3],[danbury_ct:cityid/3],[mount vernon_ny:cityid/3],[fort collins_co:cityid/3],[ann arbor_mi:cityid/3],[waltham_ma:cityid/3],[nashua_nh:cityid/3],[alameda_ca:cityid/3],[niobrara:riverid/2],[stamford_ct:cityid/3],[arlington heights_il:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[laredo_tx:cityid/3],[rock:riverid/2],[high point_nc:cityid/3],[dubuque_ia:cityid/3],[sunnyvale_ca:cityid/3],[charleston_wv:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[dundalk_md:cityid/3],[meriden_ct:cityid/3],[west allis_wi:cityid/3],[lynchburg_va:cityid/3],[west hartford_ct:cityid/3],[southfield_mi:cityid/3],[paterson_nj:cityid/3],[altoona_pa:cityid/3],[lansing_mi:cityid/3],[becharof:lakeid/2],[hollywood_fl:cityid/3],[st. clair shores_mi:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[ventura_ca:cityid/3],[new bedford_ma:cityid/3],[tempe_az:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[pensacola_fl:cityid/3],[duluth_mn:cityid/3],[greenwich_ct:cityid/3],[skokie_il:cityid/3],[elyria_oh:cityid/3],[sioux city_ia:cityid/3],[bakersfield_ca:cityid/3],[niagara falls_ny:cityid/3],[thousand oaks_ca:cityid/3],[cranston_ri:cityid/3],[evansville_in:cityid/3],[trenton_nj:cityid/3],[redford_mi:cityid/3],[kenosha_wi:cityid/3],[durham_nc:cityid/3],[lake of the woods:lakeid/2],[iliamna:lakeid/2],[winnebago:lakeid/2],[fremont_ca:cityid/3],[camden_nj:cityid/3],[miami beach_fl:cityid/3],[odessa_tx:cityid/3],[appleton_wi:cityid/3],[muncie_in:cityid/3],[overland park_ks:cityid/3],[potomac:riverid/2],[green bay_wi:cityid/3],[topeka_ks:cityid/3],[edison_nj:cityid/3],[republican:riverid/2],[waterbury_ct:cityid/3],[hampton_va:cityid/3],[west valley_ut:cityid/3],[st. joseph_mo:cityid/3],[savannah_ga:cityid/3],[torrance_ca:cityid/3],[rainy:lakeid/2],[lakewood_ca:cityid/3],[pontchartrain:lakeid/2],[casper_wy:cityid/3],[hammond_in:cityid/3],[irvington_nj:cityid/3],[abingdon_pa:cityid/3],[eugene_or:cityid/3],[joliet_il:cityid/3],[simi valley_ca:cityid/3],[west palm beach_fl:cityid/3],[dearborn_mi:cityid/3],[cherry hill_nj:cityid/3],[new haven_ct:cityid/3],[lawrence_ma:cityid/3],[chesapeake_va:cityid/3],[springfield_il:cityid/3],[erie_pa:cityid/3],[compton_ca:cityid/3],[levittown_ny:cityid/3],[aurora_il:cityid/3],[albany_ny:cityid/3],[elizabeth_nj:cityid/3],[pontiac_mi:cityid/3],[whittier_ca:cityid/3],[decatur_il:cityid/3],[pawtucket_ri:cityid/3],[koolaupoko_hi:cityid/3],[north little rock_ar:cityid/3],[champlain:lakeid/2],[lake charles_la:cityid/3],[fullerton_ca:cityid/3],[davenport_ia:cityid/3],[neosho:riverid/2],[fall river_ma:cityid/3],[brockton_ma:cityid/3],[midland_tx:cityid/3],[new rochelle_ny:cityid/3],[lafayette_la:cityid/3],[parma_oh:cityid/3],[allentown_pa:cityid/3],[provo_ut:cityid/3],[upper darby_pa:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[roanoke_va:cityid/3],[pasadena_ca:cityid/3],[port arthur_tx:cityid/3],[newton_ma:cityid/3],[glendale_az:cityid/3],[tyler_tx:cityid/3],[new britain_ct:cityid/3],[st. clair:lakeid/2],[escondido_ca:cityid/3],[elgin_il:cityid/3],[cambridge_ma:cityid/3],[lower merion_pa:cityid/3],[irondequoit_ny:cityid/3],[norman_ok:cityid/3],[mille lacs:lakeid/2],[san juan:riverid/2],[portland_me:cityid/3],[taylor_mi:cityid/3],[albany_ga:cityid/3],[hamilton_oh:cityid/3],[saginaw_mi:cityid/3],[st. francis:riverid/2],[kenner_la:cityid/3],[canton_oh:cityid/3]} | answer(A,(major(A),loc(A),loc(A,B),const(B,countryid(usa))))
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:515: query => {[rio grande:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid('new mexico')))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:516: query => {[providence_ri:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid('rhode island'))))
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:519: query => {[Join failed syntactically: {[south platte:riverid/2],[arkansas:riverid/2],[colorado:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[republican:riverid/2],[north platte:riverid/2],[green:riverid/2],[san juan:riverid/2]}:{[riverid/2]}[0] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,(state(A),traverse(A,B),const(B,stateid(colorado))))
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:521: query => {[new york_ny:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:522: query => {[new york_ny:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:526: query => {[mount marcy:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid('new york')))))
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:533: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,riverid(mississippi))))
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:535: query => {[690767count]} | answer(A,(population(B,A),const(B,stateid('south dakota'))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:536: query => {[wheeler peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid('new mexico')))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:537: query => {} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid('new mexico'))))
        Example tmpmq8f_g1t.dlog:538: query => {[Join failed syntactically: {[oregon,oregon:stateid/2,oregon:stateid/2,pacific ocean:placeid/2],[oregon,oregon:stateid/2,oregon:stateid/2,springfield_or:cityid/3],[oregon,oregon:stateid/2,oregon:stateid/2,snake:riverid/2],[oregon,oregon:stateid/2,oregon:stateid/2,mount hood:placeid/2],[oregon,oregon:stateid/2,oregon:stateid/2,salem_or:cityid/3],[oregon,oregon:stateid/2,oregon:stateid/2,eugene_or:cityid/3],[oregon,oregon:stateid/2,oregon:stateid/2,portland_or:cityid/3],[oregon,oregon:stateid/2,oregon:stateid/2,columbia:riverid/2]}:{[rank,stateid/2,stateid/2,placeid/2],[length,stateid/2,stateid/2,mountainid/2],[date_year,stateid/2,stateid/2,riverid/2],[time_duration,stateid/2,stateid/2,lakeid/2],[money/time_duration,stateid/2,stateid/2,placeid/2],[name,stateid/2,stateid/2,mountainid/2],[date_month,stateid/2,stateid/2,cityid/3],[count,stateid/2,stateid/2,riverid/2],[date_time,stateid/2,stateid/2,riverid/2],[date,stateid/2,stateid/2,riverid/2],[length,stateid/2,stateid/2,cityid/3],[date,stateid/2,stateid/2,lakeid/2],[length^2,stateid/2,stateid/2,mountainid/2],[count,stateid/2,stateid/2,mountainid/2],[date_month,stateid/2,stateid/2,placeid/2],[money,stateid/2,stateid/2,cityid/3],[date_time,stateid/2,stateid/2,mountainid/2],[money/time_duration,stateid/2,stateid/2,cityid/3],[date_month,stateid/2,stateid/2,lakeid/2],[name,stateid/2,stateid/2,placeid/2],[time_duration,stateid/2,stateid/2,mountainid/2],[count/length^2,stateid/2,stateid/2,riverid/2],[count/length^2,stateid/2,stateid/2,lakeid/2],[date_year,stateid/2,stateid/2,placeid/2],[frac,stateid/2,stateid/2,mountainid/2],[count/length^2,stateid/2,stateid/2,cityid/3],[frac,stateid/2,stateid/2,riverid/2],[date,stateid/2,stateid/2,cityid/3],[length^2,stateid/2,stateid/2,riverid/2],[money,stateid/2,stateid/2,mountainid/2],[date_year,stateid/2,stateid/2,cityid/3],[name,stateid/2,stateid/2,riverid/2],[time_duration,stateid/2,stateid/2,placeid/2],[length,stateid/2,stateid/2,placeid/2],[date_month,stateid/2,stateid/2,mountainid/2],[rank,stateid/2,stateid/2,riverid/2],[time_duration,stateid/2,stateid/2,cityid/3],[count,stateid/2,stateid/2,cityid/3],[rank,stateid/2,stateid/2,cityid/3],[money/time_duration,stateid/2,stateid/2,riverid/2],[date_day,stateid/2,stateid/2,cityid/3],[name,stateid/2,stateid/2,cityid/3],[frac,stateid/2,stateid/2,placeid/2],[money/time_duration,stateid/2,stateid/2,mountainid/2],[date_year,stateid/2,stateid/2,lakeid/2],[count,stateid/2,stateid/2,placeid/2],[money,stateid/2,stateid/2,riverid/2],[rank,stateid/2,stateid/2,lakeid/2],[frac,stateid/2,stateid/2,cityid/3],[date_day,stateid/2,stateid/2,placeid/2],[count/length^2,stateid/2,stateid/2,mountainid/2],[date_month,stateid/2,stateid/2,riverid/2],[count,stateid/2,stateid/2,lakeid/2],[money,stateid/2,stateid/2,placeid/2],[date_year,stateid/2,stateid/2,mountainid/2],[length^2,stateid/2,stateid/2,cityid/3],[date_day,stateid/2,stateid/2,mountainid/2],[length,stateid/2,stateid/2,lakeid/2],[length,stateid/2,stateid/2,riverid/2],[date_time,stateid/2,stateid/2,cityid/3],[date_time,stateid/2,stateid/2,placeid/2],[length^2,stateid/2,stateid/2,lakeid/2],[date_time,stateid/2,stateid/2,lakeid/2],[date_day,stateid/2,stateid/2,riverid/2],[frac,stateid/2,stateid/2,lakeid/2],[name,stateid/2,stateid/2,lakeid/2],[date,stateid/2,stateid/2,placeid/2],[money/time_duration,stateid/2,stateid/2,lakeid/2],[length^2,stateid/2,stateid/2,placeid/2],[rank,stateid/2,stateid/2,mountainid/2],[date_day,stateid/2,stateid/2,lakeid/2],[date,stateid/2,stateid/2,mountainid/2],[time_duration,stateid/2,stateid/2,riverid/2],[money,stateid/2,stateid/2,lakeid/2],[count/length^2,stateid/2,stateid/2,placeid/2]}[3] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,largest(A,(state(A),loc(A,B),const(B,stateid(oregon)))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:539: query => {[mount mckinley:placeid/2]} | answer(A,largest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:541: query => {[Join failed syntactically: {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] and {[oxnard_ca:cityid/3],[dayton_oh:cityid/3],[bristol township_pa:cityid/3],[duval circle_dc:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[fayetteville_nc:cityid/3],[orlando_fl:cityid/3],[san angelo_tx:cityid/3],[downey_ca:cityid/3],[greenville_sc:cityid/3],[concord_ca:cityid/3],[richardson_tx:cityid/3],[grand island_ne:cityid/3],[columbia_sc:cityid/3],[waukegan_il:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[lubbock_tx:cityid/3],[lowell_ma:cityid/3],[phoenix_az:cityid/3],[charleston_sc:cityid/3],[largo_fl:cityid/3],[clearwater_fl:cityid/3],[bayonne_nj:cityid/3],[idaho falls_id:cityid/3],[baton rouge_la:cityid/3],[san jose_ca:cityid/3],[salt lake city_ut:cityid/3],[manchester_nh:cityid/3],[amarillo_tx:cityid/3],[georgetown_dc:cityid/3],[vallejo_ca:cityid/3],[grand prairie_tx:cityid/3],[covington_ky:cityid/3],[new york_ny:cityid/3],[concord_nh:cityid/3],[san bernardino_ca:cityid/3],[portsmouth_nh:cityid/3],[warren_mi:cityid/3],[lakewood_oh:cityid/3],[bethesda_md:cityid/3],[louisville_ky:cityid/3],[yonkers_ny:cityid/3],[evanston_il:cityid/3],[fort worth_tx:cityid/3],[omaha_ne:cityid/3],[medford_ma:cityid/3],[san leandro_ca:cityid/3],[lakewood_co:cityid/3],[long beach_ca:cityid/3],[biloxi_ms:cityid/3],[mobile_al:cityid/3],[pueblo_co:cityid/3],[las vegas_nv:cityid/3],[great falls_mt:cityid/3],[boise_id:cityid/3],[richmond_va:cityid/3],[modesto_ca:cityid/3],[boston_ma:cityid/3],[cleveland_oh:cityid/3],[houston_tx:cityid/3],[cheyenne_wy:cityid/3],[richmond_ca:cityid/3],[north charleston_sc:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[madison_wi:cityid/3],[des moines_ia:cityid/3],[bellevue_wa:cityid/3],[reno_nv:cityid/3],[warwick_ri:cityid/3],[schenectady_ny:cityid/3],[sterling heights_mi:cityid/3],[birmingham_al:cityid/3],[norfolk_va:cityid/3],[peoria_il:cityid/3],[santa clara_ca:cityid/3],[newark_nj:cityid/3],[bethlehem_pa:cityid/3],[aurora_co:cityid/3],[utica_ny:cityid/3],[salem_or:cityid/3],[milwaukee_wi:cityid/3],[fort lauderdale_fl:cityid/3],[columbia_mo:cityid/3],[alexandria_va:cityid/3],[springfield_mo:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[livonia_mi:cityid/3],[lawton_ok:cityid/3],[fargo_nd:cityid/3],[citrus heights_ca:cityid/3],[waterford_mi:cityid/3],[independence_mo:cityid/3],[silver spring_md:cityid/3],[waco_tx:cityid/3],[st. louis_mo:cityid/3],[oakland_ca:cityid/3],[worcester_ma:cityid/3],[carson_ca:cityid/3],[bennington_vt:cityid/3],[bristol_ct:cityid/3],[glendale_ca:cityid/3],[indianapolis_in:cityid/3],[wyoming_mi:cityid/3],[rochester_mn:cityid/3],[san diego_ca:cityid/3],[beaumont_tx:cityid/3],[charlotte_nc:cityid/3],[los angeles_ca:cityid/3],[watertown_sd:cityid/3],[oceanside_ca:cityid/3],[bangor_me:cityid/3],[oak lawn_il:cityid/3],[east orange_nj:cityid/3],[oklahoma city_ok:cityid/3],[scranton_pa:cityid/3],[westland_mi:cityid/3],[south gate_ca:cityid/3],[bloomington_mn:cityid/3],[royal oak_mi:cityid/3],[corpus christi_tx:cityid/3],[terre haute_in:cityid/3],[ogden_ut:cityid/3],[longview_tx:cityid/3],[missoula_mt:cityid/3],[anderson_in:cityid/3],[springfield_oh:cityid/3],[tulsa_ok:cityid/3],[san francisco_ca:cityid/3],[waterloo_ia:cityid/3],[troy_mi:cityid/3],[riverside_ca:cityid/3],[rockford_il:cityid/3],[somerville_ma:cityid/3],[lynn_ma:cityid/3],[minneapolis_mn:cityid/3],[quincy_ma:cityid/3],[cicero_il:cityid/3],[fresno_ca:cityid/3],[jackson_ms:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[huntington_wv:cityid/3],[norwalk_ct:cityid/3],[bridgeport_ct:cityid/3],[ontario_ca:cityid/3],[arlington_tx:cityid/3],[alhambra_ca:cityid/3],[lorain_oh:cityid/3],[penn hills_pa:cityid/3],[macon_ga:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[memphis_tn:cityid/3],[billings_mt:cityid/3],[dearborn heights_mi:cityid/3],[wilmington_de:cityid/3],[hayward_ca:cityid/3],[irving_tx:cityid/3],[scottsdale_az:cityid/3],[cedar rapids_ia:cityid/3],[santa monica_ca:cityid/3],[kettering_oh:cityid/3],[santa rosa_ca:cityid/3],[rapid city_sd:cityid/3],[gainesville_fl:cityid/3],[hattiesburg_ms:cityid/3],[gary_in:cityid/3],[kendall_fl:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[sitka_ak:cityid/3],[arvada_co:cityid/3],[brownsville_tx:cityid/3],[sioux falls_sd:cityid/3],[flint_mi:cityid/3],[anchorage_ak:cityid/3],[kalamazoo_mi:cityid/3],[south bend_in:cityid/3],[clifton_nj:cityid/3],[chula vista_ca:cityid/3],[euclid_oh:cityid/3],[redondo beach_ca:cityid/3],[chattanooga_tn:cityid/3],[nashville_tn:cityid/3],[hartford_ct:cityid/3],[springfield_or:cityid/3],[washington_dc:cityid/3],[mesquite_tx:cityid/3],[clinton_mi:cityid/3],[burbank_ca:cityid/3],[farmington hills_mi:cityid/3],[middletown_nj:cityid/3],[las cruces_nm:cityid/3],[pasadena_tx:cityid/3],[little rock_ar:cityid/3],[pine bluff_ar:cityid/3],[racine_wi:cityid/3],[lexington_ky:cityid/3],[youngstown_oh:cityid/3],[tampa_fl:cityid/3],[austin_tx:cityid/3],[new orleans_la:cityid/3],[juneau_ak:cityid/3],[huntsville_al:cityid/3],[cheektowaga_ny:cityid/3],[framingham_ma:cityid/3],[cincinnati_oh:cityid/3],[providence_ri:cityid/3],[monroe_la:cityid/3],[tallahassee_fl:cityid/3],[lewiston_me:cityid/3],[kansas city_ks:cityid/3],[champaign_il:cityid/3],[tuscaloosa_al:cityid/3],[boulder_co:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[minot_nd:cityid/3],[woodbridge_nj:cityid/3],[reading_pa:cityid/3],[newport news_va:cityid/3],[wichita falls_tx:cityid/3],[fort smith_ar:cityid/3],[miami_fl:cityid/3],[danbury_ct:cityid/3],[lincoln_ne:cityid/3],[mount vernon_ny:cityid/3],[rock springs_wy:cityid/3],[fort collins_co:cityid/3],[ann arbor_mi:cityid/3],[waltham_ma:cityid/3],[bismarck_nd:cityid/3],[santa fe_nm:cityid/3],[akron_oh:cityid/3],[nashua_nh:cityid/3],[buffalo_ny:cityid/3],[alameda_ca:cityid/3],[stamford_ct:cityid/3],[arlington heights_il:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[laredo_tx:cityid/3],[high point_nc:cityid/3],[albuquerque_nm:cityid/3],[springfield_ma:cityid/3],[dubuque_ia:cityid/3],[auburn_me:cityid/3],[sunnyvale_ca:cityid/3],[charleston_wv:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[sacramento_ca:cityid/3],[dundalk_md:cityid/3],[meriden_ct:cityid/3],[tenleytown_dc:cityid/3],[ewa_hi:cityid/3],[mesa_az:cityid/3],[west allis_wi:cityid/3],[st. paul_mn:cityid/3],[lynchburg_va:cityid/3],[west hartford_ct:cityid/3],[southfield_mi:cityid/3],[paterson_nj:cityid/3],[st. petersburg_fl:cityid/3],[tucson_az:cityid/3],[el paso_tx:cityid/3],[seattle_wa:cityid/3],[altoona_pa:cityid/3],[lansing_mi:cityid/3],[sparks_nv:cityid/3],[rutland_vt:cityid/3],[hollywood_fl:cityid/3],[st. clair shores_mi:cityid/3],[mcallen_tx:cityid/3],[newark_de:cityid/3],[meridian_ms:cityid/3],[pocatello_id:cityid/3],[abilene_tx:cityid/3],[grand forks_nd:cityid/3],[ventura_ca:cityid/3],[new bedford_ma:cityid/3],[tempe_az:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[pensacola_fl:cityid/3],[lewiston_id:cityid/3],[duluth_mn:cityid/3],[greenwich_ct:cityid/3],[skokie_il:cityid/3],[elyria_oh:cityid/3],[sioux city_ia:cityid/3],[bakersfield_ca:cityid/3],[niagara falls_ny:cityid/3],[thousand oaks_ca:cityid/3],[cranston_ri:cityid/3],[evansville_in:cityid/3],[columbus_ga:cityid/3],[trenton_nj:cityid/3],[redford_mi:cityid/3],[kenosha_wi:cityid/3],[durham_nc:cityid/3],[fremont_ca:cityid/3],[camden_nj:cityid/3],[miami beach_fl:cityid/3],[columbus_oh:cityid/3],[odessa_tx:cityid/3],[appleton_wi:cityid/3],[wichita_ks:cityid/3],[muncie_in:cityid/3],[overland park_ks:cityid/3],[anaheim_ca:cityid/3],[fort wayne_in:cityid/3],[honolulu_hi:cityid/3],[aberdeen_sd:cityid/3],[atlanta_ga:cityid/3],[butte_mt:cityid/3],[jersey city_nj:cityid/3],[montgomery_al:cityid/3],[green bay_wi:cityid/3],[topeka_ks:cityid/3],[edison_nj:cityid/3],[grand rapids_mi:cityid/3],[jacksonville_fl:cityid/3],[dallas_tx:cityid/3],[waterbury_ct:cityid/3],[hampton_va:cityid/3],[west valley_ut:cityid/3],[roswell_nm:cityid/3],[north platte_ne:cityid/3],[st. joseph_mo:cityid/3],[chicago_il:cityid/3],[savannah_ga:cityid/3],[torrance_ca:cityid/3],[colorado springs_co:cityid/3],[denver_co:cityid/3],[lakewood_ca:cityid/3],[owensboro_ky:cityid/3],[casper_wy:cityid/3],[hammond_in:cityid/3],[virginia beach_va:cityid/3],[baltimore_md:cityid/3],[laramie_wy:cityid/3],[irvington_nj:cityid/3],[abingdon_pa:cityid/3],[eugene_or:cityid/3],[joliet_il:cityid/3],[simi valley_ca:cityid/3],[knoxville_tn:cityid/3],[wheeling_wv:cityid/3],[west palm beach_fl:cityid/3],[dearborn_mi:cityid/3],[cherry hill_nj:cityid/3],[santa ana_ca:cityid/3],[new haven_ct:cityid/3],[lawrence_ma:cityid/3],[chesapeake_va:cityid/3],[springfield_il:cityid/3],[sunrise manor_nv:cityid/3],[erie_pa:cityid/3],[compton_ca:cityid/3],[levittown_ny:cityid/3],[aurora_il:cityid/3],[metairie_la:cityid/3],[detroit_mi:cityid/3],[dover_de:cityid/3],[albany_ny:cityid/3],[elizabeth_nj:cityid/3],[pontiac_mi:cityid/3],[philadelphia_pa:cityid/3],[whittier_ca:cityid/3],[decatur_il:cityid/3],[pawtucket_ri:cityid/3],[koolaupoko_hi:cityid/3],[north little rock_ar:cityid/3],[essex_vt:cityid/3],[portland_or:cityid/3],[lake charles_la:cityid/3],[fullerton_ca:cityid/3],[davenport_ia:cityid/3],[kansas city_mo:cityid/3],[fall river_ma:cityid/3],[brockton_ma:cityid/3],[midland_tx:cityid/3],[new rochelle_ny:cityid/3],[lafayette_la:cityid/3],[greensboro_nc:cityid/3],[tacoma_wa:cityid/3],[parma_oh:cityid/3],[allentown_pa:cityid/3],[provo_ut:cityid/3],[upper darby_pa:cityid/3],[spokane_wa:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[roanoke_va:cityid/3],[arlington_va:cityid/3],[pasadena_ca:cityid/3],[port arthur_tx:cityid/3],[brookside_de:cityid/3],[newton_ma:cityid/3],[glendale_az:cityid/3],[san antonio_tx:cityid/3],[syracuse_ny:cityid/3],[tyler_tx:cityid/3],[rochester_ny:cityid/3],[new britain_ct:cityid/3],[escondido_ca:cityid/3],[toledo_oh:cityid/3],[elgin_il:cityid/3],[cambridge_ma:cityid/3],[lower merion_pa:cityid/3],[irondequoit_ny:cityid/3],[norman_ok:cityid/3],[pittsburgh_pa:cityid/3],[portland_me:cityid/3],[wahiawa_hi:cityid/3],[shreveport_la:cityid/3],[burlington_vt:cityid/3],[taylor_mi:cityid/3],[albany_ga:cityid/3],[hamilton_oh:cityid/3],[huntington beach_ca:cityid/3],[saginaw_mi:cityid/3],[fairbanks_ak:cityid/3],[kenner_la:cityid/3],[parkersburg_wv:cityid/3],[canton_oh:cityid/3]}:{[cityid/3]}[0] => {}:error]} | answer(A,largest(B,(state(A),city(A),loc(A,C),const(C,cityid(denver,_)))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:542: query => {} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid('new carolina'))))
        Example tmpmq8f_g1t.dlog:543: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))
        Example tmpmq8f_g1t.dlog:544: query => {[Join failed syntactically: {[usa:countryid/2]}:{[countryid/2]}[0] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,(state(A),loc(B,A),const(B,stateid(texas))))
        Example tmpmq8f_g1t.dlog:545: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))
        Example tmpmq8f_g1t.dlog:546: query => {[columbia_sc:cityid/3],[greenville_sc:cityid/3],[charleston_sc:cityid/3],[north charleston_sc:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid('south carolina'))))
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:548: query => {[delaware:riverid/2]} | answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:549: query => {[rio grande:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(texas)))))
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:552: query => {[oxnard_ca:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[downey_ca:cityid/3],[concord_ca:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[vallejo_ca:cityid/3],[san bernardino_ca:cityid/3],[san leandro_ca:cityid/3],[modesto_ca:cityid/3],[richmond_ca:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[santa clara_ca:cityid/3],[citrus heights_ca:cityid/3],[carson_ca:cityid/3],[glendale_ca:cityid/3],[oceanside_ca:cityid/3],[south gate_ca:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[ontario_ca:cityid/3],[alhambra_ca:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[hayward_ca:cityid/3],[santa monica_ca:cityid/3],[santa rosa_ca:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[chula vista_ca:cityid/3],[redondo beach_ca:cityid/3],[burbank_ca:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[alameda_ca:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[sunnyvale_ca:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[ventura_ca:cityid/3],[bakersfield_ca:cityid/3],[thousand oaks_ca:cityid/3],[fremont_ca:cityid/3],[torrance_ca:cityid/3],[lakewood_ca:cityid/3],[simi valley_ca:cityid/3],[compton_ca:cityid/3],[whittier_ca:cityid/3],[fullerton_ca:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[pasadena_ca:cityid/3],[escondido_ca:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(california))))
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:554: query => {[colorado:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(california)))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:555: query => {[los angeles_ca:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(california)))))
        Example tmpmq8f_g1t.dlog:556: query => {[los angeles_ca:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(california)))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:557: query => {} | answer(A,(population(B,A),const(B,stateid('north york'))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:559: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))
        Example tmpmq8f_g1t.dlog:560: query => {} | answer(A,(population(B,A),const(B,cityid(washington,ma))))
        Example tmpmq8f_g1t.dlog:561: query => {[rio grande:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(texas)))))
        Example tmpmq8f_g1t.dlog:562: query => {[albany_ga:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(georgia)))))
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:564: query => {[mount davis:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(pennsylvania)))))
        Example tmpmq8f_g1t.dlog:565: query => {[sterling heights_mi:cityid/3],[livonia_mi:cityid/3],[waterford_mi:cityid/3],[wyoming_mi:cityid/3],[westland_mi:cityid/3],[royal oak_mi:cityid/3],[troy_mi:cityid/3],[dearborn heights_mi:cityid/3],[kalamazoo_mi:cityid/3],[clinton_mi:cityid/3],[farmington hills_mi:cityid/3],[ann arbor_mi:cityid/3],[southfield_mi:cityid/3],[lansing_mi:cityid/3],[st. clair shores_mi:cityid/3],[redford_mi:cityid/3],[dearborn_mi:cityid/3],[pontiac_mi:cityid/3],[taylor_mi:cityid/3],[saginaw_mi:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(michigan))))
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:568: query => {[albany_ga:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(georgia)))))
        Example tmpmq8f_g1t.dlog:569: query => {[milwaukee_wi:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(wisconsin)))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:570: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:571: query => {[milwaukee_wi:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(wisconsin)))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:572: query => {[562994count]} | answer(A,(population(B,A),const(B,cityid(boston,ma))))
        Example tmpmq8f_g1t.dlog:573: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example tmpmq8f_g1t.dlog:574: query => {[new york_ny:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpmq8f_g1t.dlog:575: query => {[overland park_ks:cityid/3],[topeka_ks:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(kansas))))
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:577: query => {[racine_wi:cityid/3],[west allis_wi:cityid/3],[kenosha_wi:cityid/3],[appleton_wi:cityid/3],[green bay_wi:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(wisconsin))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:578: query => {} | answer(A,(population(B,A),const(B,stateid('new mckinley'))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:579: query => {[lake michigan:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(wisconsin)))))
        Example tmpmq8f_g1t.dlog:580: query => {[arkansas river:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(colorado)))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:581: query => {[gulf of mexico:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:584: query => {} | answer(A,(population(B,A),const(B,cityid(washington,mo))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:585: query => {[milwaukee_wi:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(wisconsin)))))
        Example tmpmq8f_g1t.dlog:586: query => {[wilmington_de:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(delaware))))
        Example tmpmq8f_g1t.dlog:587: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[longview_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:588: query => {[gannett peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(wyoming)))))
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:590: query => {[920600count]} | answer(A,(population(B,A),const(B,stateid('new hampshire'))))
        Example tmpmq8f_g1t.dlog:591: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,tx))))
        Example tmpmq8f_g1t.dlog:592: query => {[gannett peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(wyoming)))))
        Example tmpmq8f_g1t.dlog:593: query => {[6.91e+11length^2]} | answer(A,(area(B,A),const(B,stateid(texas))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:594: query => {[493846count]} | answer(A,(population(B,A),const(B,cityid(seattle,wa))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:595: query => {[houston_tx:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))
        Example tmpmq8f_g1t.dlog:596: query => {[alaska:stateid/2]} | answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:598: query => {[arkansas river:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(colorado)))))
        Example tmpmq8f_g1t.dlog:599: query => {[gannett peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(wyoming)))))
        Example tmpmq8f_g1t.dlog:600: query => {[gannett peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(wyoming)))))
        Example tmpmq8f_g1t.dlog:601: query => {[billings_mt:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(montana)))))
        Example tmpmq8f_g1t.dlog:602: query => {[portland_or:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(oregon)))))
        Example tmpmq8f_g1t.dlog:603: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,riverid(mississippi))))
        Example tmpmq8f_g1t.dlog:604: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B))))
        Example tmpmq8f_g1t.dlog:605: query => {[houston_tx:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:607: query => {[mississippi river:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(iowa)))))
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:609: query => {[ocheyedan mound:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(iowa)))))
        Example tmpmq8f_g1t.dlog:610: query => {[houston_tx:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:612: query => {[portland_or:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(oregon)))))
        Example tmpmq8f_g1t.dlog:613: query => {[columbia:riverid/2]} | answer(A,largest(A,(river(A),loc(A,B),const(B,stateid(oregon)))))
        Example tmpmq8f_g1t.dlog:614: query => {[690767count]} | answer(A,(population(B,A),const(B,stateid('south dakota'))))
        Example tmpmq8f_g1t.dlog:615: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:618: query => {[5.48e-05count/length^2]} | answer(A,(density(B,A),const(B,stateid(florida))))
        Example tmpmq8f_g1t.dlog:619: query => {[1303000count]} | answer(A,(population(B,A),const(B,stateid('new mexico'))))
        Example tmpmq8f_g1t.dlog:620: query => {[gannett peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(wyoming)))))
        Example tmpmq8f_g1t.dlog:621: query => {[gulf of mexico:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmpmq8f_g1t.dlog:622: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:623: query => {[690767count]} | answer(A,(population(B,A),const(B,stateid('south dakota'))))
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:626: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example tmpmq8f_g1t.dlog:627: query => {[texas:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:628: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:629: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:630: query => {[cheyenne_wy:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(wyoming))))
        Example tmpmq8f_g1t.dlog:631: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example tmpmq8f_g1t.dlog:632: query => {[cheyenne_wy:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(wyoming))))
        Example tmpmq8f_g1t.dlog:633: query => {[2.06e-05count/length^2]} | answer(A,(density(B,A),const(B,stateid(texas))))
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:635: query => {[new york:stateid/2],[usa:countryid/2]} | answer(A,largest(B,(city(B),loc(B,A))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:636: query => {[23670000count]} | answer(A,(population(B,A),const(B,stateid(california))))
        Example tmpmq8f_g1t.dlog:637: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmpmq8f_g1t.dlog:638: query => {[170876count]} | answer(A,(population(B,A),const(B,cityid(riverside,_))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:639: query => {[sacramento_ca:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(california))))
        Example tmpmq8f_g1t.dlog:640: query => {[indianapolis_in:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(indiana))))
        Example tmpmq8f_g1t.dlog:641: query => {[170876count]} | answer(A,(population(B,A),const(B,cityid(riverside,_))))
        Example tmpmq8f_g1t.dlog:642: query => {[170876count]} | answer(A,(population(B,A),const(B,cityid(riverside,_))))
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:644: query => {[492365count]} | answer(A,(population(B,A),const(B,cityid(denver,_))))
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:646: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[lubbock_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[fort worth_tx:cityid/3],[houston_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[corpus christi_tx:cityid/3],[longview_tx:cityid/3],[arlington_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[austin_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[el paso_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[dallas_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[san antonio_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(texas))))
        Example tmpmq8f_g1t.dlog:647: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmpmq8f_g1t.dlog:648: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B))))
        Example tmpmq8f_g1t.dlog:649: query => {[4.09e+11length^2]} | answer(A,(area(B,A),const(B,stateid(california))))
        Example tmpmq8f_g1t.dlog:650: query => {[south platte:riverid/2],[arkansas:riverid/2],[colorado:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[republican:riverid/2],[north platte:riverid/2],[green:riverid/2],[san juan:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(colorado))))
        Example tmpmq8f_g1t.dlog:651: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,cityid(_,_))))
        Example tmpmq8f_g1t.dlog:652: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:653: query => {[904078count]} | answer(A,(population(B,A),const(B,cityid(dallas,_))))
        Example tmpmq8f_g1t.dlog:654: query => {[23670000count]} | answer(A,(population(B,A),const(B,stateid(california))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:655: query => {[493846count]} | answer(A,(population(B,A),const(B,cityid(seattle,_))))
        Example tmpmq8f_g1t.dlog:656: query => {[493846count]} | answer(A,(population(B,A),const(B,cityid(seattle,_))))
        Example tmpmq8f_g1t.dlog:657: query => {[arizona:stateid/2],[nevada:stateid/2],[oregon:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(california))))
        Example tmpmq8f_g1t.dlog:658: query => {[mississippi:riverid/2]} | answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(iowa)))))
        Example tmpmq8f_g1t.dlog:659: query => {[lansing_mi:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(michigan))))
        Example tmpmq8f_g1t.dlog:660: query => {[4076000count]} | answer(A,(population(B,A),const(B,stateid(minnesota))))
        Example tmpmq8f_g1t.dlog:661: query => {[Join failed syntactically: {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] and {[michigan:stateid/2,9262000count],[colorado springs_co:cityid/3,215150count],[skokie_il:cityid/3,60278count],[pontiac_mi:cityid/3,76715count],[wyoming_mi:cityid/3,59616count],[clearwater_fl:cityid/3,85450count],[lake charles_la:cityid/3,75051count],[idaho:stateid/2,944000count],[koolaupoko_hi:cityid/3,109373count],[spokane_wa:cityid/3,171300count],[minnesota:stateid/2,4076000count],[sioux city_ia:cityid/3,82003count],[indianapolis_in:cityid/3,700807count],[san diego_ca:cityid/3,875538count],[wisconsin:stateid/2,4700000count],[irvine_ca:cityid/3,62134count],[grand prairie_tx:cityid/3,71462count],[waterloo_ia:cityid/3,75985count],[jackson_ms:cityid/3,202895count],[kenosha_wi:cityid/3,77685count],[inglewood_ca:cityid/3,94162count],[alhambra_ca:cityid/3,64767count],[lawton_ok:cityid/3,80054count],[greenwich_ct:cityid/3,59578count],[decatur_il:cityid/3,93939count],[hampton_va:cityid/3,122617count],[garland_tx:cityid/3,138857count],[redford_mi:cityid/3,58441count],[newport beach_ca:cityid/3,63475count],[evanston_il:cityid/3,73706count],[honolulu_hi:cityid/3,762874count],[huntington_wv:cityid/3,63684count],[montana:stateid/2,786700count],[new rochelle_ny:cityid/3,70794count],[cranston_ri:cityid/3,71992count],[chicago_il:cityid/3,3005172count],[independence_mo:cityid/3,111797count],[berkeley_ca:cityid/3,103328count],[santa ana_ca:cityid/3,203713count],[salinas_ca:cityid/3,80479count],[bridgeport_ct:cityid/3,142546count],[tallahassee_fl:cityid/3,81548count],[syracuse_ny:cityid/3,170105count],[bellevue_wa:cityid/3,73903count],[oxnard_ca:cityid/3,108195count],[st. clair shores_mi:cityid/3,76210count],[virginia:stateid/2,5346800count],[west covina_ca:cityid/3,80292count],[gary_in:cityid/3,151968count],[simi valley_ca:cityid/3,77500count],[anaheim_ca:cityid/3,219311count],[arlington_tx:cityid/3,160123count],[bayonne_nj:cityid/3,65047count],[compton_ca:cityid/3,81230count],[oceanside_ca:cityid/3,76698count],[maryland:stateid/2,4217000count],[wichita falls_tx:cityid/3,94201count],[kansas city_ks:cityid/3,161148count],[north carolina:stateid/2,5882000count],[iowa:stateid/2,2913000count],[chula vista_ca:cityid/3,83927count],[rockford_il:cityid/3,139712count],[overland park_ks:cityid/3,81784count],[bristol_ct:cityid/3,57370count],[cherry hill_nj:cityid/3,68785count],[terre haute_in:cityid/3,61125count],[fullerton_ca:cityid/3,102246count],[wichita_ks:cityid/3,279212count],[waterbury_ct:cityid/3,103266count],[tulsa_ok:cityid/3,360919count],[midland_tx:cityid/3,70525count],[riverside_ca:cityid/3,170876count],[brockton_ma:cityid/3,95172count],[erie_pa:cityid/3,119123count],[newton_ma:cityid/3,83622count],[lynchburg_va:cityid/3,66743count],[euclid_oh:cityid/3,59999count],[camden_nj:cityid/3,84910count],[orange_ca:cityid/3,91450count],[norman_ok:cityid/3,68020count],[stamford_ct:cityid/3,102466count],[elgin_il:cityid/3,63668count],[utica_ny:cityid/3,75632count],[ontario_ca:cityid/3,88820count],[los angeles_ca:cityid/3,2966850count],[salt lake city_ut:cityid/3,163034count],[hollywood_fl:cityid/3,117188count],[albany_ny:cityid/3,101727count],[redondo beach_ca:cityid/3,57102count],[san bernardino_ca:cityid/3,118794count],[providence_ri:cityid/3,156804count],[south bend_in:cityid/3,109727count],[texas:stateid/2,14229000count],[fairfield_ca:cityid/3,58099count],[little rock_ar:cityid/3,158915count],[lawrence_ma:cityid/3,63175count],[bristol township_pa:cityid/3,58733count],[champaign_il:cityid/3,58267count],[lynn_ma:cityid/3,78471count],[santa monica_ca:cityid/3,88314count],[massachusetts:stateid/2,5737000count],[columbus_oh:cityid/3,564871count],[altoona_pa:cityid/3,57078count],[silver spring_md:cityid/3,72893count],[charleston_sc:cityid/3,69855count],[oklahoma city_ok:cityid/3,403213count],[new hampshire:stateid/2,920600count],[waltham_ma:cityid/3,58200count],[columbus_ga:cityid/3,169441count],[lakewood_ca:cityid/3,74654count],[houston_tx:cityid/3,1595138count],[westminster_ca:cityid/3,71133count],[beaumont_tx:cityid/3,118102count],[boise_id:cityid/3,102249count],[dayton_oh:cityid/3,203371count],[meriden_ct:cityid/3,57118count],[tucson_az:cityid/3,330537count],[long beach_ca:cityid/3,361334count],[vermont:stateid/2,511500count],[charleston_wv:cityid/3,63968count],[abilene_tx:cityid/3,98315count],[plano_tx:cityid/3,72331count],[wilmington_de:cityid/3,70195count],[memphis_tn:cityid/3,646356count],[flint_mi:cityid/3,159611count],[metairie_la:cityid/3,164160count],[odessa_tx:cityid/3,90027count],[bethesda_md:cityid/3,63022count],[muncie_in:cityid/3,77216count],[dearborn_mi:cityid/3,90660count],[trenton_nj:cityid/3,92124count],[clinton_mi:cityid/3,72400count],[chesapeake_va:cityid/3,114226count],[alameda_ca:cityid/3,63852count],[rochester_ny:cityid/3,241741count],[cleveland_oh:cityid/3,573822count],[austin_tx:cityid/3,345496count],[modesto_ca:cityid/3,106963count],[new haven_ct:cityid/3,126089count],[tacoma_wa:cityid/3,158501count],[anderson_in:cityid/3,64695count],[lakewood_oh:cityid/3,61963count],[fort collins_co:cityid/3,64632count],[farmington hills_mi:cityid/3,58056count],[clifton_nj:cityid/3,74388count],[pawtucket_ri:cityid/3,71204count],[cambridge_ma:cityid/3,95322count],[taylor_mi:cityid/3,77568count],[san jose_ca:cityid/3,629442count],[glendale_ca:cityid/3,139060count],[warwick_ri:cityid/3,87123count],[laredo_tx:cityid/3,91449count],[seattle_wa:cityid/3,493846count],[west valley_ut:cityid/3,72299count],[omaha_ne:cityid/3,314255count],[miami beach_fl:cityid/3,96298count],[reno_nv:cityid/3,100756count],[lincoln_ne:cityid/3,171932count],[dallas_tx:cityid/3,904078count],[tampa_fl:cityid/3,271523count],[chattanooga_tn:cityid/3,169728count],[waco_tx:cityid/3,101261count],[baltimore_md:cityid/3,786775count],[dubuque_ia:cityid/3,62321count],[ventura_ca:cityid/3,73774count],[st. paul_mn:cityid/3,270230count],[buffalo_ny:cityid/3,357870count],[green bay_wi:cityid/3,87899count],[lowell_ma:cityid/3,92418count],[atlanta_ga:cityid/3,425022count],[st. joseph_mo:cityid/3,76691count],[fort worth_tx:cityid/3,385164count],[sterling heights_mi:cityid/3,108999count],[salem_or:cityid/3,89233count],[huntsville_al:cityid/3,142513count],[middletown_nj:cityid/3,61615count],[allentown_pa:cityid/3,103758count],[san mateo_ca:cityid/3,77640count],[south gate_ca:cityid/3,66784count],[citrus heights_ca:cityid/3,85911count],[washington_dc:cityid/3,638333count],[north dakota:stateid/2,652700count],[usa:countryid/2,307890000count],[kalamazoo_mi:cityid/3,79722count],[newark_nj:cityid/3,329248count],[knoxville_tn:cityid/3,175030count],[pomona_ca:cityid/3,92742count],[east los angeles_ca:cityid/3,110017count],[detroit_mi:cityid/3,1203339count],[richmond_ca:cityid/3,74676count],[fayetteville_nc:cityid/3,59507count],[norfolk_va:cityid/3,266979count],[irving_tx:cityid/3,109943count],[danbury_ct:cityid/3,60470count],[mobile_al:cityid/3,200452count],[irvington_nj:cityid/3,61493count],[orlando_fl:cityid/3,128394count],[kenner_la:cityid/3,66382count],[westland_mi:cityid/3,84603count],[winston-salem_nc:cityid/3,131885count],[fort lauderdale_fl:cityid/3,153256count],[milwaukee_wi:cityid/3,636212count],[scranton_pa:cityid/3,88117count],[anchorage_ak:cityid/3,174431count],[rochester_mn:cityid/3,57906count],[illinois:stateid/2,11400000count],[hammond_in:cityid/3,93714count],[ogden_ut:cityid/3,64407count],[abingdon_pa:cityid/3,59084count],[madison_wi:cityid/3,170616count],[hamilton_oh:cityid/3,63189count],[sioux falls_sd:cityid/3,81343count],[vallejo_ca:cityid/3,80188count],[burbank_ca:cityid/3,84625count],[santa rosa_ca:cityid/3,83205count],[lexington_ky:cityid/3,204165count],[shreveport_la:cityid/3,205820count],[birmingham_al:cityid/3,284413count],[dearborn heights_mi:cityid/3,67706count],[billings_mt:cityid/3,66842count],[arizona:stateid/2,2718000count],[mesa_az:cityid/3,152453count],[el cajon_ca:cityid/3,73892count],[corpus christi_tx:cityid/3,231999count],[pasadena_ca:cityid/3,118072count],[canton_oh:cityid/3,93077count],[mount vernon_ny:cityid/3,66713count],[reading_pa:cityid/3,78686count],[bloomington_mn:cityid/3,81831count],[levittown_ny:cityid/3,57045count],[kendall_fl:cityid/3,73758count],[manchester_nh:cityid/3,90936count],[ann arbor_mi:cityid/3,107969count],[livonia_mi:cityid/3,104814count],[cicero_il:cityid/3,61232count],[el monte_ca:cityid/3,79494count],[kansas city_mo:cityid/3,448159count],[indiana:stateid/2,5490000count],[cincinnati_oh:cityid/3,385457count],[waukegan_il:cityid/3,67653count],[west virginia:stateid/2,1950000count],[grand rapids_mi:cityid/3,181843count],[colorado:stateid/2,2889000count],[elizabeth_nj:cityid/3,106201count],[phoenix_az:cityid/3,789704count],[pensacola_fl:cityid/3,57619count],[fremont_ca:cityid/3,131945count],[boulder_co:cityid/3,76685count],[louisville_ky:cityid/3,298451count],[new mexico:stateid/2,1303000count],[oklahoma:stateid/2,3025000count],[new britain_ct:cityid/3,73840count],[richardson_tx:cityid/3,72496count],[arlington_va:cityid/3,152599count],[warren_mi:cityid/3,161134count],[toledo_oh:cityid/3,354635count],[ohio:stateid/2,10800000count],[niagara falls_ny:cityid/3,71384count],[evansville_in:cityid/3,130496count],[philadelphia_pa:cityid/3,1688210count],[brownsville_tx:cityid/3,84997count],[yonkers_ny:cityid/3,195351count],[washington:stateid/2,4113200count],[waterford_mi:cityid/3,64250count],[delaware:stateid/2,594000count],[glendale_az:cityid/3,96988count],[monroe_la:cityid/3,57597count],[north charleston_sc:cityid/3,62504count],[hawaii:stateid/2,964000count],[tyler_tx:cityid/3,70508count],[costa mesa_ca:cityid/3,82291count],[norwalk_ct:cityid/3,77767count],[santa clara_ca:cityid/3,87700count],[saginaw_mi:cityid/3,77508count],[springfield_il:cityid/3,100054count],[nashua_nh:cityid/3,67865count],[des moines_ia:cityid/3,191003count],[nebraska:stateid/2,1569000count],[southfield_mi:cityid/3,75568count],[newport news_va:cityid/3,144903count],[new jersey:stateid/2,7365000count],[san leandro_ca:cityid/3,63952count],[arvada_co:cityid/3,84576count],[st. louis_mo:cityid/3,453085count],[new york:stateid/2,17558000count],[akron_oh:cityid/3,237177count],[maine:stateid/2,1125000count],[lafayette_la:cityid/3,80584count],[lorain_oh:cityid/3,75416count],[sunnyvale_ca:cityid/3,106618count],[st. petersburg_fl:cityid/3,238647count],[san francisco_ca:cityid/3,678974count],[charlotte_nc:cityid/3,314447count],[new bedford_ma:cityid/3,98478count],[east orange_nj:cityid/3,77878count],[parma_oh:cityid/3,92548count],[high point_nc:cityid/3,64107count],[thousand oaks_ca:cityid/3,77797count],[jersey city_nj:cityid/3,223532count],[savannah_ga:cityid/3,141654count],[mcallen_tx:cityid/3,67042count],[norwalk_ca:cityid/3,84901count],[utah:stateid/2,1461000count],[portsmouth_va:cityid/3,104577count],[macon_ga:cityid/3,116860count],[schenectady_ny:cityid/3,67972count],[great falls_mt:cityid/3,56725count],[west allis_wi:cityid/3,63982count],[fresno_ca:cityid/3,218202count],[georgia:stateid/2,5463000count],[ewa_hi:cityid/3,190037count],[davenport_ia:cityid/3,103254count],[miami_fl:cityid/3,346865count],[hartford_ct:cityid/3,136392count],[longview_tx:cityid/3,62762count],[scottsdale_az:cityid/3,88622count],[baton rouge_la:cityid/3,219419count],[fort smith_ar:cityid/3,71384count],[joliet_il:cityid/3,77956count],[greensboro_nc:cityid/3,155642count],[cheektowaga_ny:cityid/3,92145count],[scotts valley_ca:cityid/3,6037count],[greenville_sc:cityid/3,58242count],[garden grove_ca:cityid/3,123351count],[escondido_ca:cityid/3,62480count],[royal oak_mi:cityid/3,70893count],[west hartford_ct:cityid/3,61301count],[durham_nc:cityid/3,100538count],[louisiana:stateid/2,4206000count],[irondequoit_ny:cityid/3,57648count],[springfield_mo:cityid/3,133116count],[west palm beach_fl:cityid/3,62530count],[albany_ga:cityid/3,74425count],[columbia_mo:cityid/3,62061count],[boston_ma:cityid/3,562994count],[portland_me:cityid/3,61572count],[lakewood_co:cityid/3,113808count],[bakersfield_ca:cityid/3,105611count],[california:stateid/2,23670000count],[virginia beach_va:cityid/3,262199count],[somerville_ma:cityid/3,77372count],[denver_co:cityid/3,492365count],[torrance_ca:cityid/3,131497count],[aurora_il:cityid/3,81293count],[pasadena_tx:cityid/3,112560count],[new orleans_la:cityid/3,557515count],[springfield_oh:cityid/3,72563count],[albuquerque_nm:cityid/3,331767count],[tennessee:stateid/2,4591000count],[upper darby_pa:cityid/3,84054count],[pennsylvania:stateid/2,11863000count],[arlington heights_il:cityid/3,66116count],[raleigh_nc:cityid/3,149771count],[peoria_il:cityid/3,124160count],[woodbridge_nj:cityid/3,90074count],[missouri:stateid/2,4916000count],[largo_fl:cityid/3,58977count],[south carolina:stateid/2,3121800count],[appleton_wi:cityid/3,58913count],[mississippi:stateid/2,2520000count],[mesquite_tx:cityid/3,67053count],[kansas:stateid/2,2364000count],[tempe_az:cityid/3,106919count],[penn hills_pa:cityid/3,57632count],[paterson_nj:cityid/3,137970count],[amarillo_tx:cityid/3,149230count],[concord_ca:cityid/3,103763count],[roanoke_va:cityid/3,100427count],[connecticut:stateid/2,3107000count],[provo_ut:cityid/3,74111count],[lubbock_tx:cityid/3,173979count],[alexandria_va:cityid/3,103217count],[pittsburgh_pa:cityid/3,423938count],[elyria_oh:cityid/3,57504count],[alaska:stateid/2,401800count],[richmond_va:cityid/3,219214count],[gainesville_fl:cityid/3,81371count],[wyoming:stateid/2,469557count],[pueblo_co:cityid/3,101686count],[fall river_ma:cityid/3,92574count],[florida:stateid/2,9746000count],[downey_ca:cityid/3,82602count],[edison_nj:cityid/3,70193count],[arkansas:stateid/2,2286000count],[lower merion_pa:cityid/3,59651count],[minneapolis_mn:cityid/3,370951count],[nevada:stateid/2,800500count],[casper_wy:cityid/3,51016count],[oakland_ca:cityid/3,339337count],[quincy_ma:cityid/3,84743count],[mountain view_ca:cityid/3,58655count],[las vegas_nv:cityid/3,164674count],[youngstown_oh:cityid/3,115436count],[port arthur_tx:cityid/3,61195count],[south dakota:stateid/2,690767count],[medford_ma:cityid/3,58076count],[kentucky:stateid/2,2364000count],[framingham_ma:cityid/3,65113count],[buena park_ca:cityid/3,64165count],[worcester_ma:cityid/3,161799count],[troy_mi:cityid/3,67102count],[kettering_oh:cityid/3,61186count],[san antonio_tx:cityid/3,785880count],[el paso_tx:cityid/3,425259count],[huntington beach_ca:cityid/3,170505count],[oregon:stateid/2,2633000count],[portland_or:cityid/3,366383count],[montgomery_al:cityid/3,177857count],[racine_wi:cityid/3,85725count],[jacksonville_fl:cityid/3,540920count],[sacramento_ca:cityid/3,275741count],[daly city_ca:cityid/3,78519count],[cedar rapids_ia:cityid/3,110243count],[springfield_ma:cityid/3,152319count],[fargo_nd:cityid/3,61308count],[duluth_mn:cityid/3,92811count],[whittier_ca:cityid/3,68558count],[district of columbia:stateid/2,638000count],[bethlehem_pa:cityid/3,70419count],[alabama:stateid/2,3894000count],[oak lawn_il:cityid/3,60590count],[dundalk_md:cityid/3,71293count],[topeka_ks:cityid/3,118690count],[hayward_ca:cityid/3,93585count],[nashville_tn:cityid/3,455651count],[north little rock_ar:cityid/3,64388count],[stockton_ca:cityid/3,149779count],[san angelo_tx:cityid/3,73240count],[columbia_sc:cityid/3,101229count],[carson_ca:cityid/3,81221count],[tuscaloosa_al:cityid/3,75143count],[eugene_or:cityid/3,105664count],[santa barbara_ca:cityid/3,74542count],[lansing_mi:cityid/3,130414count],[rhode island:stateid/2,947200count],[aurora_co:cityid/3,158588count],[new york_ny:cityid/3,7071639count],[fort wayne_in:cityid/3,172196count]}:{[cityid/3,count],[countryid/2,count],[stateid/2,count]}[1] => {}:error]} | answer(A,largest(B,(state(B),population(A,B))))
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:663: query => {[butte_mt:cityid/3],[great falls_mt:cityid/3],[billings_mt:cityid/3],[missoula_mt:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(montana))))
        Example tmpmq8f_g1t.dlog:664: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),loc(B,A),capital(B),loc(B,A),loc(B,A)))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:665: query => {[4076000count]} | answer(A,(population(B,A),const(B,stateid(minnesota))))
        Example tmpmq8f_g1t.dlog:666: query => {[79722count]} | answer(A,(population(B,A),const(B,cityid(kalamazoo,_))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:667: query => {[potomac:riverid/2],[roanoke:riverid/2]} | answer(A,(river(A),river(A),loc(A,B),const(B,stateid(virginia))))
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:669: query => {[montpelier_vt:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(vermont))))
        Example tmpmq8f_g1t.dlog:670: query => {[1.06e+11length^2]} | answer(A,(area(B,A),const(B,stateid(virginia))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:671: query => {[sterling heights_mi:cityid/3],[livonia_mi:cityid/3],[waterford_mi:cityid/3],[wyoming_mi:cityid/3],[westland_mi:cityid/3],[royal oak_mi:cityid/3],[troy_mi:cityid/3],[dearborn heights_mi:cityid/3],[kalamazoo_mi:cityid/3],[clinton_mi:cityid/3],[farmington hills_mi:cityid/3],[ann arbor_mi:cityid/3],[southfield_mi:cityid/3],[lansing_mi:cityid/3],[st. clair shores_mi:cityid/3],[redford_mi:cityid/3],[dearborn_mi:cityid/3],[pontiac_mi:cityid/3],[taylor_mi:cityid/3],[saginaw_mi:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(michigan))))
        Example tmpmq8f_g1t.dlog:672: query => {[2633000count]} | answer(A,(population(B,A),const(B,stateid(oregon))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:673: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example tmpmq8f_g1t.dlog:674: query => {[944000count]} | answer(A,(population(B,A),const(B,stateid(idaho))))
        Example tmpmq8f_g1t.dlog:675: query => {[Join failed syntactically: {[new york:stateid/2,usa:countryid/2],[new hampshire:stateid/2,usa:countryid/2],[missouri:stateid/2,usa:countryid/2],[iowa:stateid/2,usa:countryid/2],[maine:stateid/2,usa:countryid/2],[idaho:stateid/2,usa:countryid/2],[florida:stateid/2,usa:countryid/2],[ohio:stateid/2,usa:countryid/2],[alabama:stateid/2,usa:countryid/2],[kansas:stateid/2,usa:countryid/2],[alaska:stateid/2,usa:countryid/2],[north dakota:stateid/2,usa:countryid/2],[connecticut:stateid/2,usa:countryid/2],[kentucky:stateid/2,usa:countryid/2],[north carolina:stateid/2,usa:countryid/2],[georgia:stateid/2,usa:countryid/2],[new jersey:stateid/2,usa:countryid/2],[indiana:stateid/2,usa:countryid/2],[washington:stateid/2,usa:countryid/2],[maryland:stateid/2,usa:countryid/2],[michigan:stateid/2,usa:countryid/2],[nebraska:stateid/2,usa:countryid/2],[california:stateid/2,usa:countryid/2],[vermont:stateid/2,usa:countryid/2],[utah:stateid/2,usa:countryid/2],[minnesota:stateid/2,usa:countryid/2],[south carolina:stateid/2,usa:countryid/2],[pennsylvania:stateid/2,usa:countryid/2],[wyoming:stateid/2,usa:countryid/2],[colorado:stateid/2,usa:countryid/2],[hawaii:stateid/2,usa:countryid/2],[virginia:stateid/2,usa:countryid/2],[arizona:stateid/2,usa:countryid/2],[new mexico:stateid/2,usa:countryid/2],[illinois:stateid/2,usa:countryid/2],[wisconsin:stateid/2,usa:countryid/2],[tennessee:stateid/2,usa:countryid/2],[oklahoma:stateid/2,usa:countryid/2],[mississippi:stateid/2,usa:countryid/2],[montana:stateid/2,usa:countryid/2],[rhode island:stateid/2,usa:countryid/2],[louisiana:stateid/2,usa:countryid/2],[nevada:stateid/2,usa:countryid/2],[west virginia:stateid/2,usa:countryid/2],[oregon:stateid/2,usa:countryid/2],[massachusetts:stateid/2,usa:countryid/2],[arkansas:stateid/2,usa:countryid/2],[south dakota:stateid/2,usa:countryid/2],[delaware:stateid/2,usa:countryid/2],[texas:stateid/2,usa:countryid/2],[district of columbia:stateid/2,usa:countryid/2]}:{[stateid/2,countryid/2]}[1] and {[colorado springs_co:cityid/3,215150count],[skokie_il:cityid/3,60278count],[backbone mountain:placeid/2,1024length],[indiana:stateid/2,9.38e+10length^2],[pontiac_mi:cityid/3,76715count],[centerville:placeid/2,135length],[wyoming_mi:cityid/3,59616count],[clearwater_fl:cityid/3,85450count],[maine:stateid/2,8.62e+10length^2],[lake charles_la:cityid/3,75051count],[colorado:riverid/2,2333000length],[big stone lake:placeid/2,284length],[wateree catawba:riverid/2,636000length],[koolaupoko_hi:cityid/3,109373count],[spokane_wa:cityid/3,171300count],[sioux city_ia:cityid/3,82003count],[indianapolis_in:cityid/3,700807count],[taum sauk mountain:placeid/2,540length],[connecticut:stateid/2,1.30e+10length^2],[delaware:stateid/2,5.29e+09length^2],[san diego_ca:cityid/3,875538count],[belle fourche river:placeid/2,945length],[michigan:stateid/2,1.52e+11length^2],[irvine_ca:cityid/3,62134count],[grand prairie_tx:cityid/3,71462count],[waterloo_ia:cityid/3,75985count],[jackson_ms:cityid/3,202895count],[kenosha_wi:cityid/3,77685count],[winnebago:lakeid/2,557000000length^2],[inglewood_ca:cityid/3,94162count],[alhambra_ca:cityid/3,64767count],[lawton_ok:cityid/3,80054count],[nevada:stateid/2,2.86e+11length^2],[san juan:riverid/2,579000length],[greenwich_ct:cityid/3,59578count],[st. francis:riverid/2,684000length],[hudson:riverid/2,492000length],[decatur_il:cityid/3,93939count],[hampton_va:cityid/3,122617count],[garland_tx:cityid/3,138857count],[redford_mi:cityid/3,58441count],[newport beach_ca:cityid/3,63475count],[evanston_il:cityid/3,73706count],[honolulu_hi:cityid/3,762874count],[huntington_wv:cityid/3,63684count],[mount whitney:placeid/2,4418length],[new rochelle_ny:cityid/3,70794count],[cranston_ri:cityid/3,71992count],[chicago_il:cityid/3,3005172count],[gila:riverid/2,805000length],[independence_mo:cityid/3,111797count],[berkeley_ca:cityid/3,103328count],[santa ana_ca:cityid/3,203713count],[salinas_ca:cityid/3,80479count],[bridgeport_ct:cityid/3,142546count],[tallahassee_fl:cityid/3,81548count],[syracuse_ny:cityid/3,170105count],[bellevue_wa:cityid/3,73903count],[oxnard_ca:cityid/3,108195count],[texas:stateid/2,6.91e+11length^2],[wisconsin:stateid/2,1.45e+11length^2],[st. clair shores_mi:cityid/3,76210count],[mount katahdin:placeid/2,1606length],[beaver dam creek:placeid/2,610length],[west covina_ca:cityid/3,80292count],[gary_in:cityid/3,151968count],[simi valley_ca:cityid/3,77500count],[erie:lakeid/2,2.57e+10length^2],[iliamna:lakeid/2,2.68e+09length^2],[anaheim_ca:cityid/3,219311count],[arlington_tx:cityid/3,160123count],[bayonne_nj:cityid/3,65047count],[compton_ca:cityid/3,81230count],[oceanside_ca:cityid/3,76698count],[wichita falls_tx:cityid/3,94201count],[kansas city_ks:cityid/3,161148count],[colorado:stateid/2,2.69e+11length^2],[chula vista_ca:cityid/3,83927count],[rockford_il:cityid/3,139712count],[overland park_ks:cityid/3,81784count],[bristol_ct:cityid/3,57370count],[powder:riverid/2,603000length],[cherry hill_nj:cityid/3,68785count],[terre haute_in:cityid/3,61125count],[fullerton_ca:cityid/3,102246count],[wichita_ks:cityid/3,279212count],[waterbury_ct:cityid/3,103266count],[tulsa_ok:cityid/3,360919count],[midland_tx:cityid/3,70525count],[riverside_ca:cityid/3,170876count],[brockton_ma:cityid/3,95172count],[erie_pa:cityid/3,119123count],[newton_ma:cityid/3,83622count],[lynchburg_va:cityid/3,66743count],[euclid_oh:cityid/3,59999count],[camden_nj:cityid/3,84910count],[orange_ca:cityid/3,91450count],[norman_ok:cityid/3,68020count],[stamford_ct:cityid/3,102466count],[elgin_il:cityid/3,63668count],[long island sound:placeid/2,0length],[southeast corner:placeid/2,256length],[utica_ny:cityid/3,75632count],[ontario_ca:cityid/3,88820count],[neosho:riverid/2,740000length],[ohio:stateid/2,1.07e+11length^2],[los angeles_ca:cityid/3,2966850count],[north platte:riverid/2,1094000length],[salt lake city_ut:cityid/3,163034count],[hollywood_fl:cityid/3,117188count],[albany_ny:cityid/3,101727count],[redondo beach_ca:cityid/3,57102count],[san bernardino_ca:cityid/3,118794count],[providence_ri:cityid/3,156804count],[south bend_in:cityid/3,109727count],[fairfield_ca:cityid/3,58099count],[woodall mountain:placeid/2,246length],[little rock_ar:cityid/3,158915count],[lawrence_ma:cityid/3,63175count],[bristol township_pa:cityid/3,58733count],[champaign_il:cityid/3,58267count],[lynn_ma:cityid/3,78471count],[santa monica_ca:cityid/3,88314count],[columbus_oh:cityid/3,564871count],[cimarron:riverid/2,965000length],[altoona_pa:cityid/3,57078count],[mount rainier:placeid/2,4392length],[silver spring_md:cityid/3,72893count],[charleston_sc:cityid/3,69855count],[oklahoma city_ok:cityid/3,403213count],[waltham_ma:cityid/3,58200count],[columbus_ga:cityid/3,169441count],[lakewood_ca:cityid/3,74654count],[houston_tx:cityid/3,1595138count],[massachusetts:stateid/2,2.15e+10length^2],[westminster_ca:cityid/3,71133count],[beaumont_tx:cityid/3,118102count],[clingmans dome:placeid/2,2025length],[boise_id:cityid/3,102249count],[washington:stateid/2,1.76e+11length^2],[colorado river:placeid/2,143length],[dayton_oh:cityid/3,203371count],[meriden_ct:cityid/3,57118count],[tucson_az:cityid/3,330537count],[rainy:lakeid/2,932000000length^2],[long beach_ca:cityid/3,361334count],[charleston_wv:cityid/3,63968count],[abilene_tx:cityid/3,98315count],[potomac:riverid/2,462000length],[plano_tx:cityid/3,72331count],[wilmington_de:cityid/3,70195count],[memphis_tn:cityid/3,646356count],[teshekpuk:lakeid/2,816000000length^2],[ouachita:riverid/2,973000length],[campbell hill:placeid/2,472length],[flint_mi:cityid/3,159611count],[metairie_la:cityid/3,164160count],[odessa_tx:cityid/3,90027count],[bethesda_md:cityid/3,63022count],[magazine mountain:placeid/2,839length],[muncie_in:cityid/3,77216count],[tenleytown:placeid/2,125length],[dearborn_mi:cityid/3,90660count],[hawaii:stateid/2,1.68e+10length^2],[tennessee:riverid/2,1049000length],[trenton_nj:cityid/3,92124count],[clinton_mi:cityid/3,72400count],[chesapeake_va:cityid/3,114226count],[eagle mountain:placeid/2,701length],[alameda_ca:cityid/3,63852count],[rochester_ny:cityid/3,241741count],[cleveland_oh:cityid/3,573822count],[florida:stateid/2,1.78e+11length^2],[austin_tx:cityid/3,345496count],[modesto_ca:cityid/3,106963count],[high point:placeid/2,550length],[tennessee:stateid/2,1.09e+11length^2],[arkansas river:placeid/2,1021length],[missouri:stateid/2,1.81e+11length^2],[new haven_ct:cityid/3,126089count],[ontario:lakeid/2,1.97e+10length^2],[tacoma_wa:cityid/3,158501count],[anderson_in:cityid/3,64695count],[mississippi:riverid/2,3778000length],[lakewood_oh:cityid/3,61963count],[fort collins_co:cityid/3,64632count],[farmington hills_mi:cityid/3,58056count],[black mesa:placeid/2,1516length],[sassafras mountain:placeid/2,1085length],[clifton_nj:cityid/3,74388count],[pawtucket_ri:cityid/3,71204count],[canadian:riverid/2,1458000length],[cambridge_ma:cityid/3,95322count],[taylor_mi:cityid/3,77568count],[san jose_ca:cityid/3,629442count],[glendale_ca:cityid/3,139060count],[warwick_ri:cityid/3,87123count],[arkansas:riverid/2,2333000length],[laredo_tx:cityid/3,91449count],[georgia:stateid/2,1.53e+11length^2],[seattle_wa:cityid/3,493846count],[verdigris river:placeid/2,207length],[west valley_ut:cityid/3,72299count],[omaha_ne:cityid/3,314255count],[miami beach_fl:cityid/3,96298count],[roanoke:riverid/2,660000length],[reno_nv:cityid/3,100756count],[cumberland:riverid/2,1105000length],[lincoln_ne:cityid/3,171932count],[dallas_tx:cityid/3,904078count],[mount frissell:placeid/2,725length],[tampa_fl:cityid/3,271523count],[chattanooga_tn:cityid/3,169728count],[waco_tx:cityid/3,101261count],[green:riverid/2,1175000length],[baltimore_md:cityid/3,786775count],[dubuque_ia:cityid/3,62321count],[ventura_ca:cityid/3,73774count],[st. paul_mn:cityid/3,270230count],[buffalo_ny:cityid/3,357870count],[alabama:stateid/2,1.34e+11length^2],[green bay_wi:cityid/3,87899count],[lowell_ma:cityid/3,92418count],[atlanta_ga:cityid/3,425022count],[st. joseph_mo:cityid/3,76691count],[fort worth_tx:cityid/3,385164count],[potomac river:placeid/2,0length],[pontchartrain:lakeid/2,1632000000length^2],[republican:riverid/2,679000length],[sterling heights_mi:cityid/3,108999count],[salem_or:cityid/3,89233count],[wheeler peak:placeid/2,4011length],[huntsville_al:cityid/3,142513count],[middletown_nj:cityid/3,61615count],[allentown_pa:cityid/3,103758count],[san mateo_ca:cityid/3,77640count],[south gate_ca:cityid/3,66784count],[citrus heights_ca:cityid/3,85911count],[washington_dc:cityid/3,638333count],[maryland:stateid/2,2.71e+10length^2],[kalamazoo_mi:cityid/3,79722count],[vermont:stateid/2,2.49e+10length^2],[newark_nj:cityid/3,329248count],[knoxville_tn:cityid/3,175030count],[pomona_ca:cityid/3,92742count],[east los angeles_ca:cityid/3,110017count],[detroit_mi:cityid/3,1203339count],[richmond_ca:cityid/3,74676count],[fayetteville_nc:cityid/3,59507count],[red:lakeid/2,1169000000length^2],[norfolk_va:cityid/3,266979count],[irving_tx:cityid/3,109943count],[danbury_ct:cityid/3,60470count],[mobile_al:cityid/3,200452count],[ohio river:placeid/2,98length],[charles mound:placeid/2,376length],[irvington_nj:cityid/3,61493count],[orlando_fl:cityid/3,128394count],[kenner_la:cityid/3,66382count],[westland_mi:cityid/3,84603count],[winston-salem_nc:cityid/3,131885count],[fort lauderdale_fl:cityid/3,153256count],[milwaukee_wi:cityid/3,636212count],[scranton_pa:cityid/3,88117count],[anchorage_ak:cityid/3,174431count],[death valley:placeid/2,-85length],[rochester_mn:cityid/3,57906count],[mount washington:placeid/2,1917length],[potomac river:placeid/2,73length],[little missouri:riverid/2,901000length],[spruce knob:placeid/2,1482length],[hammond_in:cityid/3,93714count],[mount davis:placeid/2,979length],[wabash:riverid/2,764000length],[ogden_ut:cityid/3,64407count],[abingdon_pa:cityid/3,59084count],[rio grande:riverid/2,3033000length],[rhode island:stateid/2,3.14e+09length^2],[little river:placeid/2,87length],[madison_wi:cityid/3,170616count],[champlain:lakeid/2,1114000000length^2],[mississippi river:placeid/2,78length],[hamilton_oh:cityid/3,63189count],[sioux falls_sd:cityid/3,81343count],[vallejo_ca:cityid/3,80188count],[burbank_ca:cityid/3,84625count],[santa rosa_ca:cityid/3,83205count],[lexington_ky:cityid/3,204165count],[shreveport_la:cityid/3,205820count],[yellowstone:riverid/2,1080000length],[birmingham_al:cityid/3,284413count],[mount rogers:placeid/2,1746length],[atlantic ocean:placeid/2,0length],[dearborn heights_mi:cityid/3,67706count],[lake superior:placeid/2,183length],[billings_mt:cityid/3,66842count],[naknek:lakeid/2,630000000length^2],[brasstown bald:placeid/2,1458length],[mesa_az:cityid/3,152453count],[ohio river:placeid/2,132length],[el cajon_ca:cityid/3,73892count],[tombigbee:riverid/2,658000length],[arizona:stateid/2,2.95e+11length^2],[corpus christi_tx:cityid/3,231999count],[snake:riverid/2,1670000length],[pasadena_ca:cityid/3,118072count],[canton_oh:cityid/3,93077count],[mount vernon_ny:cityid/3,66713count],[reading_pa:cityid/3,78686count],[bloomington_mn:cityid/3,81831count],[levittown_ny:cityid/3,57045count],[kendall_fl:cityid/3,73758count],[manchester_nh:cityid/3,90936count],[ann arbor_mi:cityid/3,107969count],[livonia_mi:cityid/3,104814count],[cicero_il:cityid/3,61232count],[gannett peak:placeid/2,4202length],[el monte_ca:cityid/3,79494count],[kansas city_mo:cityid/3,448159count],[washita:riverid/2,805000length],[mount hood:placeid/2,3424length],[cincinnati_oh:cityid/3,385457count],[waukegan_il:cityid/3,67653count],[south carolina:stateid/2,8.06e+10length^2],[oklahoma:stateid/2,1.81e+11length^2],[oregon:stateid/2,2.51e+11length^2],[grand rapids_mi:cityid/3,181843count],[mississippi river:placeid/2,146length],[elizabeth_nj:cityid/3,106201count],[phoenix_az:cityid/3,789704count],[pensacola_fl:cityid/3,57619count],[fremont_ca:cityid/3,131945count],[rock:riverid/2,459000length],[new hampshire:stateid/2,2.40e+10length^2],[boulder_co:cityid/3,76685count],[mount sunflower:placeid/2,1231length],[louisville_ky:cityid/3,298451count],[tahoe:lakeid/2,497000000length^2],[delaware:riverid/2,451000length],[great salt lake:lakeid/2,5.18e+09length^2],[new britain_ct:cityid/3,73840count],[richardson_tx:cityid/3,72496count],[arlington_va:cityid/3,152599count],[warren_mi:cityid/3,161134count],[toledo_oh:cityid/3,354635count],[north dakota:stateid/2,1.83e+11length^2],[mississippi river:placeid/2,85length],[niagara falls_ny:cityid/3,71384count],[gulf of mexico:placeid/2,0length],[evansville_in:cityid/3,130496count],[philadelphia_pa:cityid/3,1688210count],[brownsville_tx:cityid/3,84997count],[yonkers_ny:cityid/3,195351count],[waterford_mi:cityid/3,64250count],[west virginia:stateid/2,6.27e+10length^2],[glendale_az:cityid/3,96988count],[monroe_la:cityid/3,57597count],[north charleston_sc:cityid/3,62504count],[tyler_tx:cityid/3,70508count],[costa mesa_ca:cityid/3,82291count],[norwalk_ct:cityid/3,77767count],[santa clara_ca:cityid/3,87700count],[saginaw_mi:cityid/3,77508count],[black mountain:placeid/2,1263length],[springfield_il:cityid/3,100054count],[kentucky:stateid/2,2.13e+11length^2],[nashua_nh:cityid/3,67865count],[des moines_ia:cityid/3,191003count],[southfield_mi:cityid/3,75568count],[franklin township:placeid/2,383length],[newport news_va:cityid/3,144903count],[ocheyedan mound:placeid/2,511length],[granite peak:placeid/2,3901length],[okeechobee:lakeid/2,1810000000length^2],[driskill mountain:placeid/2,163length],[guadalupe peak:placeid/2,2667length],[san leandro_ca:cityid/3,63952count],[arvada_co:cityid/3,84576count],[st. louis_mo:cityid/3,453085count],[akron_oh:cityid/3,237177count],[lafayette_la:cityid/3,80584count],[lorain_oh:cityid/3,75416count],[sunnyvale_ca:cityid/3,106618count],[st. petersburg_fl:cityid/3,238647count],[san francisco_ca:cityid/3,678974count],[charlotte_nc:cityid/3,314447count],[new bedford_ma:cityid/3,98478count],[east orange_nj:cityid/3,77878count],[parma_oh:cityid/3,92548count],[high point_nc:cityid/3,64107count],[thousand oaks_ca:cityid/3,77797count],[mississippi river:placeid/2,55length],[timms hill:placeid/2,595length],[jersey city_nj:cityid/3,223532count],[savannah_ga:cityid/3,141654count],[jerimoth hill:placeid/2,247length],[new jersey:stateid/2,2.02e+10length^2],[mcallen_tx:cityid/3,67042count],[norwalk_ca:cityid/3,84901count],[virginia:stateid/2,1.06e+11length^2],[minnesota:stateid/2,2.19e+11length^2],[portsmouth_va:cityid/3,104577count],[mauna kea:placeid/2,4205length],[wyoming:stateid/2,2.53e+11length^2],[macon_ga:cityid/3,116860count],[lake erie:placeid/2,174length],[schenectady_ny:cityid/3,67972count],[connecticut:riverid/2,655000length],[red river:placeid/2,229length],[great falls_mt:cityid/3,56725count],[west allis_wi:cityid/3,63982count],[fresno_ca:cityid/3,218202count],[ewa_hi:cityid/3,190037count],[davenport_ia:cityid/3,103254count],[missouri:riverid/2,3968000length],[bighorn:riverid/2,541000length],[superior:lakeid/2,8.24e+10length^2],[iowa:stateid/2,1.46e+11length^2],[miami_fl:cityid/3,346865count],[becharof:lakeid/2,1186000000length^2],[kootenai river:placeid/2,549length],[hartford_ct:cityid/3,136392count],[longview_tx:cityid/3,62762count],[scottsdale_az:cityid/3,88622count],[baton rouge_la:cityid/3,219419count],[fort smith_ar:cityid/3,71384count],[joliet_il:cityid/3,77956count],[greensboro_nc:cityid/3,155642count],[cheektowaga_ny:cityid/3,92145count],[scotts valley_ca:cityid/3,6037count],[mount mckinley:placeid/2,6194length],[dakota:riverid/2,1142000length],[greenville_sc:cityid/3,58242count],[pecos:riverid/2,805000length],[alaska:stateid/2,1.53e+12length^2],[garden grove_ca:cityid/3,123351count],[escondido_ca:cityid/3,62480count],[royal oak_mi:cityid/3,70893count],[cheyenne:riverid/2,848000length],[west hartford_ct:cityid/3,61301count],[durham_nc:cityid/3,100538count],[irondequoit_ny:cityid/3,57648count],[montana:stateid/2,3.81e+11length^2],[springfield_mo:cityid/3,133116count],[walton county:placeid/2,105length],[west palm beach_fl:cityid/3,62530count],[colorado river:placeid/2,21length],[niobrara:riverid/2,693000length],[albany_ga:cityid/3,74425count],[district of columbia:stateid/2,2.85e+09length^2],[columbia_mo:cityid/3,62061count],[boston_ma:cityid/3,562994count],[chattahoochee:riverid/2,702000length],[pearl:riverid/2,788000length],[borah peak:placeid/2,3859length],[johnson township:placeid/2,1654length],[portland_me:cityid/3,61572count],[clark fork:riverid/2,483000length],[lakewood_co:cityid/3,113808count],[mount mitchell:placeid/2,2037length],[bakersfield_ca:cityid/3,105611count],[new york:stateid/2,1.27e+11length^2],[virginia beach_va:cityid/3,262199count],[california:stateid/2,4.09e+11length^2],[somerville_ma:cityid/3,77372count],[denver_co:cityid/3,492365count],[torrance_ca:cityid/3,131497count],[aurora_il:cityid/3,81293count],[pasadena_tx:cityid/3,112560count],[new orleans_la:cityid/3,557515count],[springfield_oh:cityid/3,72563count],[albuquerque_nm:cityid/3,331767count],[upper darby_pa:cityid/3,84054count],[red:riverid/2,1638000length],[arlington heights_il:cityid/3,66116count],[louisiana:stateid/2,1.24e+11length^2],[raleigh_nc:cityid/3,149771count],[peoria_il:cityid/3,124160count],[woodbridge_nj:cityid/3,90074count],[largo_fl:cityid/3,58977count],[st. clair:lakeid/2,1119000000length^2],[white:riverid/2,1110000length],[appleton_wi:cityid/3,58913count],[white butte:placeid/2,1069length],[mesquite_tx:cityid/3,67053count],[lake of the woods:lakeid/2,4.39e+09length^2],[pennsylvania:stateid/2,1.17e+11length^2],[cheaha mountain:placeid/2,734length],[tempe_az:cityid/3,106919count],[idaho:stateid/2,2.15e+11length^2],[penn hills_pa:cityid/3,57632count],[kings peak:placeid/2,4123length],[mount marcy:placeid/2,1629length],[north carolina:stateid/2,1.36e+11length^2],[paterson_nj:cityid/3,137970count],[utah:stateid/2,2.20e+11length^2],[amarillo_tx:cityid/3,149230count],[mount elbert:placeid/2,4399length],[red bluff reservoir:placeid/2,859length],[concord_ca:cityid/3,103763count],[roanoke_va:cityid/3,100427count],[humphreys peak:placeid/2,3851length],[columbia:riverid/2,1953000length],[provo_ut:cityid/3,74111count],[lubbock_tx:cityid/3,173979count],[alexandria_va:cityid/3,103217count],[pittsburgh_pa:cityid/3,423938count],[elyria_oh:cityid/3,57504count],[new orleans:placeid/2,-1length],[richmond_va:cityid/3,219214count],[gainesville_fl:cityid/3,81371count],[pueblo_co:cityid/3,101686count],[fall river_ma:cityid/3,92574count],[downey_ca:cityid/3,82602count],[edison_nj:cityid/3,70193count],[delaware river:placeid/2,0length],[lower merion_pa:cityid/3,59651count],[minneapolis_mn:cityid/3,370951count],[casper_wy:cityid/3,51016count],[nebraska:stateid/2,2.00e+11length^2],[oakland_ca:cityid/3,339337count],[snake river:placeid/2,216length],[quincy_ma:cityid/3,84743count],[mountain view_ca:cityid/3,58655count],[las vegas_nv:cityid/3,164674count],[ohio:riverid/2,1569000length],[youngstown_oh:cityid/3,115436count],[illinois:stateid/2,1.46e+11length^2],[port arthur_tx:cityid/3,61195count],[medford_ma:cityid/3,58076count],[allegheny:riverid/2,523000length],[lake champlain:placeid/2,29length],[framingham_ma:cityid/3,65113count],[buena park_ca:cityid/3,64165count],[mille lacs:lakeid/2,536000000length^2],[michigan:lakeid/2,5.80e+10length^2],[worcester_ma:cityid/3,161799count],[troy_mi:cityid/3,67102count],[kettering_oh:cityid/3,61186count],[mount mansfield:placeid/2,1339length],[san antonio_tx:cityid/3,785880count],[el paso_tx:cityid/3,425259count],[huntington beach_ca:cityid/3,170505count],[portland_or:cityid/3,366383count],[new mexico:stateid/2,3.15e+11length^2],[montgomery_al:cityid/3,177857count],[racine_wi:cityid/3,85725count],[salton sea:lakeid/2,932000000length^2],[south dakota:stateid/2,2.00e+11length^2],[south platte:riverid/2,682000length],[mount greylock:placeid/2,1064length],[jacksonville_fl:cityid/3,540920count],[sacramento_ca:cityid/3,275741count],[kansas:stateid/2,2.13e+11length^2],[daly city_ca:cityid/3,78519count],[pacific ocean:placeid/2,0length],[st. francis river:placeid/2,70length],[cedar rapids_ia:cityid/3,110243count],[springfield_ma:cityid/3,152319count],[smoky hill:riverid/2,869000length],[fargo_nd:cityid/3,61308count],[duluth_mn:cityid/3,92811count],[huron:lakeid/2,5.96e+10length^2],[whittier_ca:cityid/3,68558count],[mount curwood:placeid/2,604length],[lake michigan:placeid/2,177length],[bethlehem_pa:cityid/3,70419count],[boundary peak:placeid/2,4005length],[oak lawn_il:cityid/3,60590count],[dundalk_md:cityid/3,71293count],[topeka_ks:cityid/3,118690count],[hayward_ca:cityid/3,93585count],[nashville_tn:cityid/3,455651count],[north little rock_ar:cityid/3,64388count],[stockton_ca:cityid/3,149779count],[san angelo_tx:cityid/3,73240count],[ouachita river:placeid/2,17length],[columbia_sc:cityid/3,101229count],[carson_ca:cityid/3,81221count],[flathead:lakeid/2,510000000length^2],[tuscaloosa_al:cityid/3,75143count],[eugene_or:cityid/3,105664count],[santa barbara_ca:cityid/3,74542count],[lansing_mi:cityid/3,130414count],[arkansas:stateid/2,1.38e+11length^2],[aurora_co:cityid/3,158588count],[mississippi:stateid/2,1.24e+11length^2],[harney peak:placeid/2,2207length],[new york_ny:cityid/3,7071639count],[fort wayne_in:cityid/3,172196count]}:{[placeid/2,length],[lakeid/2,length^2],[cityid/3,count],[stateid/2,length^2],[riverid/2,length]}[0] => {}:error]} | answer(A,largest(B,(state(A),loc(A,B))))
        Example tmpmq8f_g1t.dlog:676: query => {[great falls_mt:cityid/3],[billings_mt:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(montana))))
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:678: query => {[3005172count]} | answer(A,(population(B,A),const(B,cityid(chicago,_))))
        Example tmpmq8f_g1t.dlog:679: query => {[3005172count]} | answer(A,(population(B,A),const(B,cityid(chicago,_))))
        Example tmpmq8f_g1t.dlog:680: query => {[lansing_mi:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(michigan))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:681: query => {[3005172count]} | answer(A,(population(B,A),const(B,cityid(chicago,_))))
        Example tmpmq8f_g1t.dlog:682: query => {[columbia_sc:cityid/3],[phoenix_az:cityid/3],[baton rouge_la:cityid/3],[salt lake city_ut:cityid/3],[concord_nh:cityid/3],[boise_id:cityid/3],[richmond_va:cityid/3],[boston_ma:cityid/3],[cheyenne_wy:cityid/3],[madison_wi:cityid/3],[des moines_ia:cityid/3],[salem_or:cityid/3],[raleigh_nc:cityid/3],[indianapolis_in:cityid/3],[oklahoma city_ok:cityid/3],[jackson_ms:cityid/3],[nashville_tn:cityid/3],[hartford_ct:cityid/3],[washington_dc:cityid/3],[little rock_ar:cityid/3],[austin_tx:cityid/3],[juneau_ak:cityid/3],[providence_ri:cityid/3],[tallahassee_fl:cityid/3],[lincoln_ne:cityid/3],[bismarck_nd:cityid/3],[santa fe_nm:cityid/3],[charleston_wv:cityid/3],[sacramento_ca:cityid/3],[st. paul_mn:cityid/3],[lansing_mi:cityid/3],[trenton_nj:cityid/3],[columbus_oh:cityid/3],[honolulu_hi:cityid/3],[atlanta_ga:cityid/3],[montgomery_al:cityid/3],[topeka_ks:cityid/3],[denver_co:cityid/3],[springfield_il:cityid/3],[dover_de:cityid/3],[albany_ny:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,countryid(usa))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:683: query => {[944000count]} | answer(A,(population(B,A),const(B,stateid(idaho))))
        Example tmpmq8f_g1t.dlog:684: query => {[dakota:riverid/2],[gila:riverid/2],[connecticut:riverid/2],[clark fork:riverid/2],[allegheny:riverid/2],[south platte:riverid/2],[washita:riverid/2],[hudson:riverid/2],[snake:riverid/2],[tombigbee:riverid/2],[chattahoochee:riverid/2],[pecos:riverid/2],[arkansas:riverid/2],[roanoke:riverid/2],[colorado:riverid/2],[little missouri:riverid/2],[delaware:riverid/2],[wateree catawba:riverid/2],[cimarron:riverid/2],[white:riverid/2],[powder:riverid/2],[cumberland:riverid/2],[bighorn:riverid/2],[niobrara:riverid/2],[columbia:riverid/2],[tennessee:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[pearl:riverid/2],[potomac:riverid/2],[canadian:riverid/2],[republican:riverid/2],[red:riverid/2],[neosho:riverid/2],[north platte:riverid/2],[ouachita:riverid/2],[yellowstone:riverid/2],[cheyenne:riverid/2],[green:riverid/2],[san juan:riverid/2],[missouri:riverid/2],[st. francis:riverid/2]} | answer(A,(river(A),\+(traverse(A,B),const(B,stateid(illinois)))))
        Example tmpmq8f_g1t.dlog:685: query => {[8.62e+10length^2]} | answer(A,(area(B,A),const(B,stateid(maine))))
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:687: query => {[2.15e+11length^2]} | answer(A,(area(B,A),const(B,stateid(idaho))))
        Example tmpmq8f_g1t.dlog:688: query => {[baton rouge_la:cityid/3],[new orleans_la:cityid/3],[monroe_la:cityid/3],[metairie_la:cityid/3],[lake charles_la:cityid/3],[lafayette_la:cityid/3],[shreveport_la:cityid/3],[kenner_la:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(louisiana))))
        Example tmpmq8f_g1t.dlog:689: query => {[4113200count]} | answer(A,(population(B,A),const(B,stateid(washington))))
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:691: query => {[1125000count]} | answer(A,(population(B,A),const(B,stateid(maine))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:692: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example tmpmq8f_g1t.dlog:693: query => {[augusta_me:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(maine))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:694: query => {[3778000length]} | answer(A,(len(B,A),const(B,riverid(mississippi))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:695: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:696: query => {[wabash:riverid/2],[ohio:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(ohio))))
        Example tmpmq8f_g1t.dlog:697: query => {} | answer(A,(river(A),traverse(A,B),const(B,stateid(maine))))
        Example tmpmq8f_g1t.dlog:698: query => {[0count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(alaska))),A))
        Example tmpmq8f_g1t.dlog:699: query => {[harrisburg_pa:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(pennsylvania))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:700: query => {} | answer(A,(river(A),traverse(A,B),const(B,stateid(alaska))))
        Example tmpmq8f_g1t.dlog:701: query => {[ohio:riverid/2],[delaware:riverid/2],[allegheny:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(pennsylvania))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:702: query => {[arkansas:riverid/2],[cimarron:riverid/2],[smoky hill:riverid/2],[republican:riverid/2],[neosho:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(kansas))))
        Example tmpmq8f_g1t.dlog:703: query => {[3.15e+11length^2]} | answer(A,(size(B,A),const(B,stateid('new mexico'))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:704: query => {[sitka_ak:cityid/3],[fairbanks_ak:cityid/3],[anchorage_ak:cityid/3],[juneau_ak:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(alaska))))
        Example tmpmq8f_g1t.dlog:705: query => {} | answer(A,(state(A),next_to(A,B),const(B,stateid(alaskawestmexico))))
        Example tmpmq8f_g1t.dlog:706: query => {[mississippi:riverid/2],[missouri:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(iowa))))
        Example tmpmq8f_g1t.dlog:707: query => {} | answer(A,(river(A),traverse(A,B),const(B,stateid(maine))))
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:709: query => {[cumberland:riverid/2],[mississippi:riverid/2],[tennessee:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(tennessee))))
        Example tmpmq8f_g1t.dlog:710: query => {[4113200count]} | answer(A,(population(B,A),const(B,stateid(washington))))
        Example tmpmq8f_g1t.dlog:711: query => {} | answer(A,(state(A),next_to(A,B),const(B,stateid(hawaiinew))))
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:713: query => {} | answer(A,(river(A),traverse(A,B),const(B,stateid(maine))))
        Example tmpmq8f_g1t.dlog:714: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpmq8f_g1t.dlog:715: query => {[south platte:riverid/2],[arkansas:riverid/2],[colorado:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[republican:riverid/2],[north platte:riverid/2],[green:riverid/2],[san juan:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(colorado))))
        Example tmpmq8f_g1t.dlog:716: query => {[texas:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,cityid(dallas,_))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:717: query => {[massachusetts:stateid/2],[connecticut:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid('rhode island'))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:718: query => {[3778000length]} | answer(A,(len(B,A),const(B,riverid(mississippi))))
        Example tmpmq8f_g1t.dlog:719: query => {[lakewood_co:cityid/3],[pueblo_co:cityid/3],[aurora_co:cityid/3],[arvada_co:cityid/3],[boulder_co:cityid/3],[fort collins_co:cityid/3],[colorado springs_co:cityid/3],[denver_co:cityid/3]} | answer(A,(city(A),city(A),loc(A,B),const(B,stateid(colorado))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:720: query => {[minnesota:stateid/2],[new york:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,cityid(rochester,_))))
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:723: query => {[minnesota:stateid/2],[new york:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,cityid(rochester,_))))
        Example tmpmq8f_g1t.dlog:724: query => {[2.00e+11length^2]} | answer(A,(size(B,A),const(B,stateid('south dakota'))))
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:725: query => {[potomac:riverid/2],[roanoke:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(virginia))))
        Example tmpmq8f_g1t.dlog:726: query => {[colorado:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(nevada))))
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:728: query => {} | answer(A,(river(A),traverse(A,B),const(B,stateid(maine))))
        Example tmpmq8f_g1t.dlog:729: query => {[potomac:riverid/2],[roanoke:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(virginia))))
        Example tmpmq8f_g1t.dlog:730: query => {[1.83e+11length^2]} | answer(A,(size(B,A),const(B,stateid('north dakota'))))
        Example tmpmq8f_g1t.dlog:731: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpmq8f_g1t.dlog:732: query => {[76685count]} | answer(A,(population(B,A),const(B,cityid(boulder,_))))
        Example tmpmq8f_g1t.dlog:733: query => {[south platte:riverid/2],[arkansas:riverid/2],[colorado:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[republican:riverid/2],[north platte:riverid/2],[green:riverid/2],[san juan:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(colorado))))
        Example tmpmq8f_g1t.dlog:734: query => {} | answer(A,(population(B,A),const(B,stateid(boulder))))
        Example tmpmq8f_g1t.dlog:735: query => {[arkansas:riverid/2],[white:riverid/2],[mississippi:riverid/2],[red:riverid/2],[ouachita:riverid/2],[st. francis:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(arkansas))))
        Example tmpmq8f_g1t.dlog:736: query => {} | answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:738: query => {} | answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:740: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example tmpmq8f_g1t.dlog:741: query => {[maine:stateid/2]} | answer(A,(state(A),const(A,B),const(B,stateid(maine))))
        Example tmpmq8f_g1t.dlog:742: query => {[utah:stateid/2],[wyoming:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[kansas:stateid/2],[nebraska:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(colorado))))
        Example tmpmq8f_g1t.dlog:743: query => {[utah:stateid/2],[wyoming:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[kansas:stateid/2],[nebraska:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(colorado))))
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:746: query => {[georgia:stateid/2],[tennessee:stateid/2],[florida:stateid/2],[mississippi:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))
        Example tmpmq8f_g1t.dlog:747: query => {[ohio:stateid/2],[indiana:stateid/2],[wisconsin:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(michigan))))
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:749: query => {[6.91e+11length^2]} | answer(A,(size(B,A),const(B,stateid(texas))))
        Example tmpmq8f_g1t.dlog:750: query => {[georgia:stateid/2],[tennessee:stateid/2],[florida:stateid/2],[mississippi:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:752: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example FAILED TO EXECUTE
        Example tmpmq8f_g1t.dlog:754: query => {[georgia:stateid/2],[tennessee:stateid/2],[florida:stateid/2],[mississippi:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))
        Example tmpmq8f_g1t.dlog:755: query => {[california:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,cityid('san diego',_))))
        Example tmpmq8f_g1t.dlog:756: query => {[georgia:stateid/2],[tennessee:stateid/2],[florida:stateid/2],[mississippi:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))
        Example tmpmq8f_g1t.dlog:757: query => {[georgia:stateid/2],[tennessee:stateid/2],[florida:stateid/2],[mississippi:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))
        Example tmpmq8f_g1t.dlog:758: query => {[ohio:stateid/2],[indiana:stateid/2],[wisconsin:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(michigan))))
        Example tmpmq8f_g1t.dlog:759: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example tmpmq8f_g1t.dlog:760: query => {} | answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))
        Example tmpmq8f_g1t.dlog:761: query => {[mississippi:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[texas:stateid/2],[tennessee:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(arkansas))))
        Example tmpmq8f_g1t.dlog:762: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example tmpmq8f_g1t.dlog:763: query => {} | answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))
        Example tmpmq8f_g1t.dlog:764: query => {[california:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,placeid('mount whitney'))))
        Example tmpmq8f_g1t.dlog:765: query => {[76685count]} | answer(A,(population(B,A),const(B,cityid(boulder,_))))
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpmq8f_g1t.dlog:767: query => {[76685count]} | answer(A,(population(B,A),const(B,cityid(boulder,_))))
        Example FAILED TO EXECUTE
      } [3.9s, cum. 5.9s]
    } [5.9s, cum. 5.9s]
    Randomly splitting 690 general examples
    483 training examples, 207 test examples
  } [5.9s, cum. 6.0s]
  Execution directory: /Users/ms75986/Desktop/Fall2019/NLP/Project2/hw2-distrib-2/state/execs/129.exec
} [6.0s]
