Namespace(batch_size=2, decoder_len_limit=65, dev_path='data/geo_dev.tsv', do_nearest_neighbor=False, domain='geo', epochs=100, lr=0.001, seed=0, test_output_path='geo_test_output.tsv', test_path='data/geo_test.tsv', train_path='data/geo_train.tsv')
0 / 480 pos exs
0 / 120 pos exs
0 / 280 pos exs
480 train exs, 120 dev exs, 238 input types, 153 output types
Input indexer: ['<PAD>', '<UNK>', 'what', 'are', 'the', 'rivers', 'of', 'montana', '?', 'is', 'longest', 'river', 'in', 'pennsylvania', 'highest', 'point', 'rhode', 'island', 'density', 'texas', 'states', 'border', 'ohio', 'that', 'flows', 'through', 'colorado', 'have', 'cities', 'named', 'austin', 'biggest', 'state', 'usa', 'shortest', 'nebraska', 'size', 'california', 'how', 'many', 'found', 'capital', 'alabama', 'city', 'has', 'largest', 'population', 'with', 'lowest', 'people', 'boulder', 'cross', 'over', 'sacramento', 'which', 'elevation', 'major', 'smallest', 'us', 'boston', 'massachusetts', 'borders', 'least', 'excluding', 'alaska', 'and', 'hawaii', 'called', 'big', 'length', 'runs', 'most', 'number', 'area', 'live', 'riverside', 'united', 'contains', 'does', 'greatest', 'give', 'me', 'south', 'carolina', 'run', 'name', 'no', 'surrounding', 'there', 'washington', 'populations', 'all', 'maryland', 'next', 'to', 'indiana', 'new', 'mexico', 'michigan', 'tennessee', 'combined', 'flint', 'illinois', 'tallest', 'mountain', 'dallas', 'flow', 'iowa', 'adjacent', 'urban', 'citizens', 'high', 'higher', 'than', 'georgia', 'where', 'scotts', 'valley', 'york', 'denver', 'wisconsin', 'long', 'a', 'springfield', 'neighbor', 'maine', 'kansas', 'sparsest', 'missouri', 'portland', '50', 'capitals', 'can', 'you', 'tell', 'about', 'houston', 'mississippi', 'lakes', 'arkansas', 'atlanta', 'total', 'do', 'spokane', 'seattle', 'square', 'kilometers', 'oregon', 'height', 'mount', 'mckinley', 'each', 'whose', 'sea', 'level', 'towns', 'minnesota', 'kalamazoo', 'continental', 'neighboring', 'for', 'kentucky', 'longer', 'red', 'west', 'virginia', 'other', 'mountains', 'bordering', 'hampshire', 'des', 'moines', 'nevada', 'vermont', 'wyoming', 'san', 'jose', 'not', 'traverse', 'albany', 'dc', 'delaware', 'columbus', 'list', 'florida', 'salem', 'rio', 'grande', 'traverses', 'arizona', 'adjoin', 'located', 'populated', 'chicago', 'rochester', 'dakota', 'idaho', 'running', 'it', 'louisiana', 'miles', 'show', 'pittsburgh', 'utah', 'traversed', 'by', 'oklahoma', 'large', 'inhabitants', 'montgomery', 'points', 'could', 'diego', 'north', 'at', 'one', 'or', 'baton', 'rouge', 'average', 'per', 'km', 'fort', 'wayne', 'spot', 'populous', 'francisco', 'whitney', 'pass', 'death', 'america', 'guadalupe', 'peak', 'passes', 'lie', 'on', 'exist', 'go']
Output indexer: ['<PAD>', '<SOS>', '<EOS>', '_answer', '(', 'NV', ',', '_river', 'V0', ')', '_loc', '_const', '_stateid', 'montana', '_longest', 'pennsylvania', '_highest', '_place', "'", 'rhode', 'island', '_density', 'V1', 'texas', '_state', '_next_to', 'ohio', '_traverse', 'colorado', '_city', '_cityid', 'austin', '_', '_largest', '_countryid', 'usa', '_shortest', 'nebraska', '_size', 'california', '_count', 'V2', '_capital', 'alabama', '_population', '_lowest', 'boulder', 'sacramento', '_elevation', '_major', '_smallest', 'boston', 'ma', '_fewest', '\\+', 'alaska', 'hawaii', '_riverid', 'massachusetts', '_len', '_most', '_area', 'riverside', 'south', 'carolina', 'washington', 'maryland', 'indiana', 'new', 'mexico', 'V3', 'michigan', 'tennessee', '_sum', 'flint', 'illinois', '_mountain', 'dallas', 'iowa', '_high_point', '_higher', 'georgia', 'scotts', 'valley', 'york', 'denver', 'wisconsin', 'springfield', 'maine', 'kansas', 'missouri', 'portland', 'me', 'houston', 'mississippi', '_lake', 'arkansas', 'atlanta', 'spokane', 'wa', 'seattle', 'oregon', '_placeid', 'mount', 'mckinley', '_low_point', '0.0', 'minnesota', 'kalamazoo', 'kentucky', '_longer', 'red', 'west', 'virginia', 'mo', 'tx', 'hampshire', 'des', 'moines', 'nevada', 'vermont', 'wyoming', 'san', 'jose', 'albany', 'dc', 'delaware', 'columbus', 'florida', 'salem', 'rio', 'grande', 'arizona', 'chicago', 'rochester', 'dakota', 'idaho', 'louisiana', 'pittsburgh', 'utah', 'oklahoma', 'montgomery', 'diego', 'north', 'baton', 'rouge', 'fort', 'wayne', 'francisco', 'whitney', 'death', 'guadalupe', 'peak']
Here are some examples post tokenization and indexing:
what are the rivers of montana ? => _answer ( NV , ( _river ( V0 ) , _loc ( V0 , NV ) , _const ( V0 , _stateid ( montana ) ) ) )
   indexed as: [2, 3, 4, 5, 6, 7, 8] => [3, 4, 5, 6, 4, 7, 4, 8, 9, 6, 10, 4, 8, 6, 5, 9, 6, 11, 4, 8, 6, 12, 4, 13, 9, 9, 9, 9, 2]
what is the longest river in pennsylvania ? => _answer ( NV , _longest ( V0 , ( _river ( V0 ) , _loc ( V0 , NV ) , _const ( V0 , _stateid ( pennsylvania ) ) ) ) )
   indexed as: [2, 9, 4, 10, 11, 12, 13, 8] => [3, 4, 5, 6, 14, 4, 8, 6, 4, 7, 4, 8, 9, 6, 10, 4, 8, 6, 5, 9, 6, 11, 4, 8, 6, 12, 4, 15, 9, 9, 9, 9, 9, 2]
what is the highest point in rhode island ? => _answer ( NV , _highest ( V0 , ( _place ( V0 ) , _loc ( V0 , NV ) , _const ( V0 , _stateid ( ' rhode island ' ) ) ) ) )
   indexed as: [2, 9, 4, 14, 15, 12, 16, 17, 8] => [3, 4, 5, 6, 16, 4, 8, 6, 4, 17, 4, 8, 9, 6, 10, 4, 8, 6, 5, 9, 6, 11, 4, 8, 6, 12, 4, 18, 19, 20, 18, 9, 9, 9, 9, 9, 2]
what is the density of texas ? => _answer ( NV , ( _density ( NV , V1 ) , _const ( V0 , _stateid ( texas ) ) ) )
   indexed as: [2, 9, 4, 18, 6, 19, 8] => [3, 4, 5, 6, 4, 21, 4, 5, 6, 22, 9, 6, 11, 4, 8, 6, 12, 4, 23, 9, 9, 9, 9, 2]
what states border ohio ? => _answer ( NV , ( _state ( V0 ) , _next_to ( V0 , NV ) , _const ( V0 , _stateid ( ohio ) ) ) )
   indexed as: [2, 20, 21, 22, 8] => [3, 4, 5, 6, 4, 24, 4, 8, 9, 6, 25, 4, 8, 6, 5, 9, 6, 11, 4, 8, 6, 12, 4, 26, 9, 9, 9, 9, 2]
what is the longest river that flows through colorado ? => _answer ( NV , _longest ( V0 , ( _river ( V0 ) , _traverse ( V0 , NV ) , _const ( V0 , _stateid ( colorado ) ) ) ) )
   indexed as: [2, 9, 4, 10, 11, 23, 24, 25, 26, 8] => [3, 4, 5, 6, 14, 4, 8, 6, 4, 7, 4, 8, 9, 6, 27, 4, 8, 6, 5, 9, 6, 11, 4, 8, 6, 12, 4, 28, 9, 9, 9, 9, 9, 2]
what states have cities named austin ? => _answer ( NV , ( _state ( V0 ) , _loc ( NV , V1 ) , _city ( V0 ) , _const ( V0 , _cityid ( austin , _ ) ) ) )
   indexed as: [2, 20, 27, 28, 29, 30, 8] => [3, 4, 5, 6, 4, 24, 4, 8, 9, 6, 10, 4, 5, 6, 22, 9, 6, 29, 4, 8, 9, 6, 11, 4, 8, 6, 30, 4, 31, 6, 32, 9, 9, 9, 9, 2]
what is the biggest state in the usa ? => _answer ( NV , _largest ( V0 , ( _state ( V0 ) , _loc ( V0 , NV ) , _const ( V0 , _countryid ( usa ) ) ) ) )
   indexed as: [2, 9, 4, 31, 32, 12, 4, 33, 8] => [3, 4, 5, 6, 33, 4, 8, 6, 4, 24, 4, 8, 9, 6, 10, 4, 8, 6, 5, 9, 6, 11, 4, 8, 6, 34, 4, 35, 9, 9, 9, 9, 9, 2]
what is the shortest river in nebraska ? => _answer ( NV , _shortest ( V0 , ( _river ( V0 ) , _loc ( V0 , NV ) , _const ( V0 , _stateid ( nebraska ) ) ) ) )
   indexed as: [2, 9, 4, 34, 11, 12, 35, 8] => [3, 4, 5, 6, 36, 4, 8, 6, 4, 7, 4, 8, 9, 6, 10, 4, 8, 6, 5, 9, 6, 11, 4, 8, 6, 12, 4, 37, 9, 9, 9, 9, 9, 2]
what is the size of california ? => _answer ( NV , ( _size ( NV , V1 ) , _const ( V0 , _stateid ( california ) ) ) )
   indexed as: [2, 9, 4, 36, 6, 37, 8] => [3, 4, 5, 6, 4, 38, 4, 5, 6, 22, 9, 6, 11, 4, 8, 6, 12, 4, 39, 9, 9, 9, 9, 2]
Train length: 19
Train output length: 65
Train matrix: [[  2   9   4 ...  71  20   8]
 [  2   9   4 ...   8   0   0]
 [  2   9   4 ...   8   0   0]
 ...
 [183   4  20 ...   0   0   0]
 [ 46   6  50 ...   0   0   0]
 [115   9 123 ...   0   0   0]]; shape = (480, 19)
encoder_net: RNNEncoder(
  (embedding): Embedding(238, 512)
  (gru): GRU(512, 512)
)
decoder_net: RNNDecoderAttn(
  (embedding): Embedding(153, 512)
  (attn): Linear(in_features=1024, out_features=19, bias=True)
  (attn_combine): Linear(in_features=1024, out_features=512, bias=True)
  (gru): GRU(512, 512)
  (out): Linear(in_features=512, out_features=153, bias=True)
)
epoch_iter 0
